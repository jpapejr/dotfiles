"use strict";var Uc=Object.create;var Yt=Object.defineProperty;var hc=Object.getOwnPropertyDescriptor;var Fc=Object.getOwnPropertyNames;var dc=Object.getPrototypeOf,Gc=Object.prototype.hasOwnProperty;var OE=(E,r)=>()=>(r||E((r={exports:{}}).exports,r),r.exports),ve=(E,r)=>{for(var n in r)Yt(E,n,{get:r[n],enumerable:!0})},UO=(E,r,n,A)=>{if(r&&typeof r=="object"||typeof r=="function")for(let S of Fc(r))!Gc.call(E,S)&&S!==n&&Yt(E,S,{get:()=>r[S],enumerable:!(A=hc(r,S))||A.enumerable});return E};var cE=(E,r,n)=>(n=E!=null?Uc(dc(E)):{},UO(r||!E||!E.__esModule?Yt(n,"default",{value:E,enumerable:!0}):n,E)),Bc=E=>UO(Yt({},"__esModule",{value:!0}),E);var BO=OE((dd,GO)=>{GO.exports=dO;dO.sync=Hc;var hO=require("fs");function mc(E,r){var n=r.pathExt!==void 0?r.pathExt:process.env.PATHEXT;if(!n||(n=n.split(";"),n.indexOf("")!==-1))return!0;for(var A=0;A<n.length;A++){var S=n[A].toLowerCase();if(S&&E.substr(-S.length).toLowerCase()===S)return!0}return!1}function FO(E,r,n){return!E.isSymbolicLink()&&!E.isFile()?!1:mc(r,n)}function dO(E,r,n){hO.stat(E,function(A,S){n(A,A?!1:FO(S,E,r))})}function Hc(E,r){return FO(hO.statSync(E),E,r)}});var xO=OE((Gd,gO)=>{gO.exports=HO;HO.sync=Yc;var mO=require("fs");function HO(E,r,n){mO.stat(E,function(A,S){n(A,A?!1:YO(S,r))})}function Yc(E,r){return YO(mO.statSync(E),r)}function YO(E,r){return E.isFile()&&gc(E,r)}function gc(E,r){var n=E.mode,A=E.uid,S=E.gid,O=r.uid!==void 0?r.uid:process.getuid&&process.getuid(),I=r.gid!==void 0?r.gid:process.getgid&&process.getgid(),C=parseInt("100",8),s=parseInt("010",8),a=parseInt("001",8),c=C|s,_=n&a||n&s&&S===I||n&C&&A===O||n&c&&O===0;return _}});var yO=OE((md,vO)=>{var Bd=require("fs"),gt;process.platform==="win32"||global.TESTING_WINDOWS?gt=BO():gt=xO();vO.exports=dA;dA.sync=xc;function dA(E,r,n){if(typeof r=="function"&&(n=r,r={}),!n){if(typeof Promise!="function")throw new TypeError("callback not provided");return new Promise(function(A,S){dA(E,r||{},function(O,I){O?S(O):A(I)})})}gt(E,r||{},function(A,S){A&&(A.code==="EACCES"||r&&r.ignoreErrors)&&(A=null,S=!1),n(A,S)})}function xc(E,r){try{return gt.sync(E,r||{})}catch(n){if(r&&r.ignoreErrors||n.code==="EACCES")return!1;throw n}}});var JO=OE((Hd,KO)=>{var WT=process.platform==="win32"||process.env.OSTYPE==="cygwin"||process.env.OSTYPE==="msys",VO=require("path"),vc=WT?";":":",WO=yO(),XO=E=>Object.assign(new Error(`not found: ${E}`),{code:"ENOENT"}),bO=(E,r)=>{let n=r.colon||vc,A=E.match(/\//)||WT&&E.match(/\\/)?[""]:[...WT?[process.cwd()]:[],...(r.path||process.env.PATH||"").split(n)],S=WT?r.pathExt||process.env.PATHEXT||".EXE;.CMD;.BAT;.COM":"",O=WT?S.split(n):[""];return WT&&E.indexOf(".")!==-1&&O[0]!==""&&O.unshift(""),{pathEnv:A,pathExt:O,pathExtExe:S}},wO=(E,r,n)=>{typeof r=="function"&&(n=r,r={}),r||(r={});let{pathEnv:A,pathExt:S,pathExtExe:O}=bO(E,r),I=[],C=a=>new Promise((c,_)=>{if(a===A.length)return r.all&&I.length?c(I):_(XO(E));let h=A[a],F=/^".*"$/.test(h)?h.slice(1,-1):h,H=VO.join(F,E),G=!F&&/^\.[\\\/]/.test(E)?E.slice(0,2)+H:H;c(s(G,a,0))}),s=(a,c,_)=>new Promise((h,F)=>{if(_===S.length)return h(C(c+1));let H=S[_];WO(a+H,{pathExt:O},(G,x)=>{if(!G&&x)if(r.all)I.push(a+H);else return h(a+H);return h(s(a,c,_+1))})});return n?C(0).then(a=>n(null,a),n):C(0)},yc=(E,r)=>{r=r||{};let{pathEnv:n,pathExt:A,pathExtExe:S}=bO(E,r),O=[];for(let I=0;I<n.length;I++){let C=n[I],s=/^".*"$/.test(C)?C.slice(1,-1):C,a=VO.join(s,E),c=!s&&/^\.[\\\/]/.test(E)?E.slice(0,2)+a:a;for(let _=0;_<A.length;_++){let h=c+A[_];try{if(WO.sync(h,{pathExt:S}))if(r.all)O.push(h);else return h}catch{}}}if(r.all&&O.length)return O;if(r.nothrow)return null;throw XO(E)};KO.exports=wO;wO.sync=yc});var QO=OE((Yd,GA)=>{"use strict";var $O=(E={})=>{let r=E.env||process.env;return(E.platform||process.platform)!=="win32"?"PATH":Object.keys(r).reverse().find(A=>A.toUpperCase()==="PATH")||"Path"};GA.exports=$O;GA.exports.default=$O});var zO=OE((gd,ZO)=>{"use strict";var qO=require("path"),Vc=JO(),Wc=QO();function kO(E,r){let n=E.options.env||process.env,A=process.cwd(),S=E.options.cwd!=null,O=S&&process.chdir!==void 0&&!process.chdir.disabled;if(O)try{process.chdir(E.options.cwd)}catch{}let I;try{I=Vc.sync(E.command,{path:n[Wc({env:n})],pathExt:r?qO.delimiter:void 0})}catch{}finally{O&&process.chdir(A)}return I&&(I=qO.resolve(S?E.options.cwd:"",I)),I}function Xc(E){return kO(E)||kO(E,!0)}ZO.exports=Xc});var jO=OE((xd,mA)=>{"use strict";var BA=/([()\][%!^"`<>&|;, *?])/g;function bc(E){return E=E.replace(BA,"^$1"),E}function wc(E,r){return E=`${E}`,E=E.replace(/(\\*)"/g,'$1$1\\"'),E=E.replace(/(\\*)$/,"$1$1"),E=`"${E}"`,E=E.replace(BA,"^$1"),r&&(E=E.replace(BA,"^$1")),E}mA.exports.command=bc;mA.exports.argument=wc});var eI=OE((vd,EI)=>{"use strict";EI.exports=/^#!(.*)/});var rI=OE((yd,TI)=>{"use strict";var Kc=eI();TI.exports=(E="")=>{let r=E.match(Kc);if(!r)return null;let[n,A]=r[0].replace(/#! ?/,"").split(" "),S=n.split("/").pop();return S==="env"?A:A?`${S} ${A}`:S}});var nI=OE((Vd,tI)=>{"use strict";var HA=require("fs"),Jc=rI();function $c(E){let n=Buffer.alloc(150),A;try{A=HA.openSync(E,"r"),HA.readSync(A,n,0,150,0),HA.closeSync(A)}catch{}return Jc(n.toString())}tI.exports=$c});var iI=OE((Wd,SI)=>{"use strict";var Qc=require("path"),AI=zO(),RI=jO(),qc=nI(),kc=process.platform==="win32",Zc=/\.(?:com|exe)$/i,zc=/node_modules[\\/].bin[\\/][^\\/]+\.cmd$/i;function jc(E){E.file=AI(E);let r=E.file&&qc(E.file);return r?(E.args.unshift(E.file),E.command=r,AI(E)):E.file}function Ef(E){if(!kc)return E;let r=jc(E),n=!Zc.test(r);if(E.options.forceShell||n){let A=zc.test(r);E.command=Qc.normalize(E.command),E.command=RI.command(E.command),E.args=E.args.map(O=>RI.argument(O,A));let S=[E.command].concat(E.args).join(" ");E.args=["/d","/s","/c",`"${S}"`],E.command=process.env.comspec||"cmd.exe",E.options.windowsVerbatimArguments=!0}return E}function ef(E,r,n){r&&!Array.isArray(r)&&(n=r,r=null),r=r?r.slice(0):[],n=Object.assign({},n);let A={command:E,args:r,options:n,file:void 0,original:{command:E,args:r}};return n.shell?A:Ef(A)}SI.exports=ef});var NI=OE((Xd,II)=>{"use strict";var YA=process.platform==="win32";function gA(E,r){return Object.assign(new Error(`${r} ${E.command} ENOENT`),{code:"ENOENT",errno:"ENOENT",syscall:`${r} ${E.command}`,path:E.command,spawnargs:E.args})}function Tf(E,r){if(!YA)return;let n=E.emit;E.emit=function(A,S){if(A==="exit"){let O=OI(S,r,"spawn");if(O)return n.call(E,"error",O)}return n.apply(E,arguments)}}function OI(E,r){return YA&&E===1&&!r.file?gA(r.original,"spawn"):null}function rf(E,r){return YA&&E===1&&!r.file?gA(r.original,"spawnSync"):null}II.exports={hookChildProcess:Tf,verifyENOENT:OI,verifyENOENTSync:rf,notFoundError:gA}});var CI=OE((bd,XT)=>{"use strict";var uI=require("child_process"),xA=iI(),vA=NI();function sI(E,r,n){let A=xA(E,r,n),S=uI.spawn(A.command,A.args,A.options);return vA.hookChildProcess(S,A),S}function tf(E,r,n){let A=xA(E,r,n),S=uI.spawnSync(A.command,A.args,A.options);return S.error=S.error||vA.verifyENOENTSync(S.status,A),S}XT.exports=sI;XT.exports.spawn=sI;XT.exports.sync=tf;XT.exports._parse=xA;XT.exports._enoent=vA});var UI=OE((iG,Vt)=>{Vt.exports=["SIGABRT","SIGALRM","SIGHUP","SIGINT","SIGTERM"];process.platform!=="win32"&&Vt.exports.push("SIGVTALRM","SIGXCPU","SIGXFSZ","SIGUSR2","SIGTRAP","SIGSYS","SIGQUIT","SIGIOT");process.platform==="linux"&&Vt.exports.push("SIGIO","SIGPOLL","SIGPWR","SIGSTKFLT","SIGUNUSED")});var BI=OE((OG,JT)=>{var oE=global.process,oT=function(E){return E&&typeof E=="object"&&typeof E.removeListener=="function"&&typeof E.emit=="function"&&typeof E.reallyExit=="function"&&typeof E.listeners=="function"&&typeof E.kill=="function"&&typeof E.pid=="number"&&typeof E.on=="function"};oT(oE)?(hI=require("assert"),wT=UI(),FI=/^win/i.test(oE.platform),Pr=require("events"),typeof Pr!="function"&&(Pr=Pr.EventEmitter),oE.__signal_exit_emitter__?dE=oE.__signal_exit_emitter__:(dE=oE.__signal_exit_emitter__=new Pr,dE.count=0,dE.emitted={}),dE.infinite||(dE.setMaxListeners(1/0),dE.infinite=!0),JT.exports=function(E,r){if(!oT(global.process))return function(){};hI.equal(typeof E,"function","a callback must be provided for exit handler"),KT===!1&&wA();var n="exit";r&&r.alwaysLast&&(n="afterexit");var A=function(){dE.removeListener(n,E),dE.listeners("exit").length===0&&dE.listeners("afterexit").length===0&&Wt()};return dE.on(n,E),A},Wt=function(){!KT||!oT(global.process)||(KT=!1,wT.forEach(function(r){try{oE.removeListener(r,Xt[r])}catch{}}),oE.emit=bt,oE.reallyExit=KA,dE.count-=1)},JT.exports.unload=Wt,aT=function(r,n,A){dE.emitted[r]||(dE.emitted[r]=!0,dE.emit(r,n,A))},Xt={},wT.forEach(function(E){Xt[E]=function(){if(oT(global.process)){var n=oE.listeners(E);n.length===dE.count&&(Wt(),aT("exit",null,E),aT("afterexit",null,E),FI&&E==="SIGHUP"&&(E="SIGINT"),oE.kill(oE.pid,E))}}}),JT.exports.signals=function(){return wT},KT=!1,wA=function(){KT||!oT(global.process)||(KT=!0,dE.count+=1,wT=wT.filter(function(r){try{return oE.on(r,Xt[r]),!0}catch{return!1}}),oE.emit=GI,oE.reallyExit=dI)},JT.exports.load=wA,KA=oE.reallyExit,dI=function(r){oT(global.process)&&(oE.exitCode=r||0,aT("exit",oE.exitCode,null),aT("afterexit",oE.exitCode,null),KA.call(oE,oE.exitCode))},bt=oE.emit,GI=function(r,n){if(r==="exit"&&oT(global.process)){n!==void 0&&(oE.exitCode=n);var A=bt.apply(this,arguments);return aT("exit",oE.exitCode,null),aT("afterexit",oE.exitCode,null),A}else return bt.apply(this,arguments)}):JT.exports=function(){return function(){}};var hI,wT,FI,Pr,dE,Wt,aT,Xt,KT,wA,KA,dI,bt,GI});var XI=OE((uG,WI)=>{"use strict";var{PassThrough:Ff}=require("stream");WI.exports=E=>{E={...E};let{array:r}=E,{encoding:n}=E,A=n==="buffer",S=!1;r?S=!(n||A):n=n||"utf8",A&&(n=null);let O=new Ff({objectMode:S});n&&O.setEncoding(n);let I=0,C=[];return O.on("data",s=>{C.push(s),S?I=C.length:I+=s.length}),O.getBufferedValue=()=>r?C:A?Buffer.concat(C,I):C.join(""),O.getBufferedLength=()=>I,O}});var bI=OE((sG,pr)=>{"use strict";var{constants:df}=require("buffer"),Gf=require("stream"),{promisify:Bf}=require("util"),mf=XI(),Hf=Bf(Gf.pipeline),wt=class extends Error{constructor(){super("maxBuffer exceeded"),this.name="MaxBufferError"}};async function JA(E,r){if(!E)throw new Error("Expected a stream");r={maxBuffer:1/0,...r};let{maxBuffer:n}=r,A=mf(r);return await new Promise((S,O)=>{let I=C=>{C&&A.getBufferedLength()<=df.MAX_LENGTH&&(C.bufferedData=A.getBufferedValue()),O(C)};(async()=>{try{await Hf(E,A),S()}catch(C){I(C)}})(),A.on("data",()=>{A.getBufferedLength()>n&&I(new wt)})}),A.getBufferedValue()}pr.exports=JA;pr.exports.buffer=(E,r)=>JA(E,{...r,encoding:"buffer"});pr.exports.array=(E,r)=>JA(E,{...r,array:!0});pr.exports.MaxBufferError=wt});var KI=OE((CG,wI)=>{"use strict";var{PassThrough:Yf}=require("stream");wI.exports=function(){var E=[],r=new Yf({objectMode:!0});return r.setMaxListeners(0),r.add=n,r.isEmpty=A,r.on("unpipe",S),Array.prototype.slice.call(arguments).forEach(n),r;function n(O){return Array.isArray(O)?(O.forEach(n),this):(E.push(O),O.once("end",S.bind(null,O)),O.once("error",r.emit.bind(r,"error")),O.pipe(r,{end:!1}),this)}function A(){return E.length==0}function S(O){E=E.filter(function(I){return I!==O}),!E.length&&r.readable&&r.end()}}});var jA=OE(($T,Ur)=>{(function(){var E,r="4.17.21",n=200,A="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",S="Expected a function",O="Invalid `variable` option passed into `_.template`",I="__lodash_hash_undefined__",C=500,s="__lodash_placeholder__",a=1,c=2,_=4,h=1,F=2,H=1,G=2,x=4,m=8,g=16,rE=32,EE=64,nE=128,UE=256,pT=512,Gs=30,Bs="...",ms=800,Hs=16,qR=1,Ys=2,gs=3,AT=1/0,we=9007199254740991,xs=17976931348623157e292,Xr=0/0,fe=4294967295,vs=fe-1,ys=fe>>>1,Vs=[["ary",nE],["bind",H],["bindKey",G],["curry",m],["curryRight",g],["flip",pT],["partial",rE],["partialRight",EE],["rearg",UE]],MT="[object Arguments]",br="[object Array]",Ws="[object AsyncFunction]",er="[object Boolean]",Tr="[object Date]",Xs="[object DOMException]",wr="[object Error]",Kr="[object Function]",kR="[object GeneratorFunction]",Ce="[object Map]",rr="[object Number]",bs="[object Null]",he="[object Object]",ZR="[object Promise]",ws="[object Proxy]",tr="[object RegExp]",oe="[object Set]",nr="[object String]",Jr="[object Symbol]",Ks="[object Undefined]",Ar="[object WeakMap]",Js="[object WeakSet]",Rr="[object ArrayBuffer]",UT="[object DataView]",Sn="[object Float32Array]",On="[object Float64Array]",In="[object Int8Array]",Nn="[object Int16Array]",un="[object Int32Array]",sn="[object Uint8Array]",Cn="[object Uint8ClampedArray]",on="[object Uint16Array]",an="[object Uint32Array]",$s=/\b__p \+= '';/g,Qs=/\b(__p \+=) '' \+/g,qs=/(__e\(.*?\)|\b__t\)) \+\n'';/g,zR=/&(?:amp|lt|gt|quot|#39);/g,jR=/[&<>"']/g,ks=RegExp(zR.source),Zs=RegExp(jR.source),zs=/<%-([\s\S]+?)%>/g,js=/<%([\s\S]+?)%>/g,ES=/<%=([\s\S]+?)%>/g,EC=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,eC=/^\w*$/,TC=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Ln=/[\\^$.*+?()[\]{}|]/g,rC=RegExp(Ln.source),_n=/^\s+/,tC=/\s/,nC=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,AC=/\{\n\/\* \[wrapped with (.+)\] \*/,RC=/,? & /,SC=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,iC=/[()=,{}\[\]\/\s]/,OC=/\\(\\)?/g,IC=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,eS=/\w*$/,NC=/^[-+]0x[0-9a-f]+$/i,uC=/^0b[01]+$/i,sC=/^\[object .+?Constructor\]$/,CC=/^0o[0-7]+$/i,oC=/^(?:0|[1-9]\d*)$/,aC=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,$r=/($^)/,LC=/['\n\r\u2028\u2029\\]/g,Qr="\\ud800-\\udfff",_C="\\u0300-\\u036f",DC="\\ufe20-\\ufe2f",lC="\\u20d0-\\u20ff",TS=_C+DC+lC,rS="\\u2700-\\u27bf",tS="a-z\\xdf-\\xf6\\xf8-\\xff",cC="\\xac\\xb1\\xd7\\xf7",fC="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",PC="\\u2000-\\u206f",pC=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",nS="A-Z\\xc0-\\xd6\\xd8-\\xde",AS="\\ufe0e\\ufe0f",RS=cC+fC+PC+pC,Dn="['\u2019]",MC="["+Qr+"]",SS="["+RS+"]",qr="["+TS+"]",iS="\\d+",UC="["+rS+"]",OS="["+tS+"]",IS="[^"+Qr+RS+iS+rS+tS+nS+"]",ln="\\ud83c[\\udffb-\\udfff]",hC="(?:"+qr+"|"+ln+")",NS="[^"+Qr+"]",cn="(?:\\ud83c[\\udde6-\\uddff]){2}",fn="[\\ud800-\\udbff][\\udc00-\\udfff]",hT="["+nS+"]",uS="\\u200d",sS="(?:"+OS+"|"+IS+")",FC="(?:"+hT+"|"+IS+")",CS="(?:"+Dn+"(?:d|ll|m|re|s|t|ve))?",oS="(?:"+Dn+"(?:D|LL|M|RE|S|T|VE))?",aS=hC+"?",LS="["+AS+"]?",dC="(?:"+uS+"(?:"+[NS,cn,fn].join("|")+")"+LS+aS+")*",GC="\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",BC="\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",_S=LS+aS+dC,mC="(?:"+[UC,cn,fn].join("|")+")"+_S,HC="(?:"+[NS+qr+"?",qr,cn,fn,MC].join("|")+")",YC=RegExp(Dn,"g"),gC=RegExp(qr,"g"),Pn=RegExp(ln+"(?="+ln+")|"+HC+_S,"g"),xC=RegExp([hT+"?"+OS+"+"+CS+"(?="+[SS,hT,"$"].join("|")+")",FC+"+"+oS+"(?="+[SS,hT+sS,"$"].join("|")+")",hT+"?"+sS+"+"+CS,hT+"+"+oS,BC,GC,iS,mC].join("|"),"g"),vC=RegExp("["+uS+Qr+TS+AS+"]"),yC=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,VC=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],WC=-1,NE={};NE[Sn]=NE[On]=NE[In]=NE[Nn]=NE[un]=NE[sn]=NE[Cn]=NE[on]=NE[an]=!0,NE[MT]=NE[br]=NE[Rr]=NE[er]=NE[UT]=NE[Tr]=NE[wr]=NE[Kr]=NE[Ce]=NE[rr]=NE[he]=NE[tr]=NE[oe]=NE[nr]=NE[Ar]=!1;var IE={};IE[MT]=IE[br]=IE[Rr]=IE[UT]=IE[er]=IE[Tr]=IE[Sn]=IE[On]=IE[In]=IE[Nn]=IE[un]=IE[Ce]=IE[rr]=IE[he]=IE[tr]=IE[oe]=IE[nr]=IE[Jr]=IE[sn]=IE[Cn]=IE[on]=IE[an]=!0,IE[wr]=IE[Kr]=IE[Ar]=!1;var XC={\u00C0:"A",\u00C1:"A",\u00C2:"A",\u00C3:"A",\u00C4:"A",\u00C5:"A",\u00E0:"a",\u00E1:"a",\u00E2:"a",\u00E3:"a",\u00E4:"a",\u00E5:"a",\u00C7:"C",\u00E7:"c",\u00D0:"D",\u00F0:"d",\u00C8:"E",\u00C9:"E",\u00CA:"E",\u00CB:"E",\u00E8:"e",\u00E9:"e",\u00EA:"e",\u00EB:"e",\u00CC:"I",\u00CD:"I",\u00CE:"I",\u00CF:"I",\u00EC:"i",\u00ED:"i",\u00EE:"i",\u00EF:"i",\u00D1:"N",\u00F1:"n",\u00D2:"O",\u00D3:"O",\u00D4:"O",\u00D5:"O",\u00D6:"O",\u00D8:"O",\u00F2:"o",\u00F3:"o",\u00F4:"o",\u00F5:"o",\u00F6:"o",\u00F8:"o",\u00D9:"U",\u00DA:"U",\u00DB:"U",\u00DC:"U",\u00F9:"u",\u00FA:"u",\u00FB:"u",\u00FC:"u",\u00DD:"Y",\u00FD:"y",\u00FF:"y",\u00C6:"Ae",\u00E6:"ae",\u00DE:"Th",\u00FE:"th",\u00DF:"ss",\u0100:"A",\u0102:"A",\u0104:"A",\u0101:"a",\u0103:"a",\u0105:"a",\u0106:"C",\u0108:"C",\u010A:"C",\u010C:"C",\u0107:"c",\u0109:"c",\u010B:"c",\u010D:"c",\u010E:"D",\u0110:"D",\u010F:"d",\u0111:"d",\u0112:"E",\u0114:"E",\u0116:"E",\u0118:"E",\u011A:"E",\u0113:"e",\u0115:"e",\u0117:"e",\u0119:"e",\u011B:"e",\u011C:"G",\u011E:"G",\u0120:"G",\u0122:"G",\u011D:"g",\u011F:"g",\u0121:"g",\u0123:"g",\u0124:"H",\u0126:"H",\u0125:"h",\u0127:"h",\u0128:"I",\u012A:"I",\u012C:"I",\u012E:"I",\u0130:"I",\u0129:"i",\u012B:"i",\u012D:"i",\u012F:"i",\u0131:"i",\u0134:"J",\u0135:"j",\u0136:"K",\u0137:"k",\u0138:"k",\u0139:"L",\u013B:"L",\u013D:"L",\u013F:"L",\u0141:"L",\u013A:"l",\u013C:"l",\u013E:"l",\u0140:"l",\u0142:"l",\u0143:"N",\u0145:"N",\u0147:"N",\u014A:"N",\u0144:"n",\u0146:"n",\u0148:"n",\u014B:"n",\u014C:"O",\u014E:"O",\u0150:"O",\u014D:"o",\u014F:"o",\u0151:"o",\u0154:"R",\u0156:"R",\u0158:"R",\u0155:"r",\u0157:"r",\u0159:"r",\u015A:"S",\u015C:"S",\u015E:"S",\u0160:"S",\u015B:"s",\u015D:"s",\u015F:"s",\u0161:"s",\u0162:"T",\u0164:"T",\u0166:"T",\u0163:"t",\u0165:"t",\u0167:"t",\u0168:"U",\u016A:"U",\u016C:"U",\u016E:"U",\u0170:"U",\u0172:"U",\u0169:"u",\u016B:"u",\u016D:"u",\u016F:"u",\u0171:"u",\u0173:"u",\u0174:"W",\u0175:"w",\u0176:"Y",\u0177:"y",\u0178:"Y",\u0179:"Z",\u017B:"Z",\u017D:"Z",\u017A:"z",\u017C:"z",\u017E:"z",\u0132:"IJ",\u0133:"ij",\u0152:"Oe",\u0153:"oe",\u0149:"'n",\u017F:"s"},bC={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},wC={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},KC={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},JC=parseFloat,$C=parseInt,DS=typeof global=="object"&&global&&global.Object===Object&&global,QC=typeof self=="object"&&self&&self.Object===Object&&self,hE=DS||QC||Function("return this")(),pn=typeof $T=="object"&&$T&&!$T.nodeType&&$T,RT=pn&&typeof Ur=="object"&&Ur&&!Ur.nodeType&&Ur,lS=RT&&RT.exports===pn,Mn=lS&&DS.process,Re=function(){try{var D=RT&&RT.require&&RT.require("util").types;return D||Mn&&Mn.binding&&Mn.binding("util")}catch{}}(),cS=Re&&Re.isArrayBuffer,fS=Re&&Re.isDate,PS=Re&&Re.isMap,pS=Re&&Re.isRegExp,MS=Re&&Re.isSet,US=Re&&Re.isTypedArray;function Ee(D,P,f){switch(f.length){case 0:return D.call(P);case 1:return D.call(P,f[0]);case 2:return D.call(P,f[0],f[1]);case 3:return D.call(P,f[0],f[1],f[2])}return D.apply(P,f)}function qC(D,P,f,v){for(var J=-1,AE=D==null?0:D.length;++J<AE;){var PE=D[J];P(v,PE,f(PE),D)}return v}function Se(D,P){for(var f=-1,v=D==null?0:D.length;++f<v&&P(D[f],f,D)!==!1;);return D}function kC(D,P){for(var f=D==null?0:D.length;f--&&P(D[f],f,D)!==!1;);return D}function hS(D,P){for(var f=-1,v=D==null?0:D.length;++f<v;)if(!P(D[f],f,D))return!1;return!0}function Ke(D,P){for(var f=-1,v=D==null?0:D.length,J=0,AE=[];++f<v;){var PE=D[f];P(PE,f,D)&&(AE[J++]=PE)}return AE}function kr(D,P){var f=D==null?0:D.length;return!!f&&FT(D,P,0)>-1}function Un(D,P,f){for(var v=-1,J=D==null?0:D.length;++v<J;)if(f(P,D[v]))return!0;return!1}function CE(D,P){for(var f=-1,v=D==null?0:D.length,J=Array(v);++f<v;)J[f]=P(D[f],f,D);return J}function Je(D,P){for(var f=-1,v=P.length,J=D.length;++f<v;)D[J+f]=P[f];return D}function hn(D,P,f,v){var J=-1,AE=D==null?0:D.length;for(v&&AE&&(f=D[++J]);++J<AE;)f=P(f,D[J],J,D);return f}function ZC(D,P,f,v){var J=D==null?0:D.length;for(v&&J&&(f=D[--J]);J--;)f=P(f,D[J],J,D);return f}function Fn(D,P){for(var f=-1,v=D==null?0:D.length;++f<v;)if(P(D[f],f,D))return!0;return!1}var zC=dn("length");function jC(D){return D.split("")}function Eo(D){return D.match(SC)||[]}function FS(D,P,f){var v;return f(D,function(J,AE,PE){if(P(J,AE,PE))return v=AE,!1}),v}function Zr(D,P,f,v){for(var J=D.length,AE=f+(v?1:-1);v?AE--:++AE<J;)if(P(D[AE],AE,D))return AE;return-1}function FT(D,P,f){return P===P?No(D,P,f):Zr(D,dS,f)}function eo(D,P,f,v){for(var J=f-1,AE=D.length;++J<AE;)if(v(D[J],P))return J;return-1}function dS(D){return D!==D}function GS(D,P){var f=D==null?0:D.length;return f?Bn(D,P)/f:Xr}function dn(D){return function(P){return P==null?E:P[D]}}function Gn(D){return function(P){return D==null?E:D[P]}}function BS(D,P,f,v,J){return J(D,function(AE,PE,iE){f=v?(v=!1,AE):P(f,AE,PE,iE)}),f}function To(D,P){var f=D.length;for(D.sort(P);f--;)D[f]=D[f].value;return D}function Bn(D,P){for(var f,v=-1,J=D.length;++v<J;){var AE=P(D[v]);AE!==E&&(f=f===E?AE:f+AE)}return f}function mn(D,P){for(var f=-1,v=Array(D);++f<D;)v[f]=P(f);return v}function ro(D,P){return CE(P,function(f){return[f,D[f]]})}function mS(D){return D&&D.slice(0,xS(D)+1).replace(_n,"")}function ee(D){return function(P){return D(P)}}function Hn(D,P){return CE(P,function(f){return D[f]})}function Sr(D,P){return D.has(P)}function HS(D,P){for(var f=-1,v=D.length;++f<v&&FT(P,D[f],0)>-1;);return f}function YS(D,P){for(var f=D.length;f--&&FT(P,D[f],0)>-1;);return f}function to(D,P){for(var f=D.length,v=0;f--;)D[f]===P&&++v;return v}var no=Gn(XC),Ao=Gn(bC);function Ro(D){return"\\"+KC[D]}function So(D,P){return D==null?E:D[P]}function dT(D){return vC.test(D)}function io(D){return yC.test(D)}function Oo(D){for(var P,f=[];!(P=D.next()).done;)f.push(P.value);return f}function Yn(D){var P=-1,f=Array(D.size);return D.forEach(function(v,J){f[++P]=[J,v]}),f}function gS(D,P){return function(f){return D(P(f))}}function $e(D,P){for(var f=-1,v=D.length,J=0,AE=[];++f<v;){var PE=D[f];(PE===P||PE===s)&&(D[f]=s,AE[J++]=f)}return AE}function zr(D){var P=-1,f=Array(D.size);return D.forEach(function(v){f[++P]=v}),f}function Io(D){var P=-1,f=Array(D.size);return D.forEach(function(v){f[++P]=[v,v]}),f}function No(D,P,f){for(var v=f-1,J=D.length;++v<J;)if(D[v]===P)return v;return-1}function uo(D,P,f){for(var v=f+1;v--;)if(D[v]===P)return v;return v}function GT(D){return dT(D)?Co(D):zC(D)}function ae(D){return dT(D)?oo(D):jC(D)}function xS(D){for(var P=D.length;P--&&tC.test(D.charAt(P)););return P}var so=Gn(wC);function Co(D){for(var P=Pn.lastIndex=0;Pn.test(D);)++P;return P}function oo(D){return D.match(Pn)||[]}function ao(D){return D.match(xC)||[]}var Lo=function D(P){P=P==null?hE:Qe.defaults(hE.Object(),P,Qe.pick(hE,VC));var f=P.Array,v=P.Date,J=P.Error,AE=P.Function,PE=P.Math,iE=P.Object,gn=P.RegExp,_o=P.String,ie=P.TypeError,jr=f.prototype,Do=AE.prototype,BT=iE.prototype,Et=P["__core-js_shared__"],et=Do.toString,SE=BT.hasOwnProperty,lo=0,vS=function(){var e=/[^.]+$/.exec(Et&&Et.keys&&Et.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),Tt=BT.toString,co=et.call(iE),fo=hE._,Po=gn("^"+et.call(SE).replace(Ln,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),rt=lS?P.Buffer:E,qe=P.Symbol,tt=P.Uint8Array,yS=rt?rt.allocUnsafe:E,nt=gS(iE.getPrototypeOf,iE),VS=iE.create,WS=BT.propertyIsEnumerable,At=jr.splice,XS=qe?qe.isConcatSpreadable:E,ir=qe?qe.iterator:E,ST=qe?qe.toStringTag:E,Rt=function(){try{var e=uT(iE,"defineProperty");return e({},"",{}),e}catch{}}(),po=P.clearTimeout!==hE.clearTimeout&&P.clearTimeout,Mo=v&&v.now!==hE.Date.now&&v.now,Uo=P.setTimeout!==hE.setTimeout&&P.setTimeout,St=PE.ceil,it=PE.floor,xn=iE.getOwnPropertySymbols,ho=rt?rt.isBuffer:E,bS=P.isFinite,Fo=jr.join,Go=gS(iE.keys,iE),pE=PE.max,VE=PE.min,Bo=v.now,mo=P.parseInt,wS=PE.random,Ho=jr.reverse,vn=uT(P,"DataView"),Or=uT(P,"Map"),yn=uT(P,"Promise"),mT=uT(P,"Set"),Ir=uT(P,"WeakMap"),Nr=uT(iE,"create"),Ot=Ir&&new Ir,HT={},Yo=sT(vn),go=sT(Or),xo=sT(yn),vo=sT(mT),yo=sT(Ir),It=qe?qe.prototype:E,ur=It?It.valueOf:E,KS=It?It.toString:E;function N(e){if(_E(e)&&!$(e)&&!(e instanceof eE)){if(e instanceof Oe)return e;if(SE.call(e,"__wrapped__"))return Ji(e)}return new Oe(e)}var YT=function(){function e(){}return function(T){if(!LE(T))return{};if(VS)return VS(T);e.prototype=T;var t=new e;return e.prototype=E,t}}();function Nt(){}function Oe(e,T){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!T,this.__index__=0,this.__values__=E}N.templateSettings={escape:zs,evaluate:js,interpolate:ES,variable:"",imports:{_:N}},N.prototype=Nt.prototype,N.prototype.constructor=N,Oe.prototype=YT(Nt.prototype),Oe.prototype.constructor=Oe;function eE(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=fe,this.__views__=[]}function Vo(){var e=new eE(this.__wrapped__);return e.__actions__=qE(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=qE(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=qE(this.__views__),e}function Wo(){if(this.__filtered__){var e=new eE(this);e.__dir__=-1,e.__filtered__=!0}else e=this.clone(),e.__dir__*=-1;return e}function Xo(){var e=this.__wrapped__.value(),T=this.__dir__,t=$(e),R=T<0,i=t?e.length:0,u=EL(0,i,this.__views__),o=u.start,L=u.end,l=L-o,p=R?L:o-1,M=this.__iteratees__,d=M.length,Y=0,y=VE(l,this.__takeCount__);if(!t||!R&&i==l&&y==l)return Ci(e,this.__actions__);var X=[];E:for(;l--&&Y<y;){p+=T;for(var k=-1,b=e[p];++k<d;){var j=M[k],tE=j.iteratee,te=j.type,KE=tE(b);if(te==Ys)b=KE;else if(!KE){if(te==qR)continue E;break E}}X[Y++]=b}return X}eE.prototype=YT(Nt.prototype),eE.prototype.constructor=eE;function iT(e){var T=-1,t=e==null?0:e.length;for(this.clear();++T<t;){var R=e[T];this.set(R[0],R[1])}}function bo(){this.__data__=Nr?Nr(null):{},this.size=0}function wo(e){var T=this.has(e)&&delete this.__data__[e];return this.size-=T?1:0,T}function Ko(e){var T=this.__data__;if(Nr){var t=T[e];return t===I?E:t}return SE.call(T,e)?T[e]:E}function Jo(e){var T=this.__data__;return Nr?T[e]!==E:SE.call(T,e)}function $o(e,T){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=Nr&&T===E?I:T,this}iT.prototype.clear=bo,iT.prototype.delete=wo,iT.prototype.get=Ko,iT.prototype.has=Jo,iT.prototype.set=$o;function Fe(e){var T=-1,t=e==null?0:e.length;for(this.clear();++T<t;){var R=e[T];this.set(R[0],R[1])}}function Qo(){this.__data__=[],this.size=0}function qo(e){var T=this.__data__,t=ut(T,e);if(t<0)return!1;var R=T.length-1;return t==R?T.pop():At.call(T,t,1),--this.size,!0}function ko(e){var T=this.__data__,t=ut(T,e);return t<0?E:T[t][1]}function Zo(e){return ut(this.__data__,e)>-1}function zo(e,T){var t=this.__data__,R=ut(t,e);return R<0?(++this.size,t.push([e,T])):t[R][1]=T,this}Fe.prototype.clear=Qo,Fe.prototype.delete=qo,Fe.prototype.get=ko,Fe.prototype.has=Zo,Fe.prototype.set=zo;function de(e){var T=-1,t=e==null?0:e.length;for(this.clear();++T<t;){var R=e[T];this.set(R[0],R[1])}}function jo(){this.size=0,this.__data__={hash:new iT,map:new(Or||Fe),string:new iT}}function Ea(e){var T=pt(this,e).delete(e);return this.size-=T?1:0,T}function ea(e){return pt(this,e).get(e)}function Ta(e){return pt(this,e).has(e)}function ra(e,T){var t=pt(this,e),R=t.size;return t.set(e,T),this.size+=t.size==R?0:1,this}de.prototype.clear=jo,de.prototype.delete=Ea,de.prototype.get=ea,de.prototype.has=Ta,de.prototype.set=ra;function OT(e){var T=-1,t=e==null?0:e.length;for(this.__data__=new de;++T<t;)this.add(e[T])}function ta(e){return this.__data__.set(e,I),this}function na(e){return this.__data__.has(e)}OT.prototype.add=OT.prototype.push=ta,OT.prototype.has=na;function Le(e){var T=this.__data__=new Fe(e);this.size=T.size}function Aa(){this.__data__=new Fe,this.size=0}function Ra(e){var T=this.__data__,t=T.delete(e);return this.size=T.size,t}function Sa(e){return this.__data__.get(e)}function ia(e){return this.__data__.has(e)}function Oa(e,T){var t=this.__data__;if(t instanceof Fe){var R=t.__data__;if(!Or||R.length<n-1)return R.push([e,T]),this.size=++t.size,this;t=this.__data__=new de(R)}return t.set(e,T),this.size=t.size,this}Le.prototype.clear=Aa,Le.prototype.delete=Ra,Le.prototype.get=Sa,Le.prototype.has=ia,Le.prototype.set=Oa;function JS(e,T){var t=$(e),R=!t&&CT(e),i=!t&&!R&&ET(e),u=!t&&!R&&!i&&yT(e),o=t||R||i||u,L=o?mn(e.length,_o):[],l=L.length;for(var p in e)(T||SE.call(e,p))&&!(o&&(p=="length"||i&&(p=="offset"||p=="parent")||u&&(p=="buffer"||p=="byteLength"||p=="byteOffset")||He(p,l)))&&L.push(p);return L}function $S(e){var T=e.length;return T?e[kn(0,T-1)]:E}function Ia(e,T){return Mt(qE(e),IT(T,0,e.length))}function Na(e){return Mt(qE(e))}function Vn(e,T,t){(t!==E&&!_e(e[T],t)||t===E&&!(T in e))&&Ge(e,T,t)}function sr(e,T,t){var R=e[T];(!(SE.call(e,T)&&_e(R,t))||t===E&&!(T in e))&&Ge(e,T,t)}function ut(e,T){for(var t=e.length;t--;)if(_e(e[t][0],T))return t;return-1}function ua(e,T,t,R){return ke(e,function(i,u,o){T(R,i,t(i),o)}),R}function QS(e,T){return e&&pe(T,FE(T),e)}function sa(e,T){return e&&pe(T,ZE(T),e)}function Ge(e,T,t){T=="__proto__"&&Rt?Rt(e,T,{configurable:!0,enumerable:!0,value:t,writable:!0}):e[T]=t}function Wn(e,T){for(var t=-1,R=T.length,i=f(R),u=e==null;++t<R;)i[t]=u?E:lA(e,T[t]);return i}function IT(e,T,t){return e===e&&(t!==E&&(e=e<=t?e:t),T!==E&&(e=e>=T?e:T)),e}function Ie(e,T,t,R,i,u){var o,L=T&a,l=T&c,p=T&_;if(t&&(o=i?t(e,R,i,u):t(e)),o!==E)return o;if(!LE(e))return e;var M=$(e);if(M){if(o=TL(e),!L)return qE(e,o)}else{var d=WE(e),Y=d==Kr||d==kR;if(ET(e))return Li(e,L);if(d==he||d==MT||Y&&!i){if(o=l||Y?{}:xi(e),!L)return l?Ka(e,sa(o,e)):wa(e,QS(o,e))}else{if(!IE[d])return i?e:{};o=rL(e,d,L)}}u||(u=new Le);var y=u.get(e);if(y)return y;u.set(e,o),NO(e)?e.forEach(function(b){o.add(Ie(b,T,t,b,e,u))}):OO(e)&&e.forEach(function(b,j){o.set(j,Ie(b,T,t,j,e,u))});var X=p?l?RA:AA:l?ZE:FE,k=M?E:X(e);return Se(k||e,function(b,j){k&&(j=b,b=e[j]),sr(o,j,Ie(b,T,t,j,e,u))}),o}function Ca(e){var T=FE(e);return function(t){return qS(t,e,T)}}function qS(e,T,t){var R=t.length;if(e==null)return!R;for(e=iE(e);R--;){var i=t[R],u=T[i],o=e[i];if(o===E&&!(i in e)||!u(o))return!1}return!0}function kS(e,T,t){if(typeof e!="function")throw new ie(S);return lr(function(){e.apply(E,t)},T)}function Cr(e,T,t,R){var i=-1,u=kr,o=!0,L=e.length,l=[],p=T.length;if(!L)return l;t&&(T=CE(T,ee(t))),R?(u=Un,o=!1):T.length>=n&&(u=Sr,o=!1,T=new OT(T));E:for(;++i<L;){var M=e[i],d=t==null?M:t(M);if(M=R||M!==0?M:0,o&&d===d){for(var Y=p;Y--;)if(T[Y]===d)continue E;l.push(M)}else u(T,d,R)||l.push(M)}return l}var ke=fi(Pe),ZS=fi(bn,!0);function oa(e,T){var t=!0;return ke(e,function(R,i,u){return t=!!T(R,i,u),t}),t}function st(e,T,t){for(var R=-1,i=e.length;++R<i;){var u=e[R],o=T(u);if(o!=null&&(L===E?o===o&&!re(o):t(o,L)))var L=o,l=u}return l}function aa(e,T,t,R){var i=e.length;for(t=q(t),t<0&&(t=-t>i?0:i+t),R=R===E||R>i?i:q(R),R<0&&(R+=i),R=t>R?0:sO(R);t<R;)e[t++]=T;return e}function zS(e,T){var t=[];return ke(e,function(R,i,u){T(R,i,u)&&t.push(R)}),t}function gE(e,T,t,R,i){var u=-1,o=e.length;for(t||(t=nL),i||(i=[]);++u<o;){var L=e[u];T>0&&t(L)?T>1?gE(L,T-1,t,R,i):Je(i,L):R||(i[i.length]=L)}return i}var Xn=Pi(),jS=Pi(!0);function Pe(e,T){return e&&Xn(e,T,FE)}function bn(e,T){return e&&jS(e,T,FE)}function Ct(e,T){return Ke(T,function(t){return Ye(e[t])})}function NT(e,T){T=ze(T,e);for(var t=0,R=T.length;e!=null&&t<R;)e=e[Me(T[t++])];return t&&t==R?e:E}function Ei(e,T,t){var R=T(e);return $(e)?R:Je(R,t(e))}function bE(e){return e==null?e===E?Ks:bs:ST&&ST in iE(e)?ja(e):NL(e)}function wn(e,T){return e>T}function La(e,T){return e!=null&&SE.call(e,T)}function _a(e,T){return e!=null&&T in iE(e)}function Da(e,T,t){return e>=VE(T,t)&&e<pE(T,t)}function Kn(e,T,t){for(var R=t?Un:kr,i=e[0].length,u=e.length,o=u,L=f(u),l=1/0,p=[];o--;){var M=e[o];o&&T&&(M=CE(M,ee(T))),l=VE(M.length,l),L[o]=!t&&(T||i>=120&&M.length>=120)?new OT(o&&M):E}M=e[0];var d=-1,Y=L[0];E:for(;++d<i&&p.length<l;){var y=M[d],X=T?T(y):y;if(y=t||y!==0?y:0,!(Y?Sr(Y,X):R(p,X,t))){for(o=u;--o;){var k=L[o];if(!(k?Sr(k,X):R(e[o],X,t)))continue E}Y&&Y.push(X),p.push(y)}}return p}function la(e,T,t,R){return Pe(e,function(i,u,o){T(R,t(i),u,o)}),R}function or(e,T,t){T=ze(T,e),e=Wi(e,T);var R=e==null?e:e[Me(ue(T))];return R==null?E:Ee(R,e,t)}function ei(e){return _E(e)&&bE(e)==MT}function ca(e){return _E(e)&&bE(e)==Rr}function fa(e){return _E(e)&&bE(e)==Tr}function ar(e,T,t,R,i){return e===T?!0:e==null||T==null||!_E(e)&&!_E(T)?e!==e&&T!==T:Pa(e,T,t,R,ar,i)}function Pa(e,T,t,R,i,u){var o=$(e),L=$(T),l=o?br:WE(e),p=L?br:WE(T);l=l==MT?he:l,p=p==MT?he:p;var M=l==he,d=p==he,Y=l==p;if(Y&&ET(e)){if(!ET(T))return!1;o=!0,M=!1}if(Y&&!M)return u||(u=new Le),o||yT(e)?Hi(e,T,t,R,i,u):Za(e,T,l,t,R,i,u);if(!(t&h)){var y=M&&SE.call(e,"__wrapped__"),X=d&&SE.call(T,"__wrapped__");if(y||X){var k=y?e.value():e,b=X?T.value():T;return u||(u=new Le),i(k,b,t,R,u)}}return Y?(u||(u=new Le),za(e,T,t,R,i,u)):!1}function pa(e){return _E(e)&&WE(e)==Ce}function Jn(e,T,t,R){var i=t.length,u=i,o=!R;if(e==null)return!u;for(e=iE(e);i--;){var L=t[i];if(o&&L[2]?L[1]!==e[L[0]]:!(L[0]in e))return!1}for(;++i<u;){L=t[i];var l=L[0],p=e[l],M=L[1];if(o&&L[2]){if(p===E&&!(l in e))return!1}else{var d=new Le;if(R)var Y=R(p,M,l,e,T,d);if(!(Y===E?ar(M,p,h|F,R,d):Y))return!1}}return!0}function Ti(e){if(!LE(e)||RL(e))return!1;var T=Ye(e)?Po:sC;return T.test(sT(e))}function Ma(e){return _E(e)&&bE(e)==tr}function Ua(e){return _E(e)&&WE(e)==oe}function ha(e){return _E(e)&&Bt(e.length)&&!!NE[bE(e)]}function ri(e){return typeof e=="function"?e:e==null?zE:typeof e=="object"?$(e)?Ai(e[0],e[1]):ni(e):pO(e)}function $n(e){if(!Dr(e))return Go(e);var T=[];for(var t in iE(e))SE.call(e,t)&&t!="constructor"&&T.push(t);return T}function Fa(e){if(!LE(e))return IL(e);var T=Dr(e),t=[];for(var R in e)R=="constructor"&&(T||!SE.call(e,R))||t.push(R);return t}function Qn(e,T){return e<T}function ti(e,T){var t=-1,R=kE(e)?f(e.length):[];return ke(e,function(i,u,o){R[++t]=T(i,u,o)}),R}function ni(e){var T=iA(e);return T.length==1&&T[0][2]?yi(T[0][0],T[0][1]):function(t){return t===e||Jn(t,e,T)}}function Ai(e,T){return IA(e)&&vi(T)?yi(Me(e),T):function(t){var R=lA(t,e);return R===E&&R===T?cA(t,e):ar(T,R,h|F)}}function ot(e,T,t,R,i){e!==T&&Xn(T,function(u,o){if(i||(i=new Le),LE(u))da(e,T,o,t,ot,R,i);else{var L=R?R(uA(e,o),u,o+"",e,T,i):E;L===E&&(L=u),Vn(e,o,L)}},ZE)}function da(e,T,t,R,i,u,o){var L=uA(e,t),l=uA(T,t),p=o.get(l);if(p){Vn(e,t,p);return}var M=u?u(L,l,t+"",e,T,o):E,d=M===E;if(d){var Y=$(l),y=!Y&&ET(l),X=!Y&&!y&&yT(l);M=l,Y||y||X?$(L)?M=L:DE(L)?M=qE(L):y?(d=!1,M=Li(l,!0)):X?(d=!1,M=_i(l,!0)):M=[]:cr(l)||CT(l)?(M=L,CT(L)?M=CO(L):(!LE(L)||Ye(L))&&(M=xi(l))):d=!1}d&&(o.set(l,M),i(M,l,R,u,o),o.delete(l)),Vn(e,t,M)}function Ri(e,T){var t=e.length;if(t)return T+=T<0?t:0,He(T,t)?e[T]:E}function Si(e,T,t){T.length?T=CE(T,function(u){return $(u)?function(o){return NT(o,u.length===1?u[0]:u)}:u}):T=[zE];var R=-1;T=CE(T,ee(W()));var i=ti(e,function(u,o,L){var l=CE(T,function(p){return p(u)});return{criteria:l,index:++R,value:u}});return To(i,function(u,o){return ba(u,o,t)})}function Ga(e,T){return ii(e,T,function(t,R){return cA(e,R)})}function ii(e,T,t){for(var R=-1,i=T.length,u={};++R<i;){var o=T[R],L=NT(e,o);t(L,o)&&Lr(u,ze(o,e),L)}return u}function Ba(e){return function(T){return NT(T,e)}}function qn(e,T,t,R){var i=R?eo:FT,u=-1,o=T.length,L=e;for(e===T&&(T=qE(T)),t&&(L=CE(e,ee(t)));++u<o;)for(var l=0,p=T[u],M=t?t(p):p;(l=i(L,M,l,R))>-1;)L!==e&&At.call(L,l,1),At.call(e,l,1);return e}function Oi(e,T){for(var t=e?T.length:0,R=t-1;t--;){var i=T[t];if(t==R||i!==u){var u=i;He(i)?At.call(e,i,1):jn(e,i)}}return e}function kn(e,T){return e+it(wS()*(T-e+1))}function ma(e,T,t,R){for(var i=-1,u=pE(St((T-e)/(t||1)),0),o=f(u);u--;)o[R?u:++i]=e,e+=t;return o}function Zn(e,T){var t="";if(!e||T<1||T>we)return t;do T%2&&(t+=e),T=it(T/2),T&&(e+=e);while(T);return t}function z(e,T){return sA(Vi(e,T,zE),e+"")}function Ha(e){return $S(VT(e))}function Ya(e,T){var t=VT(e);return Mt(t,IT(T,0,t.length))}function Lr(e,T,t,R){if(!LE(e))return e;T=ze(T,e);for(var i=-1,u=T.length,o=u-1,L=e;L!=null&&++i<u;){var l=Me(T[i]),p=t;if(l==="__proto__"||l==="constructor"||l==="prototype")return e;if(i!=o){var M=L[l];p=R?R(M,l,L):E,p===E&&(p=LE(M)?M:He(T[i+1])?[]:{})}sr(L,l,p),L=L[l]}return e}var Ii=Ot?function(e,T){return Ot.set(e,T),e}:zE,ga=Rt?function(e,T){return Rt(e,"toString",{configurable:!0,enumerable:!1,value:PA(T),writable:!0})}:zE;function xa(e){return Mt(VT(e))}function Ne(e,T,t){var R=-1,i=e.length;T<0&&(T=-T>i?0:i+T),t=t>i?i:t,t<0&&(t+=i),i=T>t?0:t-T>>>0,T>>>=0;for(var u=f(i);++R<i;)u[R]=e[R+T];return u}function va(e,T){var t;return ke(e,function(R,i,u){return t=T(R,i,u),!t}),!!t}function at(e,T,t){var R=0,i=e==null?R:e.length;if(typeof T=="number"&&T===T&&i<=ys){for(;R<i;){var u=R+i>>>1,o=e[u];o!==null&&!re(o)&&(t?o<=T:o<T)?R=u+1:i=u}return i}return zn(e,T,zE,t)}function zn(e,T,t,R){var i=0,u=e==null?0:e.length;if(u===0)return 0;T=t(T);for(var o=T!==T,L=T===null,l=re(T),p=T===E;i<u;){var M=it((i+u)/2),d=t(e[M]),Y=d!==E,y=d===null,X=d===d,k=re(d);if(o)var b=R||X;else p?b=X&&(R||Y):L?b=X&&Y&&(R||!y):l?b=X&&Y&&!y&&(R||!k):y||k?b=!1:b=R?d<=T:d<T;b?i=M+1:u=M}return VE(u,vs)}function Ni(e,T){for(var t=-1,R=e.length,i=0,u=[];++t<R;){var o=e[t],L=T?T(o):o;if(!t||!_e(L,l)){var l=L;u[i++]=o===0?0:o}}return u}function ui(e){return typeof e=="number"?e:re(e)?Xr:+e}function Te(e){if(typeof e=="string")return e;if($(e))return CE(e,Te)+"";if(re(e))return KS?KS.call(e):"";var T=e+"";return T=="0"&&1/e==-AT?"-0":T}function Ze(e,T,t){var R=-1,i=kr,u=e.length,o=!0,L=[],l=L;if(t)o=!1,i=Un;else if(u>=n){var p=T?null:qa(e);if(p)return zr(p);o=!1,i=Sr,l=new OT}else l=T?[]:L;E:for(;++R<u;){var M=e[R],d=T?T(M):M;if(M=t||M!==0?M:0,o&&d===d){for(var Y=l.length;Y--;)if(l[Y]===d)continue E;T&&l.push(d),L.push(M)}else i(l,d,t)||(l!==L&&l.push(d),L.push(M))}return L}function jn(e,T){return T=ze(T,e),e=Wi(e,T),e==null||delete e[Me(ue(T))]}function si(e,T,t,R){return Lr(e,T,t(NT(e,T)),R)}function Lt(e,T,t,R){for(var i=e.length,u=R?i:-1;(R?u--:++u<i)&&T(e[u],u,e););return t?Ne(e,R?0:u,R?u+1:i):Ne(e,R?u+1:0,R?i:u)}function Ci(e,T){var t=e;return t instanceof eE&&(t=t.value()),hn(T,function(R,i){return i.func.apply(i.thisArg,Je([R],i.args))},t)}function EA(e,T,t){var R=e.length;if(R<2)return R?Ze(e[0]):[];for(var i=-1,u=f(R);++i<R;)for(var o=e[i],L=-1;++L<R;)L!=i&&(u[i]=Cr(u[i]||o,e[L],T,t));return Ze(gE(u,1),T,t)}function oi(e,T,t){for(var R=-1,i=e.length,u=T.length,o={};++R<i;){var L=R<u?T[R]:E;t(o,e[R],L)}return o}function eA(e){return DE(e)?e:[]}function TA(e){return typeof e=="function"?e:zE}function ze(e,T){return $(e)?e:IA(e,T)?[e]:Ki(RE(e))}var ya=z;function je(e,T,t){var R=e.length;return t=t===E?R:t,!T&&t>=R?e:Ne(e,T,t)}var ai=po||function(e){return hE.clearTimeout(e)};function Li(e,T){if(T)return e.slice();var t=e.length,R=yS?yS(t):new e.constructor(t);return e.copy(R),R}function rA(e){var T=new e.constructor(e.byteLength);return new tt(T).set(new tt(e)),T}function Va(e,T){var t=T?rA(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.byteLength)}function Wa(e){var T=new e.constructor(e.source,eS.exec(e));return T.lastIndex=e.lastIndex,T}function Xa(e){return ur?iE(ur.call(e)):{}}function _i(e,T){var t=T?rA(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.length)}function Di(e,T){if(e!==T){var t=e!==E,R=e===null,i=e===e,u=re(e),o=T!==E,L=T===null,l=T===T,p=re(T);if(!L&&!p&&!u&&e>T||u&&o&&l&&!L&&!p||R&&o&&l||!t&&l||!i)return 1;if(!R&&!u&&!p&&e<T||p&&t&&i&&!R&&!u||L&&t&&i||!o&&i||!l)return-1}return 0}function ba(e,T,t){for(var R=-1,i=e.criteria,u=T.criteria,o=i.length,L=t.length;++R<o;){var l=Di(i[R],u[R]);if(l){if(R>=L)return l;var p=t[R];return l*(p=="desc"?-1:1)}}return e.index-T.index}function li(e,T,t,R){for(var i=-1,u=e.length,o=t.length,L=-1,l=T.length,p=pE(u-o,0),M=f(l+p),d=!R;++L<l;)M[L]=T[L];for(;++i<o;)(d||i<u)&&(M[t[i]]=e[i]);for(;p--;)M[L++]=e[i++];return M}function ci(e,T,t,R){for(var i=-1,u=e.length,o=-1,L=t.length,l=-1,p=T.length,M=pE(u-L,0),d=f(M+p),Y=!R;++i<M;)d[i]=e[i];for(var y=i;++l<p;)d[y+l]=T[l];for(;++o<L;)(Y||i<u)&&(d[y+t[o]]=e[i++]);return d}function qE(e,T){var t=-1,R=e.length;for(T||(T=f(R));++t<R;)T[t]=e[t];return T}function pe(e,T,t,R){var i=!t;t||(t={});for(var u=-1,o=T.length;++u<o;){var L=T[u],l=R?R(t[L],e[L],L,t,e):E;l===E&&(l=e[L]),i?Ge(t,L,l):sr(t,L,l)}return t}function wa(e,T){return pe(e,OA(e),T)}function Ka(e,T){return pe(e,Yi(e),T)}function _t(e,T){return function(t,R){var i=$(t)?qC:ua,u=T?T():{};return i(t,e,W(R,2),u)}}function gT(e){return z(function(T,t){var R=-1,i=t.length,u=i>1?t[i-1]:E,o=i>2?t[2]:E;for(u=e.length>3&&typeof u=="function"?(i--,u):E,o&&wE(t[0],t[1],o)&&(u=i<3?E:u,i=1),T=iE(T);++R<i;){var L=t[R];L&&e(T,L,R,u)}return T})}function fi(e,T){return function(t,R){if(t==null)return t;if(!kE(t))return e(t,R);for(var i=t.length,u=T?i:-1,o=iE(t);(T?u--:++u<i)&&R(o[u],u,o)!==!1;);return t}}function Pi(e){return function(T,t,R){for(var i=-1,u=iE(T),o=R(T),L=o.length;L--;){var l=o[e?L:++i];if(t(u[l],l,u)===!1)break}return T}}function Ja(e,T,t){var R=T&H,i=_r(e);function u(){var o=this&&this!==hE&&this instanceof u?i:e;return o.apply(R?t:this,arguments)}return u}function pi(e){return function(T){T=RE(T);var t=dT(T)?ae(T):E,R=t?t[0]:T.charAt(0),i=t?je(t,1).join(""):T.slice(1);return R[e]()+i}}function xT(e){return function(T){return hn(fO(cO(T).replace(YC,"")),e,"")}}function _r(e){return function(){var T=arguments;switch(T.length){case 0:return new e;case 1:return new e(T[0]);case 2:return new e(T[0],T[1]);case 3:return new e(T[0],T[1],T[2]);case 4:return new e(T[0],T[1],T[2],T[3]);case 5:return new e(T[0],T[1],T[2],T[3],T[4]);case 6:return new e(T[0],T[1],T[2],T[3],T[4],T[5]);case 7:return new e(T[0],T[1],T[2],T[3],T[4],T[5],T[6])}var t=YT(e.prototype),R=e.apply(t,T);return LE(R)?R:t}}function $a(e,T,t){var R=_r(e);function i(){for(var u=arguments.length,o=f(u),L=u,l=vT(i);L--;)o[L]=arguments[L];var p=u<3&&o[0]!==l&&o[u-1]!==l?[]:$e(o,l);if(u-=p.length,u<t)return di(e,T,Dt,i.placeholder,E,o,p,E,E,t-u);var M=this&&this!==hE&&this instanceof i?R:e;return Ee(M,this,o)}return i}function Mi(e){return function(T,t,R){var i=iE(T);if(!kE(T)){var u=W(t,3);T=FE(T),t=function(L){return u(i[L],L,i)}}var o=e(T,t,R);return o>-1?i[u?T[o]:o]:E}}function Ui(e){return me(function(T){var t=T.length,R=t,i=Oe.prototype.thru;for(e&&T.reverse();R--;){var u=T[R];if(typeof u!="function")throw new ie(S);if(i&&!o&&Pt(u)=="wrapper")var o=new Oe([],!0)}for(R=o?R:t;++R<t;){u=T[R];var L=Pt(u),l=L=="wrapper"?SA(u):E;l&&NA(l[0])&&l[1]==(nE|m|rE|UE)&&!l[4].length&&l[9]==1?o=o[Pt(l[0])].apply(o,l[3]):o=u.length==1&&NA(u)?o[L]():o.thru(u)}return function(){var p=arguments,M=p[0];if(o&&p.length==1&&$(M))return o.plant(M).value();for(var d=0,Y=t?T[d].apply(this,p):M;++d<t;)Y=T[d].call(this,Y);return Y}})}function Dt(e,T,t,R,i,u,o,L,l,p){var M=T&nE,d=T&H,Y=T&G,y=T&(m|g),X=T&pT,k=Y?E:_r(e);function b(){for(var j=arguments.length,tE=f(j),te=j;te--;)tE[te]=arguments[te];if(y)var KE=vT(b),ne=to(tE,KE);if(R&&(tE=li(tE,R,i,y)),u&&(tE=ci(tE,u,o,y)),j-=ne,y&&j<p){var lE=$e(tE,KE);return di(e,T,Dt,b.placeholder,t,tE,lE,L,l,p-j)}var De=d?t:this,xe=Y?De[e]:e;return j=tE.length,L?tE=uL(tE,L):X&&j>1&&tE.reverse(),M&&l<j&&(tE.length=l),this&&this!==hE&&this instanceof b&&(xe=k||_r(xe)),xe.apply(De,tE)}return b}function hi(e,T){return function(t,R){return la(t,e,T(R),{})}}function lt(e,T){return function(t,R){var i;if(t===E&&R===E)return T;if(t!==E&&(i=t),R!==E){if(i===E)return R;typeof t=="string"||typeof R=="string"?(t=Te(t),R=Te(R)):(t=ui(t),R=ui(R)),i=e(t,R)}return i}}function tA(e){return me(function(T){return T=CE(T,ee(W())),z(function(t){var R=this;return e(T,function(i){return Ee(i,R,t)})})})}function ct(e,T){T=T===E?" ":Te(T);var t=T.length;if(t<2)return t?Zn(T,e):T;var R=Zn(T,St(e/GT(T)));return dT(T)?je(ae(R),0,e).join(""):R.slice(0,e)}function Qa(e,T,t,R){var i=T&H,u=_r(e);function o(){for(var L=-1,l=arguments.length,p=-1,M=R.length,d=f(M+l),Y=this&&this!==hE&&this instanceof o?u:e;++p<M;)d[p]=R[p];for(;l--;)d[p++]=arguments[++L];return Ee(Y,i?t:this,d)}return o}function Fi(e){return function(T,t,R){return R&&typeof R!="number"&&wE(T,t,R)&&(t=R=E),T=ge(T),t===E?(t=T,T=0):t=ge(t),R=R===E?T<t?1:-1:ge(R),ma(T,t,R,e)}}function ft(e){return function(T,t){return typeof T=="string"&&typeof t=="string"||(T=se(T),t=se(t)),e(T,t)}}function di(e,T,t,R,i,u,o,L,l,p){var M=T&m,d=M?o:E,Y=M?E:o,y=M?u:E,X=M?E:u;T|=M?rE:EE,T&=~(M?EE:rE),T&x||(T&=~(H|G));var k=[e,T,i,y,d,X,Y,L,l,p],b=t.apply(E,k);return NA(e)&&Xi(b,k),b.placeholder=R,bi(b,e,T)}function nA(e){var T=PE[e];return function(t,R){if(t=se(t),R=R==null?0:VE(q(R),292),R&&bS(t)){var i=(RE(t)+"e").split("e"),u=T(i[0]+"e"+(+i[1]+R));return i=(RE(u)+"e").split("e"),+(i[0]+"e"+(+i[1]-R))}return T(t)}}var qa=mT&&1/zr(new mT([,-0]))[1]==AT?function(e){return new mT(e)}:UA;function Gi(e){return function(T){var t=WE(T);return t==Ce?Yn(T):t==oe?Io(T):ro(T,e(T))}}function Be(e,T,t,R,i,u,o,L){var l=T&G;if(!l&&typeof e!="function")throw new ie(S);var p=R?R.length:0;if(p||(T&=~(rE|EE),R=i=E),o=o===E?o:pE(q(o),0),L=L===E?L:q(L),p-=i?i.length:0,T&EE){var M=R,d=i;R=i=E}var Y=l?E:SA(e),y=[e,T,t,R,i,M,d,u,o,L];if(Y&&OL(y,Y),e=y[0],T=y[1],t=y[2],R=y[3],i=y[4],L=y[9]=y[9]===E?l?0:e.length:pE(y[9]-p,0),!L&&T&(m|g)&&(T&=~(m|g)),!T||T==H)var X=Ja(e,T,t);else T==m||T==g?X=$a(e,T,L):(T==rE||T==(H|rE))&&!i.length?X=Qa(e,T,t,R):X=Dt.apply(E,y);var k=Y?Ii:Xi;return bi(k(X,y),e,T)}function Bi(e,T,t,R){return e===E||_e(e,BT[t])&&!SE.call(R,t)?T:e}function mi(e,T,t,R,i,u){return LE(e)&&LE(T)&&(u.set(T,e),ot(e,T,E,mi,u),u.delete(T)),e}function ka(e){return cr(e)?E:e}function Hi(e,T,t,R,i,u){var o=t&h,L=e.length,l=T.length;if(L!=l&&!(o&&l>L))return!1;var p=u.get(e),M=u.get(T);if(p&&M)return p==T&&M==e;var d=-1,Y=!0,y=t&F?new OT:E;for(u.set(e,T),u.set(T,e);++d<L;){var X=e[d],k=T[d];if(R)var b=o?R(k,X,d,T,e,u):R(X,k,d,e,T,u);if(b!==E){if(b)continue;Y=!1;break}if(y){if(!Fn(T,function(j,tE){if(!Sr(y,tE)&&(X===j||i(X,j,t,R,u)))return y.push(tE)})){Y=!1;break}}else if(!(X===k||i(X,k,t,R,u))){Y=!1;break}}return u.delete(e),u.delete(T),Y}function Za(e,T,t,R,i,u,o){switch(t){case UT:if(e.byteLength!=T.byteLength||e.byteOffset!=T.byteOffset)return!1;e=e.buffer,T=T.buffer;case Rr:return!(e.byteLength!=T.byteLength||!u(new tt(e),new tt(T)));case er:case Tr:case rr:return _e(+e,+T);case wr:return e.name==T.name&&e.message==T.message;case tr:case nr:return e==T+"";case Ce:var L=Yn;case oe:var l=R&h;if(L||(L=zr),e.size!=T.size&&!l)return!1;var p=o.get(e);if(p)return p==T;R|=F,o.set(e,T);var M=Hi(L(e),L(T),R,i,u,o);return o.delete(e),M;case Jr:if(ur)return ur.call(e)==ur.call(T)}return!1}function za(e,T,t,R,i,u){var o=t&h,L=AA(e),l=L.length,p=AA(T),M=p.length;if(l!=M&&!o)return!1;for(var d=l;d--;){var Y=L[d];if(!(o?Y in T:SE.call(T,Y)))return!1}var y=u.get(e),X=u.get(T);if(y&&X)return y==T&&X==e;var k=!0;u.set(e,T),u.set(T,e);for(var b=o;++d<l;){Y=L[d];var j=e[Y],tE=T[Y];if(R)var te=o?R(tE,j,Y,T,e,u):R(j,tE,Y,e,T,u);if(!(te===E?j===tE||i(j,tE,t,R,u):te)){k=!1;break}b||(b=Y=="constructor")}if(k&&!b){var KE=e.constructor,ne=T.constructor;KE!=ne&&"constructor"in e&&"constructor"in T&&!(typeof KE=="function"&&KE instanceof KE&&typeof ne=="function"&&ne instanceof ne)&&(k=!1)}return u.delete(e),u.delete(T),k}function me(e){return sA(Vi(e,E,qi),e+"")}function AA(e){return Ei(e,FE,OA)}function RA(e){return Ei(e,ZE,Yi)}var SA=Ot?function(e){return Ot.get(e)}:UA;function Pt(e){for(var T=e.name+"",t=HT[T],R=SE.call(HT,T)?t.length:0;R--;){var i=t[R],u=i.func;if(u==null||u==e)return i.name}return T}function vT(e){var T=SE.call(N,"placeholder")?N:e;return T.placeholder}function W(){var e=N.iteratee||pA;return e=e===pA?ri:e,arguments.length?e(arguments[0],arguments[1]):e}function pt(e,T){var t=e.__data__;return AL(T)?t[typeof T=="string"?"string":"hash"]:t.map}function iA(e){for(var T=FE(e),t=T.length;t--;){var R=T[t],i=e[R];T[t]=[R,i,vi(i)]}return T}function uT(e,T){var t=So(e,T);return Ti(t)?t:E}function ja(e){var T=SE.call(e,ST),t=e[ST];try{e[ST]=E;var R=!0}catch{}var i=Tt.call(e);return R&&(T?e[ST]=t:delete e[ST]),i}var OA=xn?function(e){return e==null?[]:(e=iE(e),Ke(xn(e),function(T){return WS.call(e,T)}))}:hA,Yi=xn?function(e){for(var T=[];e;)Je(T,OA(e)),e=nt(e);return T}:hA,WE=bE;(vn&&WE(new vn(new ArrayBuffer(1)))!=UT||Or&&WE(new Or)!=Ce||yn&&WE(yn.resolve())!=ZR||mT&&WE(new mT)!=oe||Ir&&WE(new Ir)!=Ar)&&(WE=function(e){var T=bE(e),t=T==he?e.constructor:E,R=t?sT(t):"";if(R)switch(R){case Yo:return UT;case go:return Ce;case xo:return ZR;case vo:return oe;case yo:return Ar}return T});function EL(e,T,t){for(var R=-1,i=t.length;++R<i;){var u=t[R],o=u.size;switch(u.type){case"drop":e+=o;break;case"dropRight":T-=o;break;case"take":T=VE(T,e+o);break;case"takeRight":e=pE(e,T-o);break}}return{start:e,end:T}}function eL(e){var T=e.match(AC);return T?T[1].split(RC):[]}function gi(e,T,t){T=ze(T,e);for(var R=-1,i=T.length,u=!1;++R<i;){var o=Me(T[R]);if(!(u=e!=null&&t(e,o)))break;e=e[o]}return u||++R!=i?u:(i=e==null?0:e.length,!!i&&Bt(i)&&He(o,i)&&($(e)||CT(e)))}function TL(e){var T=e.length,t=new e.constructor(T);return T&&typeof e[0]=="string"&&SE.call(e,"index")&&(t.index=e.index,t.input=e.input),t}function xi(e){return typeof e.constructor=="function"&&!Dr(e)?YT(nt(e)):{}}function rL(e,T,t){var R=e.constructor;switch(T){case Rr:return rA(e);case er:case Tr:return new R(+e);case UT:return Va(e,t);case Sn:case On:case In:case Nn:case un:case sn:case Cn:case on:case an:return _i(e,t);case Ce:return new R;case rr:case nr:return new R(e);case tr:return Wa(e);case oe:return new R;case Jr:return Xa(e)}}function tL(e,T){var t=T.length;if(!t)return e;var R=t-1;return T[R]=(t>1?"& ":"")+T[R],T=T.join(t>2?", ":" "),e.replace(nC,`{
/* [wrapped with `+T+`] */
`)}function nL(e){return $(e)||CT(e)||!!(XS&&e&&e[XS])}function He(e,T){var t=typeof e;return T=T??we,!!T&&(t=="number"||t!="symbol"&&oC.test(e))&&e>-1&&e%1==0&&e<T}function wE(e,T,t){if(!LE(t))return!1;var R=typeof T;return(R=="number"?kE(t)&&He(T,t.length):R=="string"&&T in t)?_e(t[T],e):!1}function IA(e,T){if($(e))return!1;var t=typeof e;return t=="number"||t=="symbol"||t=="boolean"||e==null||re(e)?!0:eC.test(e)||!EC.test(e)||T!=null&&e in iE(T)}function AL(e){var T=typeof e;return T=="string"||T=="number"||T=="symbol"||T=="boolean"?e!=="__proto__":e===null}function NA(e){var T=Pt(e),t=N[T];if(typeof t!="function"||!(T in eE.prototype))return!1;if(e===t)return!0;var R=SA(t);return!!R&&e===R[0]}function RL(e){return!!vS&&vS in e}var SL=Et?Ye:FA;function Dr(e){var T=e&&e.constructor,t=typeof T=="function"&&T.prototype||BT;return e===t}function vi(e){return e===e&&!LE(e)}function yi(e,T){return function(t){return t==null?!1:t[e]===T&&(T!==E||e in iE(t))}}function iL(e){var T=dt(e,function(R){return t.size===C&&t.clear(),R}),t=T.cache;return T}function OL(e,T){var t=e[1],R=T[1],i=t|R,u=i<(H|G|nE),o=R==nE&&t==m||R==nE&&t==UE&&e[7].length<=T[8]||R==(nE|UE)&&T[7].length<=T[8]&&t==m;if(!(u||o))return e;R&H&&(e[2]=T[2],i|=t&H?0:x);var L=T[3];if(L){var l=e[3];e[3]=l?li(l,L,T[4]):L,e[4]=l?$e(e[3],s):T[4]}return L=T[5],L&&(l=e[5],e[5]=l?ci(l,L,T[6]):L,e[6]=l?$e(e[5],s):T[6]),L=T[7],L&&(e[7]=L),R&nE&&(e[8]=e[8]==null?T[8]:VE(e[8],T[8])),e[9]==null&&(e[9]=T[9]),e[0]=T[0],e[1]=i,e}function IL(e){var T=[];if(e!=null)for(var t in iE(e))T.push(t);return T}function NL(e){return Tt.call(e)}function Vi(e,T,t){return T=pE(T===E?e.length-1:T,0),function(){for(var R=arguments,i=-1,u=pE(R.length-T,0),o=f(u);++i<u;)o[i]=R[T+i];i=-1;for(var L=f(T+1);++i<T;)L[i]=R[i];return L[T]=t(o),Ee(e,this,L)}}function Wi(e,T){return T.length<2?e:NT(e,Ne(T,0,-1))}function uL(e,T){for(var t=e.length,R=VE(T.length,t),i=qE(e);R--;){var u=T[R];e[R]=He(u,t)?i[u]:E}return e}function uA(e,T){if(!(T==="constructor"&&typeof e[T]=="function")&&T!="__proto__")return e[T]}var Xi=wi(Ii),lr=Uo||function(e,T){return hE.setTimeout(e,T)},sA=wi(ga);function bi(e,T,t){var R=T+"";return sA(e,tL(R,sL(eL(R),t)))}function wi(e){var T=0,t=0;return function(){var R=Bo(),i=Hs-(R-t);if(t=R,i>0){if(++T>=ms)return arguments[0]}else T=0;return e.apply(E,arguments)}}function Mt(e,T){var t=-1,R=e.length,i=R-1;for(T=T===E?R:T;++t<T;){var u=kn(t,i),o=e[u];e[u]=e[t],e[t]=o}return e.length=T,e}var Ki=iL(function(e){var T=[];return e.charCodeAt(0)===46&&T.push(""),e.replace(TC,function(t,R,i,u){T.push(i?u.replace(OC,"$1"):R||t)}),T});function Me(e){if(typeof e=="string"||re(e))return e;var T=e+"";return T=="0"&&1/e==-AT?"-0":T}function sT(e){if(e!=null){try{return et.call(e)}catch{}try{return e+""}catch{}}return""}function sL(e,T){return Se(Vs,function(t){var R="_."+t[0];T&t[1]&&!kr(e,R)&&e.push(R)}),e.sort()}function Ji(e){if(e instanceof eE)return e.clone();var T=new Oe(e.__wrapped__,e.__chain__);return T.__actions__=qE(e.__actions__),T.__index__=e.__index__,T.__values__=e.__values__,T}function CL(e,T,t){(t?wE(e,T,t):T===E)?T=1:T=pE(q(T),0);var R=e==null?0:e.length;if(!R||T<1)return[];for(var i=0,u=0,o=f(St(R/T));i<R;)o[u++]=Ne(e,i,i+=T);return o}function oL(e){for(var T=-1,t=e==null?0:e.length,R=0,i=[];++T<t;){var u=e[T];u&&(i[R++]=u)}return i}function aL(){var e=arguments.length;if(!e)return[];for(var T=f(e-1),t=arguments[0],R=e;R--;)T[R-1]=arguments[R];return Je($(t)?qE(t):[t],gE(T,1))}var LL=z(function(e,T){return DE(e)?Cr(e,gE(T,1,DE,!0)):[]}),_L=z(function(e,T){var t=ue(T);return DE(t)&&(t=E),DE(e)?Cr(e,gE(T,1,DE,!0),W(t,2)):[]}),DL=z(function(e,T){var t=ue(T);return DE(t)&&(t=E),DE(e)?Cr(e,gE(T,1,DE,!0),E,t):[]});function lL(e,T,t){var R=e==null?0:e.length;return R?(T=t||T===E?1:q(T),Ne(e,T<0?0:T,R)):[]}function cL(e,T,t){var R=e==null?0:e.length;return R?(T=t||T===E?1:q(T),T=R-T,Ne(e,0,T<0?0:T)):[]}function fL(e,T){return e&&e.length?Lt(e,W(T,3),!0,!0):[]}function PL(e,T){return e&&e.length?Lt(e,W(T,3),!0):[]}function pL(e,T,t,R){var i=e==null?0:e.length;return i?(t&&typeof t!="number"&&wE(e,T,t)&&(t=0,R=i),aa(e,T,t,R)):[]}function $i(e,T,t){var R=e==null?0:e.length;if(!R)return-1;var i=t==null?0:q(t);return i<0&&(i=pE(R+i,0)),Zr(e,W(T,3),i)}function Qi(e,T,t){var R=e==null?0:e.length;if(!R)return-1;var i=R-1;return t!==E&&(i=q(t),i=t<0?pE(R+i,0):VE(i,R-1)),Zr(e,W(T,3),i,!0)}function qi(e){var T=e==null?0:e.length;return T?gE(e,1):[]}function ML(e){var T=e==null?0:e.length;return T?gE(e,AT):[]}function UL(e,T){var t=e==null?0:e.length;return t?(T=T===E?1:q(T),gE(e,T)):[]}function hL(e){for(var T=-1,t=e==null?0:e.length,R={};++T<t;){var i=e[T];R[i[0]]=i[1]}return R}function ki(e){return e&&e.length?e[0]:E}function FL(e,T,t){var R=e==null?0:e.length;if(!R)return-1;var i=t==null?0:q(t);return i<0&&(i=pE(R+i,0)),FT(e,T,i)}function dL(e){var T=e==null?0:e.length;return T?Ne(e,0,-1):[]}var GL=z(function(e){var T=CE(e,eA);return T.length&&T[0]===e[0]?Kn(T):[]}),BL=z(function(e){var T=ue(e),t=CE(e,eA);return T===ue(t)?T=E:t.pop(),t.length&&t[0]===e[0]?Kn(t,W(T,2)):[]}),mL=z(function(e){var T=ue(e),t=CE(e,eA);return T=typeof T=="function"?T:E,T&&t.pop(),t.length&&t[0]===e[0]?Kn(t,E,T):[]});function HL(e,T){return e==null?"":Fo.call(e,T)}function ue(e){var T=e==null?0:e.length;return T?e[T-1]:E}function YL(e,T,t){var R=e==null?0:e.length;if(!R)return-1;var i=R;return t!==E&&(i=q(t),i=i<0?pE(R+i,0):VE(i,R-1)),T===T?uo(e,T,i):Zr(e,dS,i,!0)}function gL(e,T){return e&&e.length?Ri(e,q(T)):E}var xL=z(Zi);function Zi(e,T){return e&&e.length&&T&&T.length?qn(e,T):e}function vL(e,T,t){return e&&e.length&&T&&T.length?qn(e,T,W(t,2)):e}function yL(e,T,t){return e&&e.length&&T&&T.length?qn(e,T,E,t):e}var VL=me(function(e,T){var t=e==null?0:e.length,R=Wn(e,T);return Oi(e,CE(T,function(i){return He(i,t)?+i:i}).sort(Di)),R});function WL(e,T){var t=[];if(!(e&&e.length))return t;var R=-1,i=[],u=e.length;for(T=W(T,3);++R<u;){var o=e[R];T(o,R,e)&&(t.push(o),i.push(R))}return Oi(e,i),t}function CA(e){return e==null?e:Ho.call(e)}function XL(e,T,t){var R=e==null?0:e.length;return R?(t&&typeof t!="number"&&wE(e,T,t)?(T=0,t=R):(T=T==null?0:q(T),t=t===E?R:q(t)),Ne(e,T,t)):[]}function bL(e,T){return at(e,T)}function wL(e,T,t){return zn(e,T,W(t,2))}function KL(e,T){var t=e==null?0:e.length;if(t){var R=at(e,T);if(R<t&&_e(e[R],T))return R}return-1}function JL(e,T){return at(e,T,!0)}function $L(e,T,t){return zn(e,T,W(t,2),!0)}function QL(e,T){var t=e==null?0:e.length;if(t){var R=at(e,T,!0)-1;if(_e(e[R],T))return R}return-1}function qL(e){return e&&e.length?Ni(e):[]}function kL(e,T){return e&&e.length?Ni(e,W(T,2)):[]}function ZL(e){var T=e==null?0:e.length;return T?Ne(e,1,T):[]}function zL(e,T,t){return e&&e.length?(T=t||T===E?1:q(T),Ne(e,0,T<0?0:T)):[]}function jL(e,T,t){var R=e==null?0:e.length;return R?(T=t||T===E?1:q(T),T=R-T,Ne(e,T<0?0:T,R)):[]}function E_(e,T){return e&&e.length?Lt(e,W(T,3),!1,!0):[]}function e_(e,T){return e&&e.length?Lt(e,W(T,3)):[]}var T_=z(function(e){return Ze(gE(e,1,DE,!0))}),r_=z(function(e){var T=ue(e);return DE(T)&&(T=E),Ze(gE(e,1,DE,!0),W(T,2))}),t_=z(function(e){var T=ue(e);return T=typeof T=="function"?T:E,Ze(gE(e,1,DE,!0),E,T)});function n_(e){return e&&e.length?Ze(e):[]}function A_(e,T){return e&&e.length?Ze(e,W(T,2)):[]}function R_(e,T){return T=typeof T=="function"?T:E,e&&e.length?Ze(e,E,T):[]}function oA(e){if(!(e&&e.length))return[];var T=0;return e=Ke(e,function(t){if(DE(t))return T=pE(t.length,T),!0}),mn(T,function(t){return CE(e,dn(t))})}function zi(e,T){if(!(e&&e.length))return[];var t=oA(e);return T==null?t:CE(t,function(R){return Ee(T,E,R)})}var S_=z(function(e,T){return DE(e)?Cr(e,T):[]}),i_=z(function(e){return EA(Ke(e,DE))}),O_=z(function(e){var T=ue(e);return DE(T)&&(T=E),EA(Ke(e,DE),W(T,2))}),I_=z(function(e){var T=ue(e);return T=typeof T=="function"?T:E,EA(Ke(e,DE),E,T)}),N_=z(oA);function u_(e,T){return oi(e||[],T||[],sr)}function s_(e,T){return oi(e||[],T||[],Lr)}var C_=z(function(e){var T=e.length,t=T>1?e[T-1]:E;return t=typeof t=="function"?(e.pop(),t):E,zi(e,t)});function ji(e){var T=N(e);return T.__chain__=!0,T}function o_(e,T){return T(e),e}function Ut(e,T){return T(e)}var a_=me(function(e){var T=e.length,t=T?e[0]:0,R=this.__wrapped__,i=function(u){return Wn(u,e)};return T>1||this.__actions__.length||!(R instanceof eE)||!He(t)?this.thru(i):(R=R.slice(t,+t+(T?1:0)),R.__actions__.push({func:Ut,args:[i],thisArg:E}),new Oe(R,this.__chain__).thru(function(u){return T&&!u.length&&u.push(E),u}))});function L_(){return ji(this)}function __(){return new Oe(this.value(),this.__chain__)}function D_(){this.__values__===E&&(this.__values__=uO(this.value()));var e=this.__index__>=this.__values__.length,T=e?E:this.__values__[this.__index__++];return{done:e,value:T}}function l_(){return this}function c_(e){for(var T,t=this;t instanceof Nt;){var R=Ji(t);R.__index__=0,R.__values__=E,T?i.__wrapped__=R:T=R;var i=R;t=t.__wrapped__}return i.__wrapped__=e,T}function f_(){var e=this.__wrapped__;if(e instanceof eE){var T=e;return this.__actions__.length&&(T=new eE(this)),T=T.reverse(),T.__actions__.push({func:Ut,args:[CA],thisArg:E}),new Oe(T,this.__chain__)}return this.thru(CA)}function P_(){return Ci(this.__wrapped__,this.__actions__)}var p_=_t(function(e,T,t){SE.call(e,t)?++e[t]:Ge(e,t,1)});function M_(e,T,t){var R=$(e)?hS:oa;return t&&wE(e,T,t)&&(T=E),R(e,W(T,3))}function U_(e,T){var t=$(e)?Ke:zS;return t(e,W(T,3))}var h_=Mi($i),F_=Mi(Qi);function d_(e,T){return gE(ht(e,T),1)}function G_(e,T){return gE(ht(e,T),AT)}function B_(e,T,t){return t=t===E?1:q(t),gE(ht(e,T),t)}function EO(e,T){var t=$(e)?Se:ke;return t(e,W(T,3))}function eO(e,T){var t=$(e)?kC:ZS;return t(e,W(T,3))}var m_=_t(function(e,T,t){SE.call(e,t)?e[t].push(T):Ge(e,t,[T])});function H_(e,T,t,R){e=kE(e)?e:VT(e),t=t&&!R?q(t):0;var i=e.length;return t<0&&(t=pE(i+t,0)),mt(e)?t<=i&&e.indexOf(T,t)>-1:!!i&&FT(e,T,t)>-1}var Y_=z(function(e,T,t){var R=-1,i=typeof T=="function",u=kE(e)?f(e.length):[];return ke(e,function(o){u[++R]=i?Ee(T,o,t):or(o,T,t)}),u}),g_=_t(function(e,T,t){Ge(e,t,T)});function ht(e,T){var t=$(e)?CE:ti;return t(e,W(T,3))}function x_(e,T,t,R){return e==null?[]:($(T)||(T=T==null?[]:[T]),t=R?E:t,$(t)||(t=t==null?[]:[t]),Si(e,T,t))}var v_=_t(function(e,T,t){e[t?0:1].push(T)},function(){return[[],[]]});function y_(e,T,t){var R=$(e)?hn:BS,i=arguments.length<3;return R(e,W(T,4),t,i,ke)}function V_(e,T,t){var R=$(e)?ZC:BS,i=arguments.length<3;return R(e,W(T,4),t,i,ZS)}function W_(e,T){var t=$(e)?Ke:zS;return t(e,Gt(W(T,3)))}function X_(e){var T=$(e)?$S:Ha;return T(e)}function b_(e,T,t){(t?wE(e,T,t):T===E)?T=1:T=q(T);var R=$(e)?Ia:Ya;return R(e,T)}function w_(e){var T=$(e)?Na:xa;return T(e)}function K_(e){if(e==null)return 0;if(kE(e))return mt(e)?GT(e):e.length;var T=WE(e);return T==Ce||T==oe?e.size:$n(e).length}function J_(e,T,t){var R=$(e)?Fn:va;return t&&wE(e,T,t)&&(T=E),R(e,W(T,3))}var $_=z(function(e,T){if(e==null)return[];var t=T.length;return t>1&&wE(e,T[0],T[1])?T=[]:t>2&&wE(T[0],T[1],T[2])&&(T=[T[0]]),Si(e,gE(T,1),[])}),Ft=Mo||function(){return hE.Date.now()};function Q_(e,T){if(typeof T!="function")throw new ie(S);return e=q(e),function(){if(--e<1)return T.apply(this,arguments)}}function TO(e,T,t){return T=t?E:T,T=e&&T==null?e.length:T,Be(e,nE,E,E,E,E,T)}function rO(e,T){var t;if(typeof T!="function")throw new ie(S);return e=q(e),function(){return--e>0&&(t=T.apply(this,arguments)),e<=1&&(T=E),t}}var aA=z(function(e,T,t){var R=H;if(t.length){var i=$e(t,vT(aA));R|=rE}return Be(e,R,T,t,i)}),tO=z(function(e,T,t){var R=H|G;if(t.length){var i=$e(t,vT(tO));R|=rE}return Be(T,R,e,t,i)});function nO(e,T,t){T=t?E:T;var R=Be(e,m,E,E,E,E,E,T);return R.placeholder=nO.placeholder,R}function AO(e,T,t){T=t?E:T;var R=Be(e,g,E,E,E,E,E,T);return R.placeholder=AO.placeholder,R}function RO(e,T,t){var R,i,u,o,L,l,p=0,M=!1,d=!1,Y=!0;if(typeof e!="function")throw new ie(S);T=se(T)||0,LE(t)&&(M=!!t.leading,d="maxWait"in t,u=d?pE(se(t.maxWait)||0,T):u,Y="trailing"in t?!!t.trailing:Y);function y(lE){var De=R,xe=i;return R=i=E,p=lE,o=e.apply(xe,De),o}function X(lE){return p=lE,L=lr(j,T),M?y(lE):o}function k(lE){var De=lE-l,xe=lE-p,MO=T-De;return d?VE(MO,u-xe):MO}function b(lE){var De=lE-l,xe=lE-p;return l===E||De>=T||De<0||d&&xe>=u}function j(){var lE=Ft();if(b(lE))return tE(lE);L=lr(j,k(lE))}function tE(lE){return L=E,Y&&R?y(lE):(R=i=E,o)}function te(){L!==E&&ai(L),p=0,R=l=i=L=E}function KE(){return L===E?o:tE(Ft())}function ne(){var lE=Ft(),De=b(lE);if(R=arguments,i=this,l=lE,De){if(L===E)return X(l);if(d)return ai(L),L=lr(j,T),y(l)}return L===E&&(L=lr(j,T)),o}return ne.cancel=te,ne.flush=KE,ne}var q_=z(function(e,T){return kS(e,1,T)}),k_=z(function(e,T,t){return kS(e,se(T)||0,t)});function Z_(e){return Be(e,pT)}function dt(e,T){if(typeof e!="function"||T!=null&&typeof T!="function")throw new ie(S);var t=function(){var R=arguments,i=T?T.apply(this,R):R[0],u=t.cache;if(u.has(i))return u.get(i);var o=e.apply(this,R);return t.cache=u.set(i,o)||u,o};return t.cache=new(dt.Cache||de),t}dt.Cache=de;function Gt(e){if(typeof e!="function")throw new ie(S);return function(){var T=arguments;switch(T.length){case 0:return!e.call(this);case 1:return!e.call(this,T[0]);case 2:return!e.call(this,T[0],T[1]);case 3:return!e.call(this,T[0],T[1],T[2])}return!e.apply(this,T)}}function z_(e){return rO(2,e)}var j_=ya(function(e,T){T=T.length==1&&$(T[0])?CE(T[0],ee(W())):CE(gE(T,1),ee(W()));var t=T.length;return z(function(R){for(var i=-1,u=VE(R.length,t);++i<u;)R[i]=T[i].call(this,R[i]);return Ee(e,this,R)})}),LA=z(function(e,T){var t=$e(T,vT(LA));return Be(e,rE,E,T,t)}),SO=z(function(e,T){var t=$e(T,vT(SO));return Be(e,EE,E,T,t)}),ED=me(function(e,T){return Be(e,UE,E,E,E,T)});function eD(e,T){if(typeof e!="function")throw new ie(S);return T=T===E?T:q(T),z(e,T)}function TD(e,T){if(typeof e!="function")throw new ie(S);return T=T==null?0:pE(q(T),0),z(function(t){var R=t[T],i=je(t,0,T);return R&&Je(i,R),Ee(e,this,i)})}function rD(e,T,t){var R=!0,i=!0;if(typeof e!="function")throw new ie(S);return LE(t)&&(R="leading"in t?!!t.leading:R,i="trailing"in t?!!t.trailing:i),RO(e,T,{leading:R,maxWait:T,trailing:i})}function tD(e){return TO(e,1)}function nD(e,T){return LA(TA(T),e)}function AD(){if(!arguments.length)return[];var e=arguments[0];return $(e)?e:[e]}function RD(e){return Ie(e,_)}function SD(e,T){return T=typeof T=="function"?T:E,Ie(e,_,T)}function iD(e){return Ie(e,a|_)}function OD(e,T){return T=typeof T=="function"?T:E,Ie(e,a|_,T)}function ID(e,T){return T==null||qS(e,T,FE(T))}function _e(e,T){return e===T||e!==e&&T!==T}var ND=ft(wn),uD=ft(function(e,T){return e>=T}),CT=ei(function(){return arguments}())?ei:function(e){return _E(e)&&SE.call(e,"callee")&&!WS.call(e,"callee")},$=f.isArray,sD=cS?ee(cS):ca;function kE(e){return e!=null&&Bt(e.length)&&!Ye(e)}function DE(e){return _E(e)&&kE(e)}function CD(e){return e===!0||e===!1||_E(e)&&bE(e)==er}var ET=ho||FA,oD=fS?ee(fS):fa;function aD(e){return _E(e)&&e.nodeType===1&&!cr(e)}function LD(e){if(e==null)return!0;if(kE(e)&&($(e)||typeof e=="string"||typeof e.splice=="function"||ET(e)||yT(e)||CT(e)))return!e.length;var T=WE(e);if(T==Ce||T==oe)return!e.size;if(Dr(e))return!$n(e).length;for(var t in e)if(SE.call(e,t))return!1;return!0}function _D(e,T){return ar(e,T)}function DD(e,T,t){t=typeof t=="function"?t:E;var R=t?t(e,T):E;return R===E?ar(e,T,E,t):!!R}function _A(e){if(!_E(e))return!1;var T=bE(e);return T==wr||T==Xs||typeof e.message=="string"&&typeof e.name=="string"&&!cr(e)}function lD(e){return typeof e=="number"&&bS(e)}function Ye(e){if(!LE(e))return!1;var T=bE(e);return T==Kr||T==kR||T==Ws||T==ws}function iO(e){return typeof e=="number"&&e==q(e)}function Bt(e){return typeof e=="number"&&e>-1&&e%1==0&&e<=we}function LE(e){var T=typeof e;return e!=null&&(T=="object"||T=="function")}function _E(e){return e!=null&&typeof e=="object"}var OO=PS?ee(PS):pa;function cD(e,T){return e===T||Jn(e,T,iA(T))}function fD(e,T,t){return t=typeof t=="function"?t:E,Jn(e,T,iA(T),t)}function PD(e){return IO(e)&&e!=+e}function pD(e){if(SL(e))throw new J(A);return Ti(e)}function MD(e){return e===null}function UD(e){return e==null}function IO(e){return typeof e=="number"||_E(e)&&bE(e)==rr}function cr(e){if(!_E(e)||bE(e)!=he)return!1;var T=nt(e);if(T===null)return!0;var t=SE.call(T,"constructor")&&T.constructor;return typeof t=="function"&&t instanceof t&&et.call(t)==co}var DA=pS?ee(pS):Ma;function hD(e){return iO(e)&&e>=-we&&e<=we}var NO=MS?ee(MS):Ua;function mt(e){return typeof e=="string"||!$(e)&&_E(e)&&bE(e)==nr}function re(e){return typeof e=="symbol"||_E(e)&&bE(e)==Jr}var yT=US?ee(US):ha;function FD(e){return e===E}function dD(e){return _E(e)&&WE(e)==Ar}function GD(e){return _E(e)&&bE(e)==Js}var BD=ft(Qn),mD=ft(function(e,T){return e<=T});function uO(e){if(!e)return[];if(kE(e))return mt(e)?ae(e):qE(e);if(ir&&e[ir])return Oo(e[ir]());var T=WE(e),t=T==Ce?Yn:T==oe?zr:VT;return t(e)}function ge(e){if(!e)return e===0?e:0;if(e=se(e),e===AT||e===-AT){var T=e<0?-1:1;return T*xs}return e===e?e:0}function q(e){var T=ge(e),t=T%1;return T===T?t?T-t:T:0}function sO(e){return e?IT(q(e),0,fe):0}function se(e){if(typeof e=="number")return e;if(re(e))return Xr;if(LE(e)){var T=typeof e.valueOf=="function"?e.valueOf():e;e=LE(T)?T+"":T}if(typeof e!="string")return e===0?e:+e;e=mS(e);var t=uC.test(e);return t||CC.test(e)?$C(e.slice(2),t?2:8):NC.test(e)?Xr:+e}function CO(e){return pe(e,ZE(e))}function HD(e){return e?IT(q(e),-we,we):e===0?e:0}function RE(e){return e==null?"":Te(e)}var YD=gT(function(e,T){if(Dr(T)||kE(T)){pe(T,FE(T),e);return}for(var t in T)SE.call(T,t)&&sr(e,t,T[t])}),oO=gT(function(e,T){pe(T,ZE(T),e)}),Ht=gT(function(e,T,t,R){pe(T,ZE(T),e,R)}),gD=gT(function(e,T,t,R){pe(T,FE(T),e,R)}),xD=me(Wn);function vD(e,T){var t=YT(e);return T==null?t:QS(t,T)}var yD=z(function(e,T){e=iE(e);var t=-1,R=T.length,i=R>2?T[2]:E;for(i&&wE(T[0],T[1],i)&&(R=1);++t<R;)for(var u=T[t],o=ZE(u),L=-1,l=o.length;++L<l;){var p=o[L],M=e[p];(M===E||_e(M,BT[p])&&!SE.call(e,p))&&(e[p]=u[p])}return e}),VD=z(function(e){return e.push(E,mi),Ee(aO,E,e)});function WD(e,T){return FS(e,W(T,3),Pe)}function XD(e,T){return FS(e,W(T,3),bn)}function bD(e,T){return e==null?e:Xn(e,W(T,3),ZE)}function wD(e,T){return e==null?e:jS(e,W(T,3),ZE)}function KD(e,T){return e&&Pe(e,W(T,3))}function JD(e,T){return e&&bn(e,W(T,3))}function $D(e){return e==null?[]:Ct(e,FE(e))}function QD(e){return e==null?[]:Ct(e,ZE(e))}function lA(e,T,t){var R=e==null?E:NT(e,T);return R===E?t:R}function qD(e,T){return e!=null&&gi(e,T,La)}function cA(e,T){return e!=null&&gi(e,T,_a)}var kD=hi(function(e,T,t){T!=null&&typeof T.toString!="function"&&(T=Tt.call(T)),e[T]=t},PA(zE)),ZD=hi(function(e,T,t){T!=null&&typeof T.toString!="function"&&(T=Tt.call(T)),SE.call(e,T)?e[T].push(t):e[T]=[t]},W),zD=z(or);function FE(e){return kE(e)?JS(e):$n(e)}function ZE(e){return kE(e)?JS(e,!0):Fa(e)}function jD(e,T){var t={};return T=W(T,3),Pe(e,function(R,i,u){Ge(t,T(R,i,u),R)}),t}function El(e,T){var t={};return T=W(T,3),Pe(e,function(R,i,u){Ge(t,i,T(R,i,u))}),t}var el=gT(function(e,T,t){ot(e,T,t)}),aO=gT(function(e,T,t,R){ot(e,T,t,R)}),Tl=me(function(e,T){var t={};if(e==null)return t;var R=!1;T=CE(T,function(u){return u=ze(u,e),R||(R=u.length>1),u}),pe(e,RA(e),t),R&&(t=Ie(t,a|c|_,ka));for(var i=T.length;i--;)jn(t,T[i]);return t});function rl(e,T){return LO(e,Gt(W(T)))}var tl=me(function(e,T){return e==null?{}:Ga(e,T)});function LO(e,T){if(e==null)return{};var t=CE(RA(e),function(R){return[R]});return T=W(T),ii(e,t,function(R,i){return T(R,i[0])})}function nl(e,T,t){T=ze(T,e);var R=-1,i=T.length;for(i||(i=1,e=E);++R<i;){var u=e==null?E:e[Me(T[R])];u===E&&(R=i,u=t),e=Ye(u)?u.call(e):u}return e}function Al(e,T,t){return e==null?e:Lr(e,T,t)}function Rl(e,T,t,R){return R=typeof R=="function"?R:E,e==null?e:Lr(e,T,t,R)}var _O=Gi(FE),DO=Gi(ZE);function Sl(e,T,t){var R=$(e),i=R||ET(e)||yT(e);if(T=W(T,4),t==null){var u=e&&e.constructor;i?t=R?new u:[]:LE(e)?t=Ye(u)?YT(nt(e)):{}:t={}}return(i?Se:Pe)(e,function(o,L,l){return T(t,o,L,l)}),t}function il(e,T){return e==null?!0:jn(e,T)}function Ol(e,T,t){return e==null?e:si(e,T,TA(t))}function Il(e,T,t,R){return R=typeof R=="function"?R:E,e==null?e:si(e,T,TA(t),R)}function VT(e){return e==null?[]:Hn(e,FE(e))}function Nl(e){return e==null?[]:Hn(e,ZE(e))}function ul(e,T,t){return t===E&&(t=T,T=E),t!==E&&(t=se(t),t=t===t?t:0),T!==E&&(T=se(T),T=T===T?T:0),IT(se(e),T,t)}function sl(e,T,t){return T=ge(T),t===E?(t=T,T=0):t=ge(t),e=se(e),Da(e,T,t)}function Cl(e,T,t){if(t&&typeof t!="boolean"&&wE(e,T,t)&&(T=t=E),t===E&&(typeof T=="boolean"?(t=T,T=E):typeof e=="boolean"&&(t=e,e=E)),e===E&&T===E?(e=0,T=1):(e=ge(e),T===E?(T=e,e=0):T=ge(T)),e>T){var R=e;e=T,T=R}if(t||e%1||T%1){var i=wS();return VE(e+i*(T-e+JC("1e-"+((i+"").length-1))),T)}return kn(e,T)}var ol=xT(function(e,T,t){return T=T.toLowerCase(),e+(t?lO(T):T)});function lO(e){return fA(RE(e).toLowerCase())}function cO(e){return e=RE(e),e&&e.replace(aC,no).replace(gC,"")}function al(e,T,t){e=RE(e),T=Te(T);var R=e.length;t=t===E?R:IT(q(t),0,R);var i=t;return t-=T.length,t>=0&&e.slice(t,i)==T}function Ll(e){return e=RE(e),e&&Zs.test(e)?e.replace(jR,Ao):e}function _l(e){return e=RE(e),e&&rC.test(e)?e.replace(Ln,"\\$&"):e}var Dl=xT(function(e,T,t){return e+(t?"-":"")+T.toLowerCase()}),ll=xT(function(e,T,t){return e+(t?" ":"")+T.toLowerCase()}),cl=pi("toLowerCase");function fl(e,T,t){e=RE(e),T=q(T);var R=T?GT(e):0;if(!T||R>=T)return e;var i=(T-R)/2;return ct(it(i),t)+e+ct(St(i),t)}function Pl(e,T,t){e=RE(e),T=q(T);var R=T?GT(e):0;return T&&R<T?e+ct(T-R,t):e}function pl(e,T,t){e=RE(e),T=q(T);var R=T?GT(e):0;return T&&R<T?ct(T-R,t)+e:e}function Ml(e,T,t){return t||T==null?T=0:T&&(T=+T),mo(RE(e).replace(_n,""),T||0)}function Ul(e,T,t){return(t?wE(e,T,t):T===E)?T=1:T=q(T),Zn(RE(e),T)}function hl(){var e=arguments,T=RE(e[0]);return e.length<3?T:T.replace(e[1],e[2])}var Fl=xT(function(e,T,t){return e+(t?"_":"")+T.toLowerCase()});function dl(e,T,t){return t&&typeof t!="number"&&wE(e,T,t)&&(T=t=E),t=t===E?fe:t>>>0,t?(e=RE(e),e&&(typeof T=="string"||T!=null&&!DA(T))&&(T=Te(T),!T&&dT(e))?je(ae(e),0,t):e.split(T,t)):[]}var Gl=xT(function(e,T,t){return e+(t?" ":"")+fA(T)});function Bl(e,T,t){return e=RE(e),t=t==null?0:IT(q(t),0,e.length),T=Te(T),e.slice(t,t+T.length)==T}function ml(e,T,t){var R=N.templateSettings;t&&wE(e,T,t)&&(T=E),e=RE(e),T=Ht({},T,R,Bi);var i=Ht({},T.imports,R.imports,Bi),u=FE(i),o=Hn(i,u),L,l,p=0,M=T.interpolate||$r,d="__p += '",Y=gn((T.escape||$r).source+"|"+M.source+"|"+(M===ES?IC:$r).source+"|"+(T.evaluate||$r).source+"|$","g"),y="//# sourceURL="+(SE.call(T,"sourceURL")?(T.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++WC+"]")+`
`;e.replace(Y,function(b,j,tE,te,KE,ne){return tE||(tE=te),d+=e.slice(p,ne).replace(LC,Ro),j&&(L=!0,d+=`' +
__e(`+j+`) +
'`),KE&&(l=!0,d+=`';
`+KE+`;
__p += '`),tE&&(d+=`' +
((__t = (`+tE+`)) == null ? '' : __t) +
'`),p=ne+b.length,b}),d+=`';
`;var X=SE.call(T,"variable")&&T.variable;if(!X)d=`with (obj) {
`+d+`
}
`;else if(iC.test(X))throw new J(O);d=(l?d.replace($s,""):d).replace(Qs,"$1").replace(qs,"$1;"),d="function("+(X||"obj")+`) {
`+(X?"":`obj || (obj = {});
`)+"var __t, __p = ''"+(L?", __e = _.escape":"")+(l?`, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
`:`;
`)+d+`return __p
}`;var k=PO(function(){return AE(u,y+"return "+d).apply(E,o)});if(k.source=d,_A(k))throw k;return k}function Hl(e){return RE(e).toLowerCase()}function Yl(e){return RE(e).toUpperCase()}function gl(e,T,t){if(e=RE(e),e&&(t||T===E))return mS(e);if(!e||!(T=Te(T)))return e;var R=ae(e),i=ae(T),u=HS(R,i),o=YS(R,i)+1;return je(R,u,o).join("")}function xl(e,T,t){if(e=RE(e),e&&(t||T===E))return e.slice(0,xS(e)+1);if(!e||!(T=Te(T)))return e;var R=ae(e),i=YS(R,ae(T))+1;return je(R,0,i).join("")}function vl(e,T,t){if(e=RE(e),e&&(t||T===E))return e.replace(_n,"");if(!e||!(T=Te(T)))return e;var R=ae(e),i=HS(R,ae(T));return je(R,i).join("")}function yl(e,T){var t=Gs,R=Bs;if(LE(T)){var i="separator"in T?T.separator:i;t="length"in T?q(T.length):t,R="omission"in T?Te(T.omission):R}e=RE(e);var u=e.length;if(dT(e)){var o=ae(e);u=o.length}if(t>=u)return e;var L=t-GT(R);if(L<1)return R;var l=o?je(o,0,L).join(""):e.slice(0,L);if(i===E)return l+R;if(o&&(L+=l.length-L),DA(i)){if(e.slice(L).search(i)){var p,M=l;for(i.global||(i=gn(i.source,RE(eS.exec(i))+"g")),i.lastIndex=0;p=i.exec(M);)var d=p.index;l=l.slice(0,d===E?L:d)}}else if(e.indexOf(Te(i),L)!=L){var Y=l.lastIndexOf(i);Y>-1&&(l=l.slice(0,Y))}return l+R}function Vl(e){return e=RE(e),e&&ks.test(e)?e.replace(zR,so):e}var Wl=xT(function(e,T,t){return e+(t?" ":"")+T.toUpperCase()}),fA=pi("toUpperCase");function fO(e,T,t){return e=RE(e),T=t?E:T,T===E?io(e)?ao(e):Eo(e):e.match(T)||[]}var PO=z(function(e,T){try{return Ee(e,E,T)}catch(t){return _A(t)?t:new J(t)}}),Xl=me(function(e,T){return Se(T,function(t){t=Me(t),Ge(e,t,aA(e[t],e))}),e});function bl(e){var T=e==null?0:e.length,t=W();return e=T?CE(e,function(R){if(typeof R[1]!="function")throw new ie(S);return[t(R[0]),R[1]]}):[],z(function(R){for(var i=-1;++i<T;){var u=e[i];if(Ee(u[0],this,R))return Ee(u[1],this,R)}})}function wl(e){return Ca(Ie(e,a))}function PA(e){return function(){return e}}function Kl(e,T){return e==null||e!==e?T:e}var Jl=Ui(),$l=Ui(!0);function zE(e){return e}function pA(e){return ri(typeof e=="function"?e:Ie(e,a))}function Ql(e){return ni(Ie(e,a))}function ql(e,T){return Ai(e,Ie(T,a))}var kl=z(function(e,T){return function(t){return or(t,e,T)}}),Zl=z(function(e,T){return function(t){return or(e,t,T)}});function MA(e,T,t){var R=FE(T),i=Ct(T,R);t==null&&!(LE(T)&&(i.length||!R.length))&&(t=T,T=e,e=this,i=Ct(T,FE(T)));var u=!(LE(t)&&"chain"in t)||!!t.chain,o=Ye(e);return Se(i,function(L){var l=T[L];e[L]=l,o&&(e.prototype[L]=function(){var p=this.__chain__;if(u||p){var M=e(this.__wrapped__),d=M.__actions__=qE(this.__actions__);return d.push({func:l,args:arguments,thisArg:e}),M.__chain__=p,M}return l.apply(e,Je([this.value()],arguments))})}),e}function zl(){return hE._===this&&(hE._=fo),this}function UA(){}function jl(e){return e=q(e),z(function(T){return Ri(T,e)})}var Ec=tA(CE),ec=tA(hS),Tc=tA(Fn);function pO(e){return IA(e)?dn(Me(e)):Ba(e)}function rc(e){return function(T){return e==null?E:NT(e,T)}}var tc=Fi(),nc=Fi(!0);function hA(){return[]}function FA(){return!1}function Ac(){return{}}function Rc(){return""}function Sc(){return!0}function ic(e,T){if(e=q(e),e<1||e>we)return[];var t=fe,R=VE(e,fe);T=W(T),e-=fe;for(var i=mn(R,T);++t<e;)T(t);return i}function Oc(e){return $(e)?CE(e,Me):re(e)?[e]:qE(Ki(RE(e)))}function Ic(e){var T=++lo;return RE(e)+T}var Nc=lt(function(e,T){return e+T},0),uc=nA("ceil"),sc=lt(function(e,T){return e/T},1),Cc=nA("floor");function oc(e){return e&&e.length?st(e,zE,wn):E}function ac(e,T){return e&&e.length?st(e,W(T,2),wn):E}function Lc(e){return GS(e,zE)}function _c(e,T){return GS(e,W(T,2))}function Dc(e){return e&&e.length?st(e,zE,Qn):E}function lc(e,T){return e&&e.length?st(e,W(T,2),Qn):E}var cc=lt(function(e,T){return e*T},1),fc=nA("round"),Pc=lt(function(e,T){return e-T},0);function pc(e){return e&&e.length?Bn(e,zE):0}function Mc(e,T){return e&&e.length?Bn(e,W(T,2)):0}return N.after=Q_,N.ary=TO,N.assign=YD,N.assignIn=oO,N.assignInWith=Ht,N.assignWith=gD,N.at=xD,N.before=rO,N.bind=aA,N.bindAll=Xl,N.bindKey=tO,N.castArray=AD,N.chain=ji,N.chunk=CL,N.compact=oL,N.concat=aL,N.cond=bl,N.conforms=wl,N.constant=PA,N.countBy=p_,N.create=vD,N.curry=nO,N.curryRight=AO,N.debounce=RO,N.defaults=yD,N.defaultsDeep=VD,N.defer=q_,N.delay=k_,N.difference=LL,N.differenceBy=_L,N.differenceWith=DL,N.drop=lL,N.dropRight=cL,N.dropRightWhile=fL,N.dropWhile=PL,N.fill=pL,N.filter=U_,N.flatMap=d_,N.flatMapDeep=G_,N.flatMapDepth=B_,N.flatten=qi,N.flattenDeep=ML,N.flattenDepth=UL,N.flip=Z_,N.flow=Jl,N.flowRight=$l,N.fromPairs=hL,N.functions=$D,N.functionsIn=QD,N.groupBy=m_,N.initial=dL,N.intersection=GL,N.intersectionBy=BL,N.intersectionWith=mL,N.invert=kD,N.invertBy=ZD,N.invokeMap=Y_,N.iteratee=pA,N.keyBy=g_,N.keys=FE,N.keysIn=ZE,N.map=ht,N.mapKeys=jD,N.mapValues=El,N.matches=Ql,N.matchesProperty=ql,N.memoize=dt,N.merge=el,N.mergeWith=aO,N.method=kl,N.methodOf=Zl,N.mixin=MA,N.negate=Gt,N.nthArg=jl,N.omit=Tl,N.omitBy=rl,N.once=z_,N.orderBy=x_,N.over=Ec,N.overArgs=j_,N.overEvery=ec,N.overSome=Tc,N.partial=LA,N.partialRight=SO,N.partition=v_,N.pick=tl,N.pickBy=LO,N.property=pO,N.propertyOf=rc,N.pull=xL,N.pullAll=Zi,N.pullAllBy=vL,N.pullAllWith=yL,N.pullAt=VL,N.range=tc,N.rangeRight=nc,N.rearg=ED,N.reject=W_,N.remove=WL,N.rest=eD,N.reverse=CA,N.sampleSize=b_,N.set=Al,N.setWith=Rl,N.shuffle=w_,N.slice=XL,N.sortBy=$_,N.sortedUniq=qL,N.sortedUniqBy=kL,N.split=dl,N.spread=TD,N.tail=ZL,N.take=zL,N.takeRight=jL,N.takeRightWhile=E_,N.takeWhile=e_,N.tap=o_,N.throttle=rD,N.thru=Ut,N.toArray=uO,N.toPairs=_O,N.toPairsIn=DO,N.toPath=Oc,N.toPlainObject=CO,N.transform=Sl,N.unary=tD,N.union=T_,N.unionBy=r_,N.unionWith=t_,N.uniq=n_,N.uniqBy=A_,N.uniqWith=R_,N.unset=il,N.unzip=oA,N.unzipWith=zi,N.update=Ol,N.updateWith=Il,N.values=VT,N.valuesIn=Nl,N.without=S_,N.words=fO,N.wrap=nD,N.xor=i_,N.xorBy=O_,N.xorWith=I_,N.zip=N_,N.zipObject=u_,N.zipObjectDeep=s_,N.zipWith=C_,N.entries=_O,N.entriesIn=DO,N.extend=oO,N.extendWith=Ht,MA(N,N),N.add=Nc,N.attempt=PO,N.camelCase=ol,N.capitalize=lO,N.ceil=uc,N.clamp=ul,N.clone=RD,N.cloneDeep=iD,N.cloneDeepWith=OD,N.cloneWith=SD,N.conformsTo=ID,N.deburr=cO,N.defaultTo=Kl,N.divide=sc,N.endsWith=al,N.eq=_e,N.escape=Ll,N.escapeRegExp=_l,N.every=M_,N.find=h_,N.findIndex=$i,N.findKey=WD,N.findLast=F_,N.findLastIndex=Qi,N.findLastKey=XD,N.floor=Cc,N.forEach=EO,N.forEachRight=eO,N.forIn=bD,N.forInRight=wD,N.forOwn=KD,N.forOwnRight=JD,N.get=lA,N.gt=ND,N.gte=uD,N.has=qD,N.hasIn=cA,N.head=ki,N.identity=zE,N.includes=H_,N.indexOf=FL,N.inRange=sl,N.invoke=zD,N.isArguments=CT,N.isArray=$,N.isArrayBuffer=sD,N.isArrayLike=kE,N.isArrayLikeObject=DE,N.isBoolean=CD,N.isBuffer=ET,N.isDate=oD,N.isElement=aD,N.isEmpty=LD,N.isEqual=_D,N.isEqualWith=DD,N.isError=_A,N.isFinite=lD,N.isFunction=Ye,N.isInteger=iO,N.isLength=Bt,N.isMap=OO,N.isMatch=cD,N.isMatchWith=fD,N.isNaN=PD,N.isNative=pD,N.isNil=UD,N.isNull=MD,N.isNumber=IO,N.isObject=LE,N.isObjectLike=_E,N.isPlainObject=cr,N.isRegExp=DA,N.isSafeInteger=hD,N.isSet=NO,N.isString=mt,N.isSymbol=re,N.isTypedArray=yT,N.isUndefined=FD,N.isWeakMap=dD,N.isWeakSet=GD,N.join=HL,N.kebabCase=Dl,N.last=ue,N.lastIndexOf=YL,N.lowerCase=ll,N.lowerFirst=cl,N.lt=BD,N.lte=mD,N.max=oc,N.maxBy=ac,N.mean=Lc,N.meanBy=_c,N.min=Dc,N.minBy=lc,N.stubArray=hA,N.stubFalse=FA,N.stubObject=Ac,N.stubString=Rc,N.stubTrue=Sc,N.multiply=cc,N.nth=gL,N.noConflict=zl,N.noop=UA,N.now=Ft,N.pad=fl,N.padEnd=Pl,N.padStart=pl,N.parseInt=Ml,N.random=Cl,N.reduce=y_,N.reduceRight=V_,N.repeat=Ul,N.replace=hl,N.result=nl,N.round=fc,N.runInContext=D,N.sample=X_,N.size=K_,N.snakeCase=Fl,N.some=J_,N.sortedIndex=bL,N.sortedIndexBy=wL,N.sortedIndexOf=KL,N.sortedLastIndex=JL,N.sortedLastIndexBy=$L,N.sortedLastIndexOf=QL,N.startCase=Gl,N.startsWith=Bl,N.subtract=Pc,N.sum=pc,N.sumBy=Mc,N.template=ml,N.times=ic,N.toFinite=ge,N.toInteger=q,N.toLength=sO,N.toLower=Hl,N.toNumber=se,N.toSafeInteger=HD,N.toString=RE,N.toUpper=Yl,N.trim=gl,N.trimEnd=xl,N.trimStart=vl,N.truncate=yl,N.unescape=Vl,N.uniqueId=Ic,N.upperCase=Wl,N.upperFirst=fA,N.each=EO,N.eachRight=eO,N.first=ki,MA(N,function(){var e={};return Pe(N,function(T,t){SE.call(N.prototype,t)||(e[t]=T)}),e}(),{chain:!1}),N.VERSION=r,Se(["bind","bindKey","curry","curryRight","partial","partialRight"],function(e){N[e].placeholder=N}),Se(["drop","take"],function(e,T){eE.prototype[e]=function(t){t=t===E?1:pE(q(t),0);var R=this.__filtered__&&!T?new eE(this):this.clone();return R.__filtered__?R.__takeCount__=VE(t,R.__takeCount__):R.__views__.push({size:VE(t,fe),type:e+(R.__dir__<0?"Right":"")}),R},eE.prototype[e+"Right"]=function(t){return this.reverse()[e](t).reverse()}}),Se(["filter","map","takeWhile"],function(e,T){var t=T+1,R=t==qR||t==gs;eE.prototype[e]=function(i){var u=this.clone();return u.__iteratees__.push({iteratee:W(i,3),type:t}),u.__filtered__=u.__filtered__||R,u}}),Se(["head","last"],function(e,T){var t="take"+(T?"Right":"");eE.prototype[e]=function(){return this[t](1).value()[0]}}),Se(["initial","tail"],function(e,T){var t="drop"+(T?"":"Right");eE.prototype[e]=function(){return this.__filtered__?new eE(this):this[t](1)}}),eE.prototype.compact=function(){return this.filter(zE)},eE.prototype.find=function(e){return this.filter(e).head()},eE.prototype.findLast=function(e){return this.reverse().find(e)},eE.prototype.invokeMap=z(function(e,T){return typeof e=="function"?new eE(this):this.map(function(t){return or(t,e,T)})}),eE.prototype.reject=function(e){return this.filter(Gt(W(e)))},eE.prototype.slice=function(e,T){e=q(e);var t=this;return t.__filtered__&&(e>0||T<0)?new eE(t):(e<0?t=t.takeRight(-e):e&&(t=t.drop(e)),T!==E&&(T=q(T),t=T<0?t.dropRight(-T):t.take(T-e)),t)},eE.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},eE.prototype.toArray=function(){return this.take(fe)},Pe(eE.prototype,function(e,T){var t=/^(?:filter|find|map|reject)|While$/.test(T),R=/^(?:head|last)$/.test(T),i=N[R?"take"+(T=="last"?"Right":""):T],u=R||/^find/.test(T);i&&(N.prototype[T]=function(){var o=this.__wrapped__,L=R?[1]:arguments,l=o instanceof eE,p=L[0],M=l||$(o),d=function(j){var tE=i.apply(N,Je([j],L));return R&&Y?tE[0]:tE};M&&t&&typeof p=="function"&&p.length!=1&&(l=M=!1);var Y=this.__chain__,y=!!this.__actions__.length,X=u&&!Y,k=l&&!y;if(!u&&M){o=k?o:new eE(this);var b=e.apply(o,L);return b.__actions__.push({func:Ut,args:[d],thisArg:E}),new Oe(b,Y)}return X&&k?e.apply(this,L):(b=this.thru(d),X?R?b.value()[0]:b.value():b)})}),Se(["pop","push","shift","sort","splice","unshift"],function(e){var T=jr[e],t=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",R=/^(?:pop|shift)$/.test(e);N.prototype[e]=function(){var i=arguments;if(R&&!this.__chain__){var u=this.value();return T.apply($(u)?u:[],i)}return this[t](function(o){return T.apply($(o)?o:[],i)})}}),Pe(eE.prototype,function(e,T){var t=N[T];if(t){var R=t.name+"";SE.call(HT,R)||(HT[R]=[]),HT[R].push({name:T,func:t})}}),HT[Dt(E,G).name]=[{name:"wrapper",func:E}],eE.prototype.clone=Vo,eE.prototype.reverse=Wo,eE.prototype.value=Xo,N.prototype.at=a_,N.prototype.chain=L_,N.prototype.commit=__,N.prototype.next=D_,N.prototype.plant=c_,N.prototype.reverse=f_,N.prototype.toJSON=N.prototype.valueOf=N.prototype.value=P_,N.prototype.first=N.prototype.head,ir&&(N.prototype[ir]=l_),N},Qe=Lo();typeof define=="function"&&typeof define.amd=="object"&&define.amd?(hE._=Qe,define(function(){return Qe})):RT?((RT.exports=Qe)._=Qe,pn._=Qe):hE._=Qe}).call($T)});var Au=OE((gG,Zt)=>{Zt.exports.Space_Separator=/[\u1680\u2000-\u200A\u202F\u205F\u3000]/;Zt.exports.ID_Start=/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/;Zt.exports.ID_Continue=/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09FC\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF9\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDE00-\uDE3E\uDE47\uDE50-\uDE83\uDE86-\uDE99\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/});var LR=OE((xG,Ru)=>{var aR=Au();Ru.exports={isSpaceSeparator(E){return typeof E=="string"&&aR.Space_Separator.test(E)},isIdStartChar(E){return typeof E=="string"&&(E>="a"&&E<="z"||E>="A"&&E<="Z"||E==="$"||E==="_"||aR.ID_Start.test(E))},isIdContinueChar(E){return typeof E=="string"&&(E>="a"&&E<="z"||E>="A"&&E<="Z"||E>="0"&&E<="9"||E==="$"||E==="_"||E==="\u200C"||E==="\u200D"||aR.ID_Continue.test(E))},isDigit(E){return typeof E=="string"&&/[0-9]/.test(E)},isHexDigit(E){return typeof E=="string"&&/[0-9A-Fa-f]/.test(E)}}});var Nu=OE((vG,Iu)=>{var GE=LR(),DR,$E,We,jt,tT,le,BE,fR,Hr;Iu.exports=function(r,n){DR=String(r),$E="start",We=[],jt=0,tT=1,le=0,BE=void 0,fR=void 0,Hr=void 0;do BE=oM(),_M[$E]();while(BE.type!=="eof");return typeof n=="function"?lR({"":Hr},"",n):Hr};function lR(E,r,n){let A=E[r];if(A!=null&&typeof A=="object")if(Array.isArray(A))for(let S=0;S<A.length;S++){let O=String(S),I=lR(A,O,n);I===void 0?delete A[O]:Object.defineProperty(A,O,{value:I,writable:!0,enumerable:!0,configurable:!0})}else for(let S in A){let O=lR(A,S,n);O===void 0?delete A[S]:Object.defineProperty(A,S,{value:O,writable:!0,enumerable:!0,configurable:!0})}return n.call(E,r,A)}var Z,Q,mr,Ve,TE;function oM(){for(Z="default",Q="",mr=!1,Ve=1;;){TE=Xe();let E=iu[Z]();if(E)return E}}function Xe(){if(DR[jt])return String.fromCodePoint(DR.codePointAt(jt))}function U(){let E=Xe();return E===`
`?(tT++,le=0):E?le+=E.length:le++,E&&(jt+=E.length),E}var iu={default(){switch(TE){case"	":case"\v":case"\f":case" ":case"\xA0":case"\uFEFF":case`
`:case"\r":case"\u2028":case"\u2029":U();return;case"/":U(),Z="comment";return;case void 0:return U(),uE("eof")}if(GE.isSpaceSeparator(TE)){U();return}return iu[$E]()},comment(){switch(TE){case"*":U(),Z="multiLineComment";return;case"/":U(),Z="singleLineComment";return}throw sE(U())},multiLineComment(){switch(TE){case"*":U(),Z="multiLineCommentAsterisk";return;case void 0:throw sE(U())}U()},multiLineCommentAsterisk(){switch(TE){case"*":U();return;case"/":U(),Z="default";return;case void 0:throw sE(U())}U(),Z="multiLineComment"},singleLineComment(){switch(TE){case`
`:case"\r":case"\u2028":case"\u2029":U(),Z="default";return;case void 0:return U(),uE("eof")}U()},value(){switch(TE){case"{":case"[":return uE("punctuator",U());case"n":return U(),DT("ull"),uE("null",null);case"t":return U(),DT("rue"),uE("boolean",!0);case"f":return U(),DT("alse"),uE("boolean",!1);case"-":case"+":U()==="-"&&(Ve=-1),Z="sign";return;case".":Q=U(),Z="decimalPointLeading";return;case"0":Q=U(),Z="zero";return;case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":Q=U(),Z="decimalInteger";return;case"I":return U(),DT("nfinity"),uE("numeric",1/0);case"N":return U(),DT("aN"),uE("numeric",NaN);case'"':case"'":mr=U()==='"',Q="",Z="string";return}throw sE(U())},identifierNameStartEscape(){if(TE!=="u")throw sE(U());U();let E=cR();switch(E){case"$":case"_":break;default:if(!GE.isIdStartChar(E))throw Su();break}Q+=E,Z="identifierName"},identifierName(){switch(TE){case"$":case"_":case"\u200C":case"\u200D":Q+=U();return;case"\\":U(),Z="identifierNameEscape";return}if(GE.isIdContinueChar(TE)){Q+=U();return}return uE("identifier",Q)},identifierNameEscape(){if(TE!=="u")throw sE(U());U();let E=cR();switch(E){case"$":case"_":case"\u200C":case"\u200D":break;default:if(!GE.isIdContinueChar(E))throw Su();break}Q+=E,Z="identifierName"},sign(){switch(TE){case".":Q=U(),Z="decimalPointLeading";return;case"0":Q=U(),Z="zero";return;case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":Q=U(),Z="decimalInteger";return;case"I":return U(),DT("nfinity"),uE("numeric",Ve*(1/0));case"N":return U(),DT("aN"),uE("numeric",NaN)}throw sE(U())},zero(){switch(TE){case".":Q+=U(),Z="decimalPoint";return;case"e":case"E":Q+=U(),Z="decimalExponent";return;case"x":case"X":Q+=U(),Z="hexadecimal";return}return uE("numeric",Ve*0)},decimalInteger(){switch(TE){case".":Q+=U(),Z="decimalPoint";return;case"e":case"E":Q+=U(),Z="decimalExponent";return}if(GE.isDigit(TE)){Q+=U();return}return uE("numeric",Ve*Number(Q))},decimalPointLeading(){if(GE.isDigit(TE)){Q+=U(),Z="decimalFraction";return}throw sE(U())},decimalPoint(){switch(TE){case"e":case"E":Q+=U(),Z="decimalExponent";return}if(GE.isDigit(TE)){Q+=U(),Z="decimalFraction";return}return uE("numeric",Ve*Number(Q))},decimalFraction(){switch(TE){case"e":case"E":Q+=U(),Z="decimalExponent";return}if(GE.isDigit(TE)){Q+=U();return}return uE("numeric",Ve*Number(Q))},decimalExponent(){switch(TE){case"+":case"-":Q+=U(),Z="decimalExponentSign";return}if(GE.isDigit(TE)){Q+=U(),Z="decimalExponentInteger";return}throw sE(U())},decimalExponentSign(){if(GE.isDigit(TE)){Q+=U(),Z="decimalExponentInteger";return}throw sE(U())},decimalExponentInteger(){if(GE.isDigit(TE)){Q+=U();return}return uE("numeric",Ve*Number(Q))},hexadecimal(){if(GE.isHexDigit(TE)){Q+=U(),Z="hexadecimalInteger";return}throw sE(U())},hexadecimalInteger(){if(GE.isHexDigit(TE)){Q+=U();return}return uE("numeric",Ve*Number(Q))},string(){switch(TE){case"\\":U(),Q+=aM();return;case'"':if(mr)return U(),uE("string",Q);Q+=U();return;case"'":if(!mr)return U(),uE("string",Q);Q+=U();return;case`
`:case"\r":throw sE(U());case"\u2028":case"\u2029":DM(TE);break;case void 0:throw sE(U())}Q+=U()},start(){switch(TE){case"{":case"[":return uE("punctuator",U())}Z="value"},beforePropertyName(){switch(TE){case"$":case"_":Q=U(),Z="identifierName";return;case"\\":U(),Z="identifierNameStartEscape";return;case"}":return uE("punctuator",U());case'"':case"'":mr=U()==='"',Z="string";return}if(GE.isIdStartChar(TE)){Q+=U(),Z="identifierName";return}throw sE(U())},afterPropertyName(){if(TE===":")return uE("punctuator",U());throw sE(U())},beforePropertyValue(){Z="value"},afterPropertyValue(){switch(TE){case",":case"}":return uE("punctuator",U())}throw sE(U())},beforeArrayValue(){if(TE==="]")return uE("punctuator",U());Z="value"},afterArrayValue(){switch(TE){case",":case"]":return uE("punctuator",U())}throw sE(U())},end(){throw sE(U())}};function uE(E,r){return{type:E,value:r,line:tT,column:le}}function DT(E){for(let r of E){if(Xe()!==r)throw sE(U());U()}}function aM(){switch(Xe()){case"b":return U(),"\b";case"f":return U(),"\f";case"n":return U(),`
`;case"r":return U(),"\r";case"t":return U(),"	";case"v":return U(),"\v";case"0":if(U(),GE.isDigit(Xe()))throw sE(U());return"\0";case"x":return U(),LM();case"u":return U(),cR();case`
`:case"\u2028":case"\u2029":return U(),"";case"\r":return U(),Xe()===`
`&&U(),"";case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":throw sE(U());case void 0:throw sE(U())}return U()}function LM(){let E="",r=Xe();if(!GE.isHexDigit(r)||(E+=U(),r=Xe(),!GE.isHexDigit(r)))throw sE(U());return E+=U(),String.fromCodePoint(parseInt(E,16))}function cR(){let E="",r=4;for(;r-- >0;){let n=Xe();if(!GE.isHexDigit(n))throw sE(U());E+=U()}return String.fromCodePoint(parseInt(E,16))}var _M={start(){if(BE.type==="eof")throw lT();_R()},beforePropertyName(){switch(BE.type){case"identifier":case"string":fR=BE.value,$E="afterPropertyName";return;case"punctuator":zt();return;case"eof":throw lT()}},afterPropertyName(){if(BE.type==="eof")throw lT();$E="beforePropertyValue"},beforePropertyValue(){if(BE.type==="eof")throw lT();_R()},beforeArrayValue(){if(BE.type==="eof")throw lT();if(BE.type==="punctuator"&&BE.value==="]"){zt();return}_R()},afterPropertyValue(){if(BE.type==="eof")throw lT();switch(BE.value){case",":$E="beforePropertyName";return;case"}":zt()}},afterArrayValue(){if(BE.type==="eof")throw lT();switch(BE.value){case",":$E="beforeArrayValue";return;case"]":zt()}},end(){}};function _R(){let E;switch(BE.type){case"punctuator":switch(BE.value){case"{":E={};break;case"[":E=[];break}break;case"null":case"boolean":case"numeric":case"string":E=BE.value;break}if(Hr===void 0)Hr=E;else{let r=We[We.length-1];Array.isArray(r)?r.push(E):Object.defineProperty(r,fR,{value:E,writable:!0,enumerable:!0,configurable:!0})}if(E!==null&&typeof E=="object")We.push(E),Array.isArray(E)?$E="beforeArrayValue":$E="beforePropertyName";else{let r=We[We.length-1];r==null?$E="end":Array.isArray(r)?$E="afterArrayValue":$E="afterPropertyValue"}}function zt(){We.pop();let E=We[We.length-1];E==null?$E="end":Array.isArray(E)?$E="afterArrayValue":$E="afterPropertyValue"}function sE(E){return En(E===void 0?`JSON5: invalid end of input at ${tT}:${le}`:`JSON5: invalid character '${Ou(E)}' at ${tT}:${le}`)}function lT(){return En(`JSON5: invalid end of input at ${tT}:${le}`)}function Su(){return le-=5,En(`JSON5: invalid identifier character at ${tT}:${le}`)}function DM(E){console.warn(`JSON5: '${Ou(E)}' in strings is not valid ECMAScript; consider escaping`)}function Ou(E){let r={"'":"\\'",'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","	":"\\t","\v":"\\v","\0":"\\0","\u2028":"\\u2028","\u2029":"\\u2029"};if(r[E])return r[E];if(E<" "){let n=E.charCodeAt(0).toString(16);return"\\x"+("00"+n).substring(n.length)}return E}function En(E){let r=new SyntaxError(E);return r.lineNumber=tT,r.columnNumber=le,r}});var su=OE((yG,uu)=>{var PR=LR();uu.exports=function(r,n,A){let S=[],O="",I,C,s="",a;if(n!=null&&typeof n=="object"&&!Array.isArray(n)&&(A=n.space,a=n.quote,n=n.replacer),typeof n=="function")C=n;else if(Array.isArray(n)){I=[];for(let G of n){let x;typeof G=="string"?x=G:(typeof G=="number"||G instanceof String||G instanceof Number)&&(x=String(G)),x!==void 0&&I.indexOf(x)<0&&I.push(x)}}return A instanceof Number?A=Number(A):A instanceof String&&(A=String(A)),typeof A=="number"?A>0&&(A=Math.min(10,Math.floor(A)),s="          ".substr(0,A)):typeof A=="string"&&(s=A.substr(0,10)),c("",{"":r});function c(G,x){let m=x[G];switch(m!=null&&(typeof m.toJSON5=="function"?m=m.toJSON5(G):typeof m.toJSON=="function"&&(m=m.toJSON(G))),C&&(m=C.call(x,G,m)),m instanceof Number?m=Number(m):m instanceof String?m=String(m):m instanceof Boolean&&(m=m.valueOf()),m){case null:return"null";case!0:return"true";case!1:return"false"}if(typeof m=="string")return _(m,!1);if(typeof m=="number")return String(m);if(typeof m=="object")return Array.isArray(m)?H(m):h(m)}function _(G){let x={"'":.1,'"':.2},m={"'":"\\'",'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","	":"\\t","\v":"\\v","\0":"\\0","\u2028":"\\u2028","\u2029":"\\u2029"},g="";for(let EE=0;EE<G.length;EE++){let nE=G[EE];switch(nE){case"'":case'"':x[nE]++,g+=nE;continue;case"\0":if(PR.isDigit(G[EE+1])){g+="\\x00";continue}}if(m[nE]){g+=m[nE];continue}if(nE<" "){let UE=nE.charCodeAt(0).toString(16);g+="\\x"+("00"+UE).substring(UE.length);continue}g+=nE}let rE=a||Object.keys(x).reduce((EE,nE)=>x[EE]<x[nE]?EE:nE);return g=g.replace(new RegExp(rE,"g"),m[rE]),rE+g+rE}function h(G){if(S.indexOf(G)>=0)throw TypeError("Converting circular structure to JSON5");S.push(G);let x=O;O=O+s;let m=I||Object.keys(G),g=[];for(let EE of m){let nE=c(EE,G);if(nE!==void 0){let UE=F(EE)+":";s!==""&&(UE+=" "),UE+=nE,g.push(UE)}}let rE;if(g.length===0)rE="{}";else{let EE;if(s==="")EE=g.join(","),rE="{"+EE+"}";else{let nE=`,
`+O;EE=g.join(nE),rE=`{
`+O+EE+`,
`+x+"}"}}return S.pop(),O=x,rE}function F(G){if(G.length===0)return _(G,!0);let x=String.fromCodePoint(G.codePointAt(0));if(!PR.isIdStartChar(x))return _(G,!0);for(let m=x.length;m<G.length;m++)if(!PR.isIdContinueChar(String.fromCodePoint(G.codePointAt(m))))return _(G,!0);return G}function H(G){if(S.indexOf(G)>=0)throw TypeError("Converting circular structure to JSON5");S.push(G);let x=O;O=O+s;let m=[];for(let rE=0;rE<G.length;rE++){let EE=c(String(rE),G);m.push(EE!==void 0?EE:"null")}let g;if(m.length===0)g="[]";else if(s==="")g="["+m.join(",")+"]";else{let rE=`,
`+O,EE=m.join(rE);g=`[
`+O+EE+`,
`+x+"]"}return S.pop(),O=x,g}}});var ou=OE((VG,Cu)=>{var lM=Nu(),cM=su(),fM={parse:lM,stringify:cM};Cu.exports=fM});var Yr=OE((QG,au)=>{function en(E){var r="    ";if(isNaN(parseInt(E)))r=E;else switch(E){case 1:r=" ";break;case 2:r="  ";break;case 3:r="   ";break;case 4:r="    ";break;case 5:r="     ";break;case 6:r="      ";break;case 7:r="       ";break;case 8:r="        ";break;case 9:r="         ";break;case 10:r="          ";break;case 11:r="           ";break;case 12:r="            ";break}for(var n=[`
`],A=0;A<100;A++)n.push(n[A]+r);return n}function be(){this.step="    ",this.shift=en(this.step)}be.prototype.xml=function(E,r){var n=E.replace(/>\s{0,}</g,"><").replace(/</g,"~::~<").replace(/\s*xmlns\:/g,"~::~xmlns:").replace(/\s*xmlns\=/g,"~::~xmlns=").split("~::~"),A=n.length,S=!1,O=0,I="",C=0,s=r?en(r):this.shift;for(C=0;C<A;C++)n[C].search(/<!/)>-1?(I+=s[O]+n[C],S=!0,(n[C].search(/-->/)>-1||n[C].search(/\]>/)>-1||n[C].search(/!DOCTYPE/)>-1)&&(S=!1)):n[C].search(/-->/)>-1||n[C].search(/\]>/)>-1?(I+=n[C],S=!1):/^<\w/.exec(n[C-1])&&/^<\/\w/.exec(n[C])&&/^<[\w:\-\.\,]+/.exec(n[C-1])==/^<\/[\w:\-\.\,]+/.exec(n[C])[0].replace("/","")?(I+=n[C],S||O--):n[C].search(/<\w/)>-1&&n[C].search(/<\//)==-1&&n[C].search(/\/>/)==-1?I=S?I+=n[C]:I+=s[O++]+n[C]:n[C].search(/<\w/)>-1&&n[C].search(/<\//)>-1?I=S?I+=n[C]:I+=s[O]+n[C]:n[C].search(/<\//)>-1?I=S?I+=n[C]:I+=s[--O]+n[C]:n[C].search(/\/>/)>-1?I=S?I+=n[C]:I+=s[O]+n[C]:n[C].search(/<\?/)>-1||n[C].search(/xmlns\:/)>-1||n[C].search(/xmlns\=/)>-1?I+=s[O]+n[C]:I+=n[C];return I[0]==`
`?I.slice(1):I};be.prototype.json=function(E,n){var n=n||this.step;return typeof JSON>"u"?E:typeof E=="string"?JSON.stringify(JSON.parse(E),null,n):typeof E=="object"?JSON.stringify(E,null,n):E};be.prototype.css=function(E,r){var n=E.replace(/\s{1,}/g," ").replace(/\{/g,"{~::~").replace(/\}/g,"~::~}~::~").replace(/\;/g,";~::~").replace(/\/\*/g,"~::~/*").replace(/\*\//g,"*/~::~").replace(/~::~\s{0,}~::~/g,"~::~").split("~::~"),A=n.length,S=0,O="",I=0,C=r?en(r):this.shift;for(I=0;I<A;I++)/\{/.exec(n[I])?O+=C[S++]+n[I]:/\}/.exec(n[I])?O+=C[--S]+n[I]:(/\*\\/.exec(n[I]),O+=C[S]+n[I]);return O.replace(/^\n{1,}/,"")};function HM(E,r){return r-(E.replace(/\(/g,"").length-E.replace(/\)/g,"").length)}function YM(E,r){return E.replace(/\s{1,}/g," ").replace(/ AND /ig,"~::~"+r+r+"AND ").replace(/ BETWEEN /ig,"~::~"+r+"BETWEEN ").replace(/ CASE /ig,"~::~"+r+"CASE ").replace(/ ELSE /ig,"~::~"+r+"ELSE ").replace(/ END /ig,"~::~"+r+"END ").replace(/ FROM /ig,"~::~FROM ").replace(/ GROUP\s{1,}BY/ig,"~::~GROUP BY ").replace(/ HAVING /ig,"~::~HAVING ").replace(/ IN /ig," IN ").replace(/ JOIN /ig,"~::~JOIN ").replace(/ CROSS~::~{1,}JOIN /ig,"~::~CROSS JOIN ").replace(/ INNER~::~{1,}JOIN /ig,"~::~INNER JOIN ").replace(/ LEFT~::~{1,}JOIN /ig,"~::~LEFT JOIN ").replace(/ RIGHT~::~{1,}JOIN /ig,"~::~RIGHT JOIN ").replace(/ ON /ig,"~::~"+r+"ON ").replace(/ OR /ig,"~::~"+r+r+"OR ").replace(/ ORDER\s{1,}BY/ig,"~::~ORDER BY ").replace(/ OVER /ig,"~::~"+r+"OVER ").replace(/\(\s{0,}SELECT /ig,"~::~(SELECT ").replace(/\)\s{0,}SELECT /ig,")~::~SELECT ").replace(/ THEN /ig," THEN~::~"+r).replace(/ UNION /ig,"~::~UNION~::~").replace(/ USING /ig,"~::~USING ").replace(/ WHEN /ig,"~::~"+r+"WHEN ").replace(/ WHERE /ig,"~::~WHERE ").replace(/ WITH /ig,"~::~WITH ").replace(/ ALL /ig," ALL ").replace(/ AS /ig," AS ").replace(/ ASC /ig," ASC ").replace(/ DESC /ig," DESC ").replace(/ DISTINCT /ig," DISTINCT ").replace(/ EXISTS /ig," EXISTS ").replace(/ NOT /ig," NOT ").replace(/ NULL /ig," NULL ").replace(/ LIKE /ig," LIKE ").replace(/\s{0,}SELECT /ig,"SELECT ").replace(/\s{0,}UPDATE /ig,"UPDATE ").replace(/ SET /ig," SET ").replace(/~::~{1,}/g,"~::~").split("~::~")}be.prototype.sql=function(E,r){var n=E.replace(/\s{1,}/g," ").replace(/\'/ig,"~::~'").split("~::~"),A=n.length,S=[],O=0,I=this.step,C=!0,s=!1,a=0,c="",_=0,h=r?en(r):this.shift;for(_=0;_<A;_++)_%2?S=S.concat(n[_]):S=S.concat(YM(n[_],I));for(A=S.length,_=0;_<A;_++){a=HM(S[_],a),/\s{0,}\s{0,}SELECT\s{0,}/.exec(S[_])&&(S[_]=S[_].replace(/\,/g,`,
`+I+I)),/\s{0,}\s{0,}SET\s{0,}/.exec(S[_])&&(S[_]=S[_].replace(/\,/g,`,
`+I+I)),/\s{0,}\(\s{0,}SELECT\s{0,}/.exec(S[_])?(O++,c+=h[O]+S[_]):/\'/.exec(S[_])?(a<1&&O&&O--,c+=S[_]):(c+=h[O]+S[_],a<1&&O&&O--);var F=0}return c=c.replace(/^\n{1,}/,"").replace(/\n{1,}/g,`
`),c};be.prototype.xmlmin=function(E,r){var n=r?E:E.replace(/\<![ \r\n\t]*(--([^\-]|[\r\n]|-[^\-])*--[ \r\n\t]*)\>/g,"").replace(/[ \r\n\t]{1,}xmlns/g," xmlns");return n.replace(/>\s{0,}</g,"><")};be.prototype.jsonmin=function(E){return typeof JSON>"u"?E:JSON.stringify(JSON.parse(E),null,0)};be.prototype.cssmin=function(E,r){var n=r?E:E.replace(/\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+\//g,"");return n.replace(/\s{1,}/g," ").replace(/\{\s{1,}/g,"{").replace(/\}\s{1,}/g,"}").replace(/\;\s{1,}/g,";").replace(/\/\*\s{1,}/g,"/*").replace(/\*\/\s{1,}/g,"*/")};be.prototype.sqlmin=function(E){return E.replace(/\s{1,}/g," ").replace(/\s{1,}\(/,"(").replace(/\s{1,}\)/,")")};au.exports=new be});var _u=OE((Lu,Tn)=>{(function(E,r){typeof Tn=="object"&&Tn.exports?Tn.exports=r():E.nearley=r()})(Lu,function(){function E(s,a,c){return this.id=++E.highestId,this.name=s,this.symbols=a,this.postprocess=c,this}E.highestId=0,E.prototype.toString=function(s){var a=typeof s>"u"?this.symbols.map(C).join(" "):this.symbols.slice(0,s).map(C).join(" ")+" \u25CF "+this.symbols.slice(s).map(C).join(" ");return this.name+" \u2192 "+a};function r(s,a,c,_){this.rule=s,this.dot=a,this.reference=c,this.data=[],this.wantedBy=_,this.isComplete=this.dot===s.symbols.length}r.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},r.prototype.nextState=function(s){var a=new r(this.rule,this.dot+1,this.reference,this.wantedBy);return a.left=this,a.right=s,a.isComplete&&(a.data=a.build(),a.right=void 0),a},r.prototype.build=function(){var s=[],a=this;do s.push(a.right.data),a=a.left;while(a.left);return s.reverse(),s},r.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,O.fail))};function n(s,a){this.grammar=s,this.index=a,this.states=[],this.wants={},this.scannable=[],this.completed={}}n.prototype.process=function(s){for(var a=this.states,c=this.wants,_=this.completed,h=0;h<a.length;h++){var F=a[h];if(F.isComplete){if(F.finish(),F.data!==O.fail){for(var H=F.wantedBy,G=H.length;G--;){var x=H[G];this.complete(x,F)}if(F.reference===this.index){var m=F.rule.name;(this.completed[m]=this.completed[m]||[]).push(F)}}}else{var m=F.rule.symbols[F.dot];if(typeof m!="string"){this.scannable.push(F);continue}if(c[m]){if(c[m].push(F),_.hasOwnProperty(m))for(var g=_[m],G=0;G<g.length;G++){var rE=g[G];this.complete(F,rE)}}else c[m]=[F],this.predict(m)}}},n.prototype.predict=function(s){for(var a=this.grammar.byName[s]||[],c=0;c<a.length;c++){var _=a[c],h=this.wants[s],F=new r(_,0,this.index,h);this.states.push(F)}},n.prototype.complete=function(s,a){var c=s.nextState(a);this.states.push(c)};function A(s,a){this.rules=s,this.start=a||this.rules[0].name;var c=this.byName={};this.rules.forEach(function(_){c.hasOwnProperty(_.name)||(c[_.name]=[]),c[_.name].push(_)})}A.fromCompiled=function(_,a){var c=_.Lexer;_.ParserStart&&(a=_.ParserStart,_=_.ParserRules);var _=_.map(function(F){return new E(F.name,F.symbols,F.postprocess)}),h=new A(_,a);return h.lexer=c,h};function S(){this.reset("")}S.prototype.reset=function(s,a){this.buffer=s,this.index=0,this.line=a?a.line:1,this.lastLineBreak=a?-a.col:0},S.prototype.next=function(){if(this.index<this.buffer.length){var s=this.buffer[this.index++];return s===`
`&&(this.line+=1,this.lastLineBreak=this.index),{value:s}}},S.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},S.prototype.formatError=function(s,a){var c=this.buffer;if(typeof c=="string"){var _=c.split(`
`).slice(Math.max(0,this.line-5),this.line),h=c.indexOf(`
`,this.index);h===-1&&(h=c.length);var F=this.index-this.lastLineBreak,H=String(this.line).length;return a+=" at line "+this.line+" col "+F+`:

`,a+=_.map(function(x,m){return G(this.line-_.length+m+1,H)+" "+x},this).join(`
`),a+=`
`+G("",H+F)+`^
`,a}else return a+" at index "+(this.index-1);function G(x,m){var g=String(x);return Array(m-g.length+1).join(" ")+g}};function O(s,a,c){if(s instanceof A)var _=s,c=a;else var _=A.fromCompiled(s,a);this.grammar=_,this.options={keepHistory:!1,lexer:_.lexer||new S};for(var h in c||{})this.options[h]=c[h];this.lexer=this.options.lexer,this.lexerState=void 0;var F=new n(_,0),H=this.table=[F];F.wants[_.start]=[],F.predict(_.start),F.process(),this.current=0}O.fail={},O.prototype.feed=function(s){var a=this.lexer;a.reset(s,this.lexerState);for(var c;;){try{if(c=a.next(),!c)break}catch(UE){var H=new n(this.grammar,this.current+1);this.table.push(H);var _=new Error(this.reportLexerError(UE));throw _.offset=this.current,_.token=UE.token,_}var h=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var F=this.current+1,H=new n(this.grammar,F);this.table.push(H);for(var G=c.text!==void 0?c.text:c.value,x=a.constructor===S?c.value:c,m=h.scannable,g=m.length;g--;){var rE=m[g],EE=rE.rule.symbols[rE.dot];if(EE.test?EE.test(x):EE.type?EE.type===c.type:EE.literal===G){var nE=rE.nextState({data:x,token:c,isToken:!0,reference:F-1});H.states.push(nE)}}if(H.process(),H.states.length===0){var _=new Error(this.reportError(c));throw _.offset=this.current,_.token=c,_}this.options.keepHistory&&(h.lexerState=a.save()),this.current++}return h&&(this.lexerState=a.save()),this.results=this.finish(),this},O.prototype.reportLexerError=function(s){var a,c,_=s.token;return _?(a="input "+JSON.stringify(_.text[0])+" (lexer error)",c=this.lexer.formatError(_,"Syntax error")):(a="input (lexer error)",c=s.message),this.reportErrorCommon(c,a)},O.prototype.reportError=function(s){var a=(s.type?s.type+" token: ":"")+JSON.stringify(s.value!==void 0?s.value:s),c=this.lexer.formatError(s,"Syntax error");return this.reportErrorCommon(c,a)},O.prototype.reportErrorCommon=function(s,a){var c=[];c.push(s);var _=this.table.length-2,h=this.table[_],F=h.states.filter(function(G){var x=G.rule.symbols[G.dot];return x&&typeof x!="string"});if(F.length===0)c.push("Unexpected "+a+`. I did not expect any more input. Here is the state of my parse table:
`),this.displayStateStack(h.states,c);else{c.push("Unexpected "+a+`. Instead, I was expecting to see one of the following:
`);var H=F.map(function(G){return this.buildFirstStateStack(G,[])||[G]},this);H.forEach(function(G){var x=G[0],m=x.rule.symbols[x.dot],g=this.getSymbolDisplay(m);c.push("A "+g+" based on:"),this.displayStateStack(G,c)},this)}return c.push(""),c.join(`
`)},O.prototype.displayStateStack=function(s,a){for(var c,_=0,h=0;h<s.length;h++){var F=s[h],H=F.rule.toString(F.dot);H===c?_++:(_>0&&a.push("    ^ "+_+" more lines identical to this"),_=0,a.push("    "+H)),c=H}},O.prototype.getSymbolDisplay=function(s){return I(s)},O.prototype.buildFirstStateStack=function(s,a){if(a.indexOf(s)!==-1)return null;if(s.wantedBy.length===0)return[s];var c=s.wantedBy[0],_=[s].concat(a),h=this.buildFirstStateStack(c,_);return h===null?null:[s].concat(h)},O.prototype.save=function(){var s=this.table[this.current];return s.lexerState=this.lexerState,s},O.prototype.restore=function(s){var a=s.index;this.current=a,this.table[a]=s,this.table.splice(a+1),this.lexerState=s.lexerState,this.results=this.finish()},O.prototype.rewind=function(s){if(!this.options.keepHistory)throw new Error("set option `keepHistory` to enable rewinding");this.restore(this.table[s])},O.prototype.finish=function(){var s=[],a=this.grammar.start,c=this.table[this.table.length-1];return c.states.forEach(function(_){_.rule.name===a&&_.dot===_.rule.symbols.length&&_.reference===0&&_.data!==O.fail&&s.push(_)}),s.map(function(_){return _.data})};function I(s){var a=typeof s;if(a==="string")return s;if(a==="object"){if(s.literal)return JSON.stringify(s.literal);if(s instanceof RegExp)return"character matching "+s;if(s.type)return s.type+" token";if(s.test)return"token matching "+String(s.test);throw new Error("Unknown symbol type: "+s)}}function C(s){var a=typeof s;if(a==="string")return s;if(a==="object"){if(s.literal)return JSON.stringify(s.literal);if(s instanceof RegExp)return s.toString();if(s.type)return"%"+s.type;if(s.test)return"<"+String(s.test)+">";throw new Error("Unknown symbol type: "+s)}}return{Parser:O,Grammar:A,Rule:E}})});var Ps=OE((Rn,Wr)=>{(function(E){var r=typeof Rn=="object"&&Rn,n=typeof Wr=="object"&&Wr&&Wr.exports==r&&Wr,A=typeof global=="object"&&global;(A.global===A||A.window===A)&&(E=A);var S=/([\0-\u02FF\u0370-\u1AAF\u1B00-\u1DBF\u1E00-\u20CF\u2100-\uD7FF\uE000-\uFE1F\uFE30-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])([\u0300-\u036F\u1AB0-\u1AFF\u1DC0-\u1DFF\u20D0-\u20FF\uFE20-\uFE2F]+)/g,O=/([\uD800-\uDBFF])([\uDC00-\uDFFF])/g,I=function(a){a=a.replace(S,function(h,F,H){return I(H)+F}).replace(O,"$2$1");for(var c="",_=a.length;_--;)c+=a.charAt(_);return c},C={version:"0.2.0",reverse:I};if(typeof define=="function"&&typeof define.amd=="object"&&define.amd)define(function(){return C});else if(r&&!r.nodeType)if(n)n.exports=C;else for(var s in C)C.hasOwnProperty(s)&&(r[s]=C[s]);else E.esrever=C})(Rn)});var hd={};ve(hd,{default:()=>Us});module.exports=Bc(hd);var K=require("@raycast/api");var EN=require("node:buffer"),eN=cE(require("node:path"),1),zA=cE(require("node:child_process"),1),Mr=cE(require("node:process"),1),TN=cE(CI(),1);function yA(E){let r=typeof E=="string"?`
`:`
`.charCodeAt(),n=typeof E=="string"?"\r":"\r".charCodeAt();return E[E.length-1]===r&&(E=E.slice(0,-1)),E[E.length-1]===n&&(E=E.slice(0,-1)),E}var fr=cE(require("node:process"),1),bT=cE(require("node:path"),1),oI=cE(require("node:url"),1);function xt(E={}){let{env:r=process.env,platform:n=process.platform}=E;return n!=="win32"?"PATH":Object.keys(r).reverse().find(A=>A.toUpperCase()==="PATH")||"Path"}function nf(E={}){let{cwd:r=fr.default.cwd(),path:n=fr.default.env[xt()],execPath:A=fr.default.execPath}=E,S,O=r instanceof URL?oI.default.fileURLToPath(r):r,I=bT.default.resolve(O),C=[];for(;S!==I;)C.push(bT.default.join(I,"node_modules/.bin")),S=I,I=bT.default.resolve(I,"..");return C.push(bT.default.resolve(O,A,"..")),[...C,n].join(bT.default.delimiter)}function aI({env:E=fr.default.env,...r}={}){E={...E};let n=xt({env:E});return r.path=E[n],E[n]=nf(r),E}var Af=(E,r,n,A)=>{if(n==="length"||n==="prototype"||n==="arguments"||n==="caller")return;let S=Object.getOwnPropertyDescriptor(E,n),O=Object.getOwnPropertyDescriptor(r,n);!Rf(S,O)&&A||Object.defineProperty(E,n,O)},Rf=function(E,r){return E===void 0||E.configurable||E.writable===r.writable&&E.enumerable===r.enumerable&&E.configurable===r.configurable&&(E.writable||E.value===r.value)},Sf=(E,r)=>{let n=Object.getPrototypeOf(r);n!==Object.getPrototypeOf(E)&&Object.setPrototypeOf(E,n)},Of=(E,r)=>`/* Wrapped ${E}*/
${r}`,If=Object.getOwnPropertyDescriptor(Function.prototype,"toString"),Nf=Object.getOwnPropertyDescriptor(Function.prototype.toString,"name"),uf=(E,r,n)=>{let A=n===""?"":`with ${n.trim()}() `,S=Of.bind(null,A,r.toString());Object.defineProperty(S,"name",Nf),Object.defineProperty(E,"toString",{...If,value:S})};function VA(E,r,{ignoreNonConfigurable:n=!1}={}){let{name:A}=E;for(let S of Reflect.ownKeys(r))Af(E,r,S,n);return Sf(E,r),uf(E,r,A),E}var vt=new WeakMap,LI=(E,r={})=>{if(typeof E!="function")throw new TypeError("Expected a function");let n,A=0,S=E.displayName||E.name||"<anonymous>",O=function(...I){if(vt.set(O,++A),A===1)n=E.apply(this,I),E=null;else if(r.throw===!0)throw new Error(`Function \`${S}\` can only be called once`);return n};return VA(O,E),vt.set(O,A),O};LI.callCount=E=>{if(!vt.has(E))throw new Error(`The given function \`${E.name}\` is not wrapped by the \`onetime\` package`);return vt.get(E)};var _I=LI;var PI=require("os");var DI=function(){let E=WA-lI+1;return Array.from({length:E},sf)},sf=function(E,r){return{name:`SIGRT${r+1}`,number:lI+r,action:"terminate",description:"Application-specific signal (realtime)",standard:"posix"}},lI=34,WA=64;var fI=require("os");var cI=[{name:"SIGHUP",number:1,action:"terminate",description:"Terminal closed",standard:"posix"},{name:"SIGINT",number:2,action:"terminate",description:"User interruption with CTRL-C",standard:"ansi"},{name:"SIGQUIT",number:3,action:"core",description:"User interruption with CTRL-\\",standard:"posix"},{name:"SIGILL",number:4,action:"core",description:"Invalid machine instruction",standard:"ansi"},{name:"SIGTRAP",number:5,action:"core",description:"Debugger breakpoint",standard:"posix"},{name:"SIGABRT",number:6,action:"core",description:"Aborted",standard:"ansi"},{name:"SIGIOT",number:6,action:"core",description:"Aborted",standard:"bsd"},{name:"SIGBUS",number:7,action:"core",description:"Bus error due to misaligned, non-existing address or paging error",standard:"bsd"},{name:"SIGEMT",number:7,action:"terminate",description:"Command should be emulated but is not implemented",standard:"other"},{name:"SIGFPE",number:8,action:"core",description:"Floating point arithmetic error",standard:"ansi"},{name:"SIGKILL",number:9,action:"terminate",description:"Forced termination",standard:"posix",forced:!0},{name:"SIGUSR1",number:10,action:"terminate",description:"Application-specific signal",standard:"posix"},{name:"SIGSEGV",number:11,action:"core",description:"Segmentation fault",standard:"ansi"},{name:"SIGUSR2",number:12,action:"terminate",description:"Application-specific signal",standard:"posix"},{name:"SIGPIPE",number:13,action:"terminate",description:"Broken pipe or socket",standard:"posix"},{name:"SIGALRM",number:14,action:"terminate",description:"Timeout or timer",standard:"posix"},{name:"SIGTERM",number:15,action:"terminate",description:"Termination",standard:"ansi"},{name:"SIGSTKFLT",number:16,action:"terminate",description:"Stack is empty or overflowed",standard:"other"},{name:"SIGCHLD",number:17,action:"ignore",description:"Child process terminated, paused or unpaused",standard:"posix"},{name:"SIGCLD",number:17,action:"ignore",description:"Child process terminated, paused or unpaused",standard:"other"},{name:"SIGCONT",number:18,action:"unpause",description:"Unpaused",standard:"posix",forced:!0},{name:"SIGSTOP",number:19,action:"pause",description:"Paused",standard:"posix",forced:!0},{name:"SIGTSTP",number:20,action:"pause",description:'Paused using CTRL-Z or "suspend"',standard:"posix"},{name:"SIGTTIN",number:21,action:"pause",description:"Background process cannot read terminal input",standard:"posix"},{name:"SIGBREAK",number:21,action:"terminate",description:"User interruption with CTRL-BREAK",standard:"other"},{name:"SIGTTOU",number:22,action:"pause",description:"Background process cannot write to terminal output",standard:"posix"},{name:"SIGURG",number:23,action:"ignore",description:"Socket received out-of-band data",standard:"bsd"},{name:"SIGXCPU",number:24,action:"core",description:"Process timed out",standard:"bsd"},{name:"SIGXFSZ",number:25,action:"core",description:"File too big",standard:"bsd"},{name:"SIGVTALRM",number:26,action:"terminate",description:"Timeout or timer",standard:"bsd"},{name:"SIGPROF",number:27,action:"terminate",description:"Timeout or timer",standard:"bsd"},{name:"SIGWINCH",number:28,action:"ignore",description:"Terminal window size changed",standard:"bsd"},{name:"SIGIO",number:29,action:"terminate",description:"I/O is available",standard:"other"},{name:"SIGPOLL",number:29,action:"terminate",description:"Watched event",standard:"other"},{name:"SIGINFO",number:29,action:"ignore",description:"Request for process information",standard:"other"},{name:"SIGPWR",number:30,action:"terminate",description:"Device running out of power",standard:"systemv"},{name:"SIGSYS",number:31,action:"core",description:"Invalid system call",standard:"other"},{name:"SIGUNUSED",number:31,action:"terminate",description:"Invalid system call",standard:"other"}];var XA=function(){let E=DI();return[...cI,...E].map(Cf)},Cf=function({name:E,number:r,description:n,action:A,forced:S=!1,standard:O}){let{signals:{[E]:I}}=fI.constants,C=I!==void 0;return{name:E,number:C?I:r,description:n,supported:C,action:A,forced:S,standard:O}};var of=function(){return XA().reduce(af,{})},af=function(E,{name:r,number:n,description:A,supported:S,action:O,forced:I,standard:C}){return{...E,[r]:{name:r,number:n,description:A,supported:S,action:O,forced:I,standard:C}}},pI=of(),Lf=function(){let E=XA(),r=64+1,n=Array.from({length:r},(A,S)=>_f(S,E));return Object.assign({},...n)},_f=function(E,r){let n=Df(E,r);if(n===void 0)return{};let{name:A,description:S,supported:O,action:I,forced:C,standard:s}=n;return{[E]:{name:A,number:E,description:S,supported:O,action:I,forced:C,standard:s}}},Df=function(E,r){let n=r.find(({name:A})=>PI.constants.signals[A]===E);return n!==void 0?n:r.find(A=>A.number===E)},tG=Lf();var lf=({timedOut:E,timeout:r,errorCode:n,signal:A,signalDescription:S,exitCode:O,isCanceled:I})=>E?`timed out after ${r} milliseconds`:I?"was canceled":n!==void 0?`failed with ${n}`:A!==void 0?`was killed with ${A} (${S})`:O!==void 0?`failed with exit code ${O}`:"failed",bA=({stdout:E,stderr:r,all:n,error:A,signal:S,exitCode:O,command:I,escapedCommand:C,timedOut:s,isCanceled:a,killed:c,parsed:{options:{timeout:_}}})=>{O=O===null?void 0:O,S=S===null?void 0:S;let h=S===void 0?void 0:pI[S].description,F=A&&A.code,G=`Command ${lf({timedOut:s,timeout:_,errorCode:F,signal:S,signalDescription:h,exitCode:O,isCanceled:a})}: ${I}`,x=Object.prototype.toString.call(A)==="[object Error]",m=x?`${G}
${A.message}`:G,g=[m,r,E].filter(Boolean).join(`
`);return x?(A.originalMessage=A.message,A.message=g):A=new Error(g),A.shortMessage=m,A.command=I,A.escapedCommand=C,A.exitCode=O,A.signal=S,A.signalDescription=h,A.stdout=E,A.stderr=r,n!==void 0&&(A.all=n),"bufferedData"in A&&delete A.bufferedData,A.failed=!0,A.timedOut=!!s,A.isCanceled=a,A.killed=c&&!s,A};var yt=["stdin","stdout","stderr"],cf=E=>yt.some(r=>E[r]!==void 0),MI=E=>{if(!E)return;let{stdio:r}=E;if(r===void 0)return yt.map(A=>E[A]);if(cf(E))throw new Error(`It's not possible to provide \`stdio\` in combination with one of ${yt.map(A=>`\`${A}\``).join(", ")}`);if(typeof r=="string")return r;if(!Array.isArray(r))throw new TypeError(`Expected \`stdio\` to be of type \`string\` or \`Array\`, got \`${typeof r}\``);let n=Math.max(r.length,yt.length);return Array.from({length:n},(A,S)=>r[S])};var mI=cE(require("node:os"),1),HI=cE(BI(),1),ff=1e3*5,YI=(E,r="SIGTERM",n={})=>{let A=E(r);return Pf(E,r,n,A),A},Pf=(E,r,n,A)=>{if(!pf(r,n,A))return;let S=Uf(n),O=setTimeout(()=>{E("SIGKILL")},S);O.unref&&O.unref()},pf=(E,{forceKillAfterTimeout:r},n)=>Mf(E)&&r!==!1&&n,Mf=E=>E===mI.default.constants.signals.SIGTERM||typeof E=="string"&&E.toUpperCase()==="SIGTERM",Uf=({forceKillAfterTimeout:E=!0})=>{if(E===!0)return ff;if(!Number.isFinite(E)||E<0)throw new TypeError(`Expected the \`forceKillAfterTimeout\` option to be a non-negative integer, got \`${E}\` (${typeof E})`);return E},gI=(E,r)=>{E.kill()&&(r.isCanceled=!0)},hf=(E,r,n)=>{E.kill(r),n(Object.assign(new Error("Timed out"),{timedOut:!0,signal:r}))},xI=(E,{timeout:r,killSignal:n="SIGTERM"},A)=>{if(r===0||r===void 0)return A;let S,O=new Promise((C,s)=>{S=setTimeout(()=>{hf(E,n,s)},r)}),I=A.finally(()=>{clearTimeout(S)});return Promise.race([O,I])},vI=({timeout:E})=>{if(E!==void 0&&(!Number.isFinite(E)||E<0))throw new TypeError(`Expected the \`timeout\` option to be a non-negative integer, got \`${E}\` (${typeof E})`)},yI=async(E,{cleanup:r,detached:n},A)=>{if(!r||n)return A;let S=(0,HI.default)(()=>{E.kill()});return A.finally(()=>{S()})};function VI(E){return E!==null&&typeof E=="object"&&typeof E.pipe=="function"}var qA=cE(bI(),1),JI=cE(KI(),1),$I=(E,r)=>{r===void 0||E.stdin===void 0||(VI(r)?r.pipe(E.stdin):E.stdin.end(r))},QI=(E,{all:r})=>{if(!r||!E.stdout&&!E.stderr)return;let n=(0,JI.default)();return E.stdout&&n.add(E.stdout),E.stderr&&n.add(E.stderr),n},$A=async(E,r)=>{if(E){E.destroy();try{return await r}catch(n){return n.bufferedData}}},QA=(E,{encoding:r,buffer:n,maxBuffer:A})=>{if(!(!E||!n))return r?(0,qA.default)(E,{encoding:r,maxBuffer:A}):qA.default.buffer(E,{maxBuffer:A})},qI=async({stdout:E,stderr:r,all:n},{encoding:A,buffer:S,maxBuffer:O},I)=>{let C=QA(E,{encoding:A,buffer:S,maxBuffer:O}),s=QA(r,{encoding:A,buffer:S,maxBuffer:O}),a=QA(n,{encoding:A,buffer:S,maxBuffer:O*2});try{return await Promise.all([I,C,s,a])}catch(c){return Promise.all([{error:c,signal:c.signal,timedOut:c.timedOut},$A(E,C),$A(r,s),$A(n,a)])}};var gf=(async()=>{})().constructor.prototype,xf=["then","catch","finally"].map(E=>[E,Reflect.getOwnPropertyDescriptor(gf,E)]),kA=(E,r)=>{for(let[n,A]of xf){let S=typeof r=="function"?(...O)=>Reflect.apply(A.value,r(),O):A.value.bind(r);Reflect.defineProperty(E,n,{...A,value:S})}return E},kI=E=>new Promise((r,n)=>{E.on("exit",(A,S)=>{r({exitCode:A,signal:S})}),E.on("error",A=>{n(A)}),E.stdin&&E.stdin.on("error",A=>{n(A)})});var ZI=(E,r=[])=>Array.isArray(r)?[E,...r]:[E],vf=/^[\w.-]+$/,yf=/"/g,Vf=E=>typeof E!="string"||vf.test(E)?E:`"${E.replace(yf,'\\"')}"`,zI=(E,r)=>ZI(E,r).join(" "),jI=(E,r)=>ZI(E,r).map(n=>Vf(n)).join(" ");var Wf=1e3*1e3*100,Xf=({env:E,extendEnv:r,preferLocal:n,localDir:A,execPath:S})=>{let O=r?{...Mr.default.env,...E}:E;return n?aI({env:O,cwd:A,execPath:S}):O},bf=(E,r,n={})=>{let A=TN.default._parse(E,r,n);return E=A.command,r=A.args,n=A.options,n={maxBuffer:Wf,buffer:!0,stripFinalNewline:!0,extendEnv:!0,preferLocal:!1,localDir:n.cwd||Mr.default.cwd(),execPath:Mr.default.execPath,encoding:"utf8",reject:!0,cleanup:!0,all:!1,windowsHide:!0,...n},n.env=Xf(n),n.stdio=MI(n),Mr.default.platform==="win32"&&eN.default.basename(E,".exe")==="cmd"&&r.unshift("/q"),{file:E,args:r,options:n,parsed:A}},ZA=(E,r,n)=>typeof r!="string"&&!EN.Buffer.isBuffer(r)?n===void 0?void 0:"":E.stripFinalNewline?yA(r):r;function rN(E,r,n){let A=bf(E,r,n),S=zI(E,r),O=jI(E,r);vI(A.options);let I;try{I=zA.default.spawn(A.file,A.args,A.options)}catch(F){let H=new zA.default.ChildProcess,G=Promise.reject(bA({error:F,stdout:"",stderr:"",all:"",command:S,escapedCommand:O,parsed:A,timedOut:!1,isCanceled:!1,killed:!1}));return kA(H,G)}let C=kI(I),s=xI(I,A.options,C),a=yI(I,A.options,s),c={isCanceled:!1};I.kill=YI.bind(null,I.kill.bind(I)),I.cancel=gI.bind(null,I,c);let h=_I(async()=>{let[{error:F,exitCode:H,signal:G,timedOut:x},m,g,rE]=await qI(I,A.options,a),EE=ZA(A.options,m),nE=ZA(A.options,g),UE=ZA(A.options,rE);if(F||H!==0||G!==null){let pT=bA({error:F,exitCode:H,signal:G,stdout:EE,stderr:nE,all:UE,command:S,escapedCommand:O,parsed:A,timedOut:x,isCanceled:c.isCanceled||(A.options.signal?A.options.signal.aborted:!1),killed:I.killed});if(!A.options.reject)return pT;throw pT}return{command:S,escapedCommand:O,exitCode:0,stdout:EE,stderr:nE,all:UE,failed:!1,timedOut:!1,isCanceled:!1,killed:!1}});return $I(I,A.options.input),I.all=QI(I,A.options),kA(I,h)}var Ae=cE(require("react"));var KR={};ve(KR,{Case:()=>ER,Convert:()=>MR,Date:()=>UR,Format:()=>VR,Html:()=>WR,Number:()=>XR,String:()=>wR});var ER={};ve(ER,{camelCase:()=>wf,downCase:()=>qf,kebabCase:()=>$f,snakeCase:()=>Jf,startCase:()=>Kf,upCase:()=>Qf});var eT=cE(jA()),wf={info:{title:"Camel Case",desc:"Convert your text to Camel Case",type:["list","form","clipboard"],example:"ray cast"},run(E){return(0,eT.camelCase)(E)}},Kf={info:{title:"Start Case",desc:"Convert your text to Start Case",type:["list","form","clipboard"],example:"aaa bbb ccc ddd eee"},run(E){return(0,eT.startCase)(E)}},Jf={info:{title:"Snake Case",desc:"Convert your text to Snake Case",type:["list","form","clipboard"],example:"aaa bbb ccc ddd eee"},run(E){return(0,eT.snakeCase)(E)}},$f={info:{title:"Kebab Case",desc:"Convert your text to Kebab Case",type:["list","form","clipboard"],example:"aaa bbb ccc ddd eee"},run(E){return(0,eT.kebabCase)(E)}},Qf={info:{title:"Upper Case",desc:"Convert your text to Upper Case",type:["list","form","clipboard"],keywords:["capital"],example:"raycast"},run(E){return E.toUpperCase()}},qf={info:{title:"Lower Case",desc:"Convert your text to Lower Case",type:["list","form","clipboard"],keywords:["lower"],example:"RAYCAST"},run(E){return E.toLowerCase()}};var MR={};ve(MR,{HexToString:()=>hM,JsonToYaml:()=>UM,StringToHex:()=>FM,javaScriptToJson:()=>pM,jsonToJavaScript:()=>MM,yamlToJson:()=>PM});function _N(E){return typeof E>"u"||E===null}function kf(E){return typeof E=="object"&&E!==null}function Zf(E){return Array.isArray(E)?E:_N(E)?[]:[E]}function zf(E,r){var n,A,S,O;if(r)for(O=Object.keys(r),n=0,A=O.length;n<A;n+=1)S=O[n],E[S]=r[S];return E}function jf(E,r){var n="",A;for(A=0;A<r;A+=1)n+=E;return n}function EP(E){return E===0&&Number.NEGATIVE_INFINITY===1/E}var eP=_N,TP=kf,rP=Zf,tP=jf,nP=EP,AP=zf,ME={isNothing:eP,isObject:TP,toArray:rP,repeat:tP,isNegativeZero:nP,extend:AP};function DN(E,r){var n="",A=E.reason||"(unknown reason)";return E.mark?(E.mark.name&&(n+='in "'+E.mark.name+'" '),n+="("+(E.mark.line+1)+":"+(E.mark.column+1)+")",!r&&E.mark.snippet&&(n+=`

`+E.mark.snippet),A+" "+n):A}function Fr(E,r){Error.call(this),this.name="YAMLException",this.reason=E,this.mark=r,this.message=DN(this,!1),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack||""}Fr.prototype=Object.create(Error.prototype);Fr.prototype.constructor=Fr;Fr.prototype.toString=function(r){return this.name+": "+DN(this,r)};var JE=Fr;function eR(E,r,n,A,S){var O="",I="",C=Math.floor(S/2)-1;return A-r>C&&(O=" ... ",r=A-C+O.length),n-A>C&&(I=" ...",n=A+C-I.length),{str:O+E.slice(r,n).replace(/\t/g,"\u2192")+I,pos:A-r+O.length}}function TR(E,r){return ME.repeat(" ",r-E.length)+E}function RP(E,r){if(r=Object.create(r||null),!E.buffer)return null;r.maxLength||(r.maxLength=79),typeof r.indent!="number"&&(r.indent=1),typeof r.linesBefore!="number"&&(r.linesBefore=3),typeof r.linesAfter!="number"&&(r.linesAfter=2);for(var n=/\r?\n|\r|\0/g,A=[0],S=[],O,I=-1;O=n.exec(E.buffer);)S.push(O.index),A.push(O.index+O[0].length),E.position<=O.index&&I<0&&(I=A.length-2);I<0&&(I=A.length-1);var C="",s,a,c=Math.min(E.line+r.linesAfter,S.length).toString().length,_=r.maxLength-(r.indent+c+3);for(s=1;s<=r.linesBefore&&!(I-s<0);s++)a=eR(E.buffer,A[I-s],S[I-s],E.position-(A[I]-A[I-s]),_),C=ME.repeat(" ",r.indent)+TR((E.line-s+1).toString(),c)+" | "+a.str+`
`+C;for(a=eR(E.buffer,A[I],S[I],E.position,_),C+=ME.repeat(" ",r.indent)+TR((E.line+1).toString(),c)+" | "+a.str+`
`,C+=ME.repeat("-",r.indent+c+3+a.pos)+`^
`,s=1;s<=r.linesAfter&&!(I+s>=S.length);s++)a=eR(E.buffer,A[I+s],S[I+s],E.position-(A[I]-A[I+s]),_),C+=ME.repeat(" ",r.indent)+TR((E.line+s+1).toString(),c)+" | "+a.str+`
`;return C.replace(/\n$/,"")}var SP=RP,iP=["kind","multi","resolve","construct","instanceOf","predicate","represent","representName","defaultStyle","styleAliases"],OP=["scalar","sequence","mapping"];function IP(E){var r={};return E!==null&&Object.keys(E).forEach(function(n){E[n].forEach(function(A){r[String(A)]=n})}),r}function NP(E,r){if(r=r||{},Object.keys(r).forEach(function(n){if(iP.indexOf(n)===-1)throw new JE('Unknown option "'+n+'" is met in definition of "'+E+'" YAML type.')}),this.options=r,this.tag=E,this.kind=r.kind||null,this.resolve=r.resolve||function(){return!0},this.construct=r.construct||function(n){return n},this.instanceOf=r.instanceOf||null,this.predicate=r.predicate||null,this.represent=r.represent||null,this.representName=r.representName||null,this.defaultStyle=r.defaultStyle||null,this.multi=r.multi||!1,this.styleAliases=IP(r.styleAliases||null),OP.indexOf(this.kind)===-1)throw new JE('Unknown kind "'+this.kind+'" is specified for "'+E+'" YAML type.')}var xE=NP;function tN(E,r){var n=[];return E[r].forEach(function(A){var S=n.length;n.forEach(function(O,I){O.tag===A.tag&&O.kind===A.kind&&O.multi===A.multi&&(S=I)}),n[S]=A}),n}function uP(){var E={scalar:{},sequence:{},mapping:{},fallback:{},multi:{scalar:[],sequence:[],mapping:[],fallback:[]}},r,n;function A(S){S.multi?(E.multi[S.kind].push(S),E.multi.fallback.push(S)):E[S.kind][S.tag]=E.fallback[S.tag]=S}for(r=0,n=arguments.length;r<n;r+=1)arguments[r].forEach(A);return E}function tR(E){return this.extend(E)}tR.prototype.extend=function(r){var n=[],A=[];if(r instanceof xE)A.push(r);else if(Array.isArray(r))A=A.concat(r);else if(r&&(Array.isArray(r.implicit)||Array.isArray(r.explicit)))r.implicit&&(n=n.concat(r.implicit)),r.explicit&&(A=A.concat(r.explicit));else throw new JE("Schema.extend argument should be a Type, [ Type ], or a schema definition ({ implicit: [...], explicit: [...] })");n.forEach(function(O){if(!(O instanceof xE))throw new JE("Specified list of YAML types (or a single Type object) contains a non-Type object.");if(O.loadKind&&O.loadKind!=="scalar")throw new JE("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.");if(O.multi)throw new JE("There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.")}),A.forEach(function(O){if(!(O instanceof xE))throw new JE("Specified list of YAML types (or a single Type object) contains a non-Type object.")});var S=Object.create(tR.prototype);return S.implicit=(this.implicit||[]).concat(n),S.explicit=(this.explicit||[]).concat(A),S.compiledImplicit=tN(S,"implicit"),S.compiledExplicit=tN(S,"explicit"),S.compiledTypeMap=uP(S.compiledImplicit,S.compiledExplicit),S};var lN=tR,cN=new xE("tag:yaml.org,2002:str",{kind:"scalar",construct:function(E){return E!==null?E:""}}),fN=new xE("tag:yaml.org,2002:seq",{kind:"sequence",construct:function(E){return E!==null?E:[]}}),PN=new xE("tag:yaml.org,2002:map",{kind:"mapping",construct:function(E){return E!==null?E:{}}}),pN=new lN({explicit:[cN,fN,PN]});function sP(E){if(E===null)return!0;var r=E.length;return r===1&&E==="~"||r===4&&(E==="null"||E==="Null"||E==="NULL")}function CP(){return null}function oP(E){return E===null}var MN=new xE("tag:yaml.org,2002:null",{kind:"scalar",resolve:sP,construct:CP,predicate:oP,represent:{canonical:function(){return"~"},lowercase:function(){return"null"},uppercase:function(){return"NULL"},camelcase:function(){return"Null"},empty:function(){return""}},defaultStyle:"lowercase"});function aP(E){if(E===null)return!1;var r=E.length;return r===4&&(E==="true"||E==="True"||E==="TRUE")||r===5&&(E==="false"||E==="False"||E==="FALSE")}function LP(E){return E==="true"||E==="True"||E==="TRUE"}function _P(E){return Object.prototype.toString.call(E)==="[object Boolean]"}var UN=new xE("tag:yaml.org,2002:bool",{kind:"scalar",resolve:aP,construct:LP,predicate:_P,represent:{lowercase:function(E){return E?"true":"false"},uppercase:function(E){return E?"TRUE":"FALSE"},camelcase:function(E){return E?"True":"False"}},defaultStyle:"lowercase"});function DP(E){return 48<=E&&E<=57||65<=E&&E<=70||97<=E&&E<=102}function lP(E){return 48<=E&&E<=55}function cP(E){return 48<=E&&E<=57}function fP(E){if(E===null)return!1;var r=E.length,n=0,A=!1,S;if(!r)return!1;if(S=E[n],(S==="-"||S==="+")&&(S=E[++n]),S==="0"){if(n+1===r)return!0;if(S=E[++n],S==="b"){for(n++;n<r;n++)if(S=E[n],S!=="_"){if(S!=="0"&&S!=="1")return!1;A=!0}return A&&S!=="_"}if(S==="x"){for(n++;n<r;n++)if(S=E[n],S!=="_"){if(!DP(E.charCodeAt(n)))return!1;A=!0}return A&&S!=="_"}if(S==="o"){for(n++;n<r;n++)if(S=E[n],S!=="_"){if(!lP(E.charCodeAt(n)))return!1;A=!0}return A&&S!=="_"}}if(S==="_")return!1;for(;n<r;n++)if(S=E[n],S!=="_"){if(!cP(E.charCodeAt(n)))return!1;A=!0}return!(!A||S==="_")}function PP(E){var r=E,n=1,A;if(r.indexOf("_")!==-1&&(r=r.replace(/_/g,"")),A=r[0],(A==="-"||A==="+")&&(A==="-"&&(n=-1),r=r.slice(1),A=r[0]),r==="0")return 0;if(A==="0"){if(r[1]==="b")return n*parseInt(r.slice(2),2);if(r[1]==="x")return n*parseInt(r.slice(2),16);if(r[1]==="o")return n*parseInt(r.slice(2),8)}return n*parseInt(r,10)}function pP(E){return Object.prototype.toString.call(E)==="[object Number]"&&E%1===0&&!ME.isNegativeZero(E)}var hN=new xE("tag:yaml.org,2002:int",{kind:"scalar",resolve:fP,construct:PP,predicate:pP,represent:{binary:function(E){return E>=0?"0b"+E.toString(2):"-0b"+E.toString(2).slice(1)},octal:function(E){return E>=0?"0o"+E.toString(8):"-0o"+E.toString(8).slice(1)},decimal:function(E){return E.toString(10)},hexadecimal:function(E){return E>=0?"0x"+E.toString(16).toUpperCase():"-0x"+E.toString(16).toUpperCase().slice(1)}},defaultStyle:"decimal",styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}}),MP=new RegExp("^(?:[-+]?(?:[0-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$");function UP(E){return!(E===null||!MP.test(E)||E[E.length-1]==="_")}function hP(E){var r,n;return r=E.replace(/_/g,"").toLowerCase(),n=r[0]==="-"?-1:1,"+-".indexOf(r[0])>=0&&(r=r.slice(1)),r===".inf"?n===1?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:r===".nan"?NaN:n*parseFloat(r,10)}var FP=/^[-+]?[0-9]+e/;function dP(E,r){var n;if(isNaN(E))switch(r){case"lowercase":return".nan";case"uppercase":return".NAN";case"camelcase":return".NaN"}else if(Number.POSITIVE_INFINITY===E)switch(r){case"lowercase":return".inf";case"uppercase":return".INF";case"camelcase":return".Inf"}else if(Number.NEGATIVE_INFINITY===E)switch(r){case"lowercase":return"-.inf";case"uppercase":return"-.INF";case"camelcase":return"-.Inf"}else if(ME.isNegativeZero(E))return"-0.0";return n=E.toString(10),FP.test(n)?n.replace("e",".e"):n}function GP(E){return Object.prototype.toString.call(E)==="[object Number]"&&(E%1!==0||ME.isNegativeZero(E))}var FN=new xE("tag:yaml.org,2002:float",{kind:"scalar",resolve:UP,construct:hP,predicate:GP,represent:dP,defaultStyle:"lowercase"}),dN=pN.extend({implicit:[MN,UN,hN,FN]}),GN=dN,BN=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"),mN=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$");function BP(E){return E===null?!1:BN.exec(E)!==null||mN.exec(E)!==null}function mP(E){var r,n,A,S,O,I,C,s=0,a=null,c,_,h;if(r=BN.exec(E),r===null&&(r=mN.exec(E)),r===null)throw new Error("Date resolve error");if(n=+r[1],A=+r[2]-1,S=+r[3],!r[4])return new Date(Date.UTC(n,A,S));if(O=+r[4],I=+r[5],C=+r[6],r[7]){for(s=r[7].slice(0,3);s.length<3;)s+="0";s=+s}return r[9]&&(c=+r[10],_=+(r[11]||0),a=(c*60+_)*6e4,r[9]==="-"&&(a=-a)),h=new Date(Date.UTC(n,A,S,O,I,C,s)),a&&h.setTime(h.getTime()-a),h}function HP(E){return E.toISOString()}var HN=new xE("tag:yaml.org,2002:timestamp",{kind:"scalar",resolve:BP,construct:mP,instanceOf:Date,represent:HP});function YP(E){return E==="<<"||E===null}var YN=new xE("tag:yaml.org,2002:merge",{kind:"scalar",resolve:YP}),iR=`ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=
\r`;function gP(E){if(E===null)return!1;var r,n,A=0,S=E.length,O=iR;for(n=0;n<S;n++)if(r=O.indexOf(E.charAt(n)),!(r>64)){if(r<0)return!1;A+=6}return A%8===0}function xP(E){var r,n,A=E.replace(/[\r\n=]/g,""),S=A.length,O=iR,I=0,C=[];for(r=0;r<S;r++)r%4===0&&r&&(C.push(I>>16&255),C.push(I>>8&255),C.push(I&255)),I=I<<6|O.indexOf(A.charAt(r));return n=S%4*6,n===0?(C.push(I>>16&255),C.push(I>>8&255),C.push(I&255)):n===18?(C.push(I>>10&255),C.push(I>>2&255)):n===12&&C.push(I>>4&255),new Uint8Array(C)}function vP(E){var r="",n=0,A,S,O=E.length,I=iR;for(A=0;A<O;A++)A%3===0&&A&&(r+=I[n>>18&63],r+=I[n>>12&63],r+=I[n>>6&63],r+=I[n&63]),n=(n<<8)+E[A];return S=O%3,S===0?(r+=I[n>>18&63],r+=I[n>>12&63],r+=I[n>>6&63],r+=I[n&63]):S===2?(r+=I[n>>10&63],r+=I[n>>4&63],r+=I[n<<2&63],r+=I[64]):S===1&&(r+=I[n>>2&63],r+=I[n<<4&63],r+=I[64],r+=I[64]),r}function yP(E){return Object.prototype.toString.call(E)==="[object Uint8Array]"}var gN=new xE("tag:yaml.org,2002:binary",{kind:"scalar",resolve:gP,construct:xP,predicate:yP,represent:vP}),VP=Object.prototype.hasOwnProperty,WP=Object.prototype.toString;function XP(E){if(E===null)return!0;var r=[],n,A,S,O,I,C=E;for(n=0,A=C.length;n<A;n+=1){if(S=C[n],I=!1,WP.call(S)!=="[object Object]")return!1;for(O in S)if(VP.call(S,O))if(!I)I=!0;else return!1;if(!I)return!1;if(r.indexOf(O)===-1)r.push(O);else return!1}return!0}function bP(E){return E!==null?E:[]}var xN=new xE("tag:yaml.org,2002:omap",{kind:"sequence",resolve:XP,construct:bP}),wP=Object.prototype.toString;function KP(E){if(E===null)return!0;var r,n,A,S,O,I=E;for(O=new Array(I.length),r=0,n=I.length;r<n;r+=1){if(A=I[r],wP.call(A)!=="[object Object]"||(S=Object.keys(A),S.length!==1))return!1;O[r]=[S[0],A[S[0]]]}return!0}function JP(E){if(E===null)return[];var r,n,A,S,O,I=E;for(O=new Array(I.length),r=0,n=I.length;r<n;r+=1)A=I[r],S=Object.keys(A),O[r]=[S[0],A[S[0]]];return O}var vN=new xE("tag:yaml.org,2002:pairs",{kind:"sequence",resolve:KP,construct:JP}),$P=Object.prototype.hasOwnProperty;function QP(E){if(E===null)return!0;var r,n=E;for(r in n)if($P.call(n,r)&&n[r]!==null)return!1;return!0}function qP(E){return E!==null?E:{}}var yN=new xE("tag:yaml.org,2002:set",{kind:"mapping",resolve:QP,construct:qP}),IR=GN.extend({implicit:[HN,YN],explicit:[gN,xN,vN,yN]}),rT=Object.prototype.hasOwnProperty,Kt=1,VN=2,WN=3,Jt=4,rR=1,kP=2,nN=3,ZP=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,zP=/[\x85\u2028\u2029]/,jP=/[,\[\]\{\}]/,XN=/^(?:!|!!|![a-z\-]+!)$/i,bN=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function AN(E){return Object.prototype.toString.call(E)}function Ue(E){return E===10||E===13}function _T(E){return E===9||E===32}function jE(E){return E===9||E===32||E===10||E===13}function qT(E){return E===44||E===91||E===93||E===123||E===125}function Ep(E){var r;return 48<=E&&E<=57?E-48:(r=E|32,97<=r&&r<=102?r-97+10:-1)}function ep(E){return E===120?2:E===117?4:E===85?8:0}function Tp(E){return 48<=E&&E<=57?E-48:-1}function RN(E){return E===48?"\0":E===97?"\x07":E===98?"\b":E===116||E===9?"	":E===110?`
`:E===118?"\v":E===102?"\f":E===114?"\r":E===101?"\x1B":E===32?" ":E===34?'"':E===47?"/":E===92?"\\":E===78?"\x85":E===95?"\xA0":E===76?"\u2028":E===80?"\u2029":""}function rp(E){return E<=65535?String.fromCharCode(E):String.fromCharCode((E-65536>>10)+55296,(E-65536&1023)+56320)}var wN=new Array(256),KN=new Array(256);for(LT=0;LT<256;LT++)wN[LT]=RN(LT)?1:0,KN[LT]=RN(LT);var LT;function tp(E,r){this.input=E,this.filename=r.filename||null,this.schema=r.schema||IR,this.onWarning=r.onWarning||null,this.legacy=r.legacy||!1,this.json=r.json||!1,this.listener=r.listener||null,this.implicitTypes=this.schema.compiledImplicit,this.typeMap=this.schema.compiledTypeMap,this.length=E.length,this.position=0,this.line=0,this.lineStart=0,this.lineIndent=0,this.firstTabInLine=-1,this.documents=[]}function JN(E,r){var n={name:E.filename,buffer:E.input.slice(0,-1),position:E.position,line:E.line,column:E.position-E.lineStart};return n.snippet=SP(n),new JE(r,n)}function V(E,r){throw JN(E,r)}function $t(E,r){E.onWarning&&E.onWarning.call(null,JN(E,r))}var SN={YAML:function(r,n,A){var S,O,I;r.version!==null&&V(r,"duplication of %YAML directive"),A.length!==1&&V(r,"YAML directive accepts exactly one argument"),S=/^([0-9]+)\.([0-9]+)$/.exec(A[0]),S===null&&V(r,"ill-formed argument of the YAML directive"),O=parseInt(S[1],10),I=parseInt(S[2],10),O!==1&&V(r,"unacceptable YAML version of the document"),r.version=A[0],r.checkLineBreaks=I<2,I!==1&&I!==2&&$t(r,"unsupported YAML version of the document")},TAG:function(r,n,A){var S,O;A.length!==2&&V(r,"TAG directive accepts exactly two arguments"),S=A[0],O=A[1],XN.test(S)||V(r,"ill-formed tag handle (first argument) of the TAG directive"),rT.call(r.tagMap,S)&&V(r,'there is a previously declared suffix for "'+S+'" tag handle'),bN.test(O)||V(r,"ill-formed tag prefix (second argument) of the TAG directive");try{O=decodeURIComponent(O)}catch{V(r,"tag prefix is malformed: "+O)}r.tagMap[S]=O}};function TT(E,r,n,A){var S,O,I,C;if(r<n){if(C=E.input.slice(r,n),A)for(S=0,O=C.length;S<O;S+=1)I=C.charCodeAt(S),I===9||32<=I&&I<=1114111||V(E,"expected valid JSON character");else ZP.test(C)&&V(E,"the stream contains non-printable characters");E.result+=C}}function iN(E,r,n,A){var S,O,I,C;for(ME.isObject(n)||V(E,"cannot merge mappings; the provided source object is unacceptable"),S=Object.keys(n),I=0,C=S.length;I<C;I+=1)O=S[I],rT.call(r,O)||(r[O]=n[O],A[O]=!0)}function kT(E,r,n,A,S,O,I,C,s){var a,c;if(Array.isArray(S))for(S=Array.prototype.slice.call(S),a=0,c=S.length;a<c;a+=1)Array.isArray(S[a])&&V(E,"nested arrays are not supported inside keys"),typeof S=="object"&&AN(S[a])==="[object Object]"&&(S[a]="[object Object]");if(typeof S=="object"&&AN(S)==="[object Object]"&&(S="[object Object]"),S=String(S),r===null&&(r={}),A==="tag:yaml.org,2002:merge")if(Array.isArray(O))for(a=0,c=O.length;a<c;a+=1)iN(E,r,O[a],n);else iN(E,r,O,n);else!E.json&&!rT.call(n,S)&&rT.call(r,S)&&(E.line=I||E.line,E.lineStart=C||E.lineStart,E.position=s||E.position,V(E,"duplicated mapping key")),S==="__proto__"?Object.defineProperty(r,S,{configurable:!0,enumerable:!0,writable:!0,value:O}):r[S]=O,delete n[S];return r}function NR(E){var r;r=E.input.charCodeAt(E.position),r===10?E.position++:r===13?(E.position++,E.input.charCodeAt(E.position)===10&&E.position++):V(E,"a line break is expected"),E.line+=1,E.lineStart=E.position,E.firstTabInLine=-1}function fE(E,r,n){for(var A=0,S=E.input.charCodeAt(E.position);S!==0;){for(;_T(S);)S===9&&E.firstTabInLine===-1&&(E.firstTabInLine=E.position),S=E.input.charCodeAt(++E.position);if(r&&S===35)do S=E.input.charCodeAt(++E.position);while(S!==10&&S!==13&&S!==0);if(Ue(S))for(NR(E),S=E.input.charCodeAt(E.position),A++,E.lineIndent=0;S===32;)E.lineIndent++,S=E.input.charCodeAt(++E.position);else break}return n!==-1&&A!==0&&E.lineIndent<n&&$t(E,"deficient indentation"),A}function kt(E){var r=E.position,n;return n=E.input.charCodeAt(r),!!((n===45||n===46)&&n===E.input.charCodeAt(r+1)&&n===E.input.charCodeAt(r+2)&&(r+=3,n=E.input.charCodeAt(r),n===0||jE(n)))}function uR(E,r){r===1?E.result+=" ":r>1&&(E.result+=ME.repeat(`
`,r-1))}function np(E,r,n){var A,S,O,I,C,s,a,c,_=E.kind,h=E.result,F;if(F=E.input.charCodeAt(E.position),jE(F)||qT(F)||F===35||F===38||F===42||F===33||F===124||F===62||F===39||F===34||F===37||F===64||F===96||(F===63||F===45)&&(S=E.input.charCodeAt(E.position+1),jE(S)||n&&qT(S)))return!1;for(E.kind="scalar",E.result="",O=I=E.position,C=!1;F!==0;){if(F===58){if(S=E.input.charCodeAt(E.position+1),jE(S)||n&&qT(S))break}else if(F===35){if(A=E.input.charCodeAt(E.position-1),jE(A))break}else{if(E.position===E.lineStart&&kt(E)||n&&qT(F))break;if(Ue(F))if(s=E.line,a=E.lineStart,c=E.lineIndent,fE(E,!1,-1),E.lineIndent>=r){C=!0,F=E.input.charCodeAt(E.position);continue}else{E.position=I,E.line=s,E.lineStart=a,E.lineIndent=c;break}}C&&(TT(E,O,I,!1),uR(E,E.line-s),O=I=E.position,C=!1),_T(F)||(I=E.position+1),F=E.input.charCodeAt(++E.position)}return TT(E,O,I,!1),E.result?!0:(E.kind=_,E.result=h,!1)}function Ap(E,r){var n,A,S;if(n=E.input.charCodeAt(E.position),n!==39)return!1;for(E.kind="scalar",E.result="",E.position++,A=S=E.position;(n=E.input.charCodeAt(E.position))!==0;)if(n===39)if(TT(E,A,E.position,!0),n=E.input.charCodeAt(++E.position),n===39)A=E.position,E.position++,S=E.position;else return!0;else Ue(n)?(TT(E,A,S,!0),uR(E,fE(E,!1,r)),A=S=E.position):E.position===E.lineStart&&kt(E)?V(E,"unexpected end of the document within a single quoted scalar"):(E.position++,S=E.position);V(E,"unexpected end of the stream within a single quoted scalar")}function Rp(E,r){var n,A,S,O,I,C;if(C=E.input.charCodeAt(E.position),C!==34)return!1;for(E.kind="scalar",E.result="",E.position++,n=A=E.position;(C=E.input.charCodeAt(E.position))!==0;){if(C===34)return TT(E,n,E.position,!0),E.position++,!0;if(C===92){if(TT(E,n,E.position,!0),C=E.input.charCodeAt(++E.position),Ue(C))fE(E,!1,r);else if(C<256&&wN[C])E.result+=KN[C],E.position++;else if((I=ep(C))>0){for(S=I,O=0;S>0;S--)C=E.input.charCodeAt(++E.position),(I=Ep(C))>=0?O=(O<<4)+I:V(E,"expected hexadecimal character");E.result+=rp(O),E.position++}else V(E,"unknown escape sequence");n=A=E.position}else Ue(C)?(TT(E,n,A,!0),uR(E,fE(E,!1,r)),n=A=E.position):E.position===E.lineStart&&kt(E)?V(E,"unexpected end of the document within a double quoted scalar"):(E.position++,A=E.position)}V(E,"unexpected end of the stream within a double quoted scalar")}function Sp(E,r){var n=!0,A,S,O,I=E.tag,C,s=E.anchor,a,c,_,h,F,H=Object.create(null),G,x,m,g;if(g=E.input.charCodeAt(E.position),g===91)c=93,F=!1,C=[];else if(g===123)c=125,F=!0,C={};else return!1;for(E.anchor!==null&&(E.anchorMap[E.anchor]=C),g=E.input.charCodeAt(++E.position);g!==0;){if(fE(E,!0,r),g=E.input.charCodeAt(E.position),g===c)return E.position++,E.tag=I,E.anchor=s,E.kind=F?"mapping":"sequence",E.result=C,!0;n?g===44&&V(E,"expected the node content, but found ','"):V(E,"missed comma between flow collection entries"),x=G=m=null,_=h=!1,g===63&&(a=E.input.charCodeAt(E.position+1),jE(a)&&(_=h=!0,E.position++,fE(E,!0,r))),A=E.line,S=E.lineStart,O=E.position,ZT(E,r,Kt,!1,!0),x=E.tag,G=E.result,fE(E,!0,r),g=E.input.charCodeAt(E.position),(h||E.line===A)&&g===58&&(_=!0,g=E.input.charCodeAt(++E.position),fE(E,!0,r),ZT(E,r,Kt,!1,!0),m=E.result),F?kT(E,C,H,x,G,m,A,S,O):_?C.push(kT(E,null,H,x,G,m,A,S,O)):C.push(G),fE(E,!0,r),g=E.input.charCodeAt(E.position),g===44?(n=!0,g=E.input.charCodeAt(++E.position)):n=!1}V(E,"unexpected end of the stream within a flow collection")}function ip(E,r){var n,A,S=rR,O=!1,I=!1,C=r,s=0,a=!1,c,_;if(_=E.input.charCodeAt(E.position),_===124)A=!1;else if(_===62)A=!0;else return!1;for(E.kind="scalar",E.result="";_!==0;)if(_=E.input.charCodeAt(++E.position),_===43||_===45)rR===S?S=_===43?nN:kP:V(E,"repeat of a chomping mode identifier");else if((c=Tp(_))>=0)c===0?V(E,"bad explicit indentation width of a block scalar; it cannot be less than one"):I?V(E,"repeat of an indentation width identifier"):(C=r+c-1,I=!0);else break;if(_T(_)){do _=E.input.charCodeAt(++E.position);while(_T(_));if(_===35)do _=E.input.charCodeAt(++E.position);while(!Ue(_)&&_!==0)}for(;_!==0;){for(NR(E),E.lineIndent=0,_=E.input.charCodeAt(E.position);(!I||E.lineIndent<C)&&_===32;)E.lineIndent++,_=E.input.charCodeAt(++E.position);if(!I&&E.lineIndent>C&&(C=E.lineIndent),Ue(_)){s++;continue}if(E.lineIndent<C){S===nN?E.result+=ME.repeat(`
`,O?1+s:s):S===rR&&O&&(E.result+=`
`);break}for(A?_T(_)?(a=!0,E.result+=ME.repeat(`
`,O?1+s:s)):a?(a=!1,E.result+=ME.repeat(`
`,s+1)):s===0?O&&(E.result+=" "):E.result+=ME.repeat(`
`,s):E.result+=ME.repeat(`
`,O?1+s:s),O=!0,I=!0,s=0,n=E.position;!Ue(_)&&_!==0;)_=E.input.charCodeAt(++E.position);TT(E,n,E.position,!1)}return!0}function ON(E,r){var n,A=E.tag,S=E.anchor,O=[],I,C=!1,s;if(E.firstTabInLine!==-1)return!1;for(E.anchor!==null&&(E.anchorMap[E.anchor]=O),s=E.input.charCodeAt(E.position);s!==0&&(E.firstTabInLine!==-1&&(E.position=E.firstTabInLine,V(E,"tab characters must not be used in indentation")),!(s!==45||(I=E.input.charCodeAt(E.position+1),!jE(I))));){if(C=!0,E.position++,fE(E,!0,-1)&&E.lineIndent<=r){O.push(null),s=E.input.charCodeAt(E.position);continue}if(n=E.line,ZT(E,r,WN,!1,!0),O.push(E.result),fE(E,!0,-1),s=E.input.charCodeAt(E.position),(E.line===n||E.lineIndent>r)&&s!==0)V(E,"bad indentation of a sequence entry");else if(E.lineIndent<r)break}return C?(E.tag=A,E.anchor=S,E.kind="sequence",E.result=O,!0):!1}function Op(E,r,n){var A,S,O,I,C,s,a=E.tag,c=E.anchor,_={},h=Object.create(null),F=null,H=null,G=null,x=!1,m=!1,g;if(E.firstTabInLine!==-1)return!1;for(E.anchor!==null&&(E.anchorMap[E.anchor]=_),g=E.input.charCodeAt(E.position);g!==0;){if(!x&&E.firstTabInLine!==-1&&(E.position=E.firstTabInLine,V(E,"tab characters must not be used in indentation")),A=E.input.charCodeAt(E.position+1),O=E.line,(g===63||g===58)&&jE(A))g===63?(x&&(kT(E,_,h,F,H,null,I,C,s),F=H=G=null),m=!0,x=!0,S=!0):x?(x=!1,S=!0):V(E,"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line"),E.position+=1,g=A;else{if(I=E.line,C=E.lineStart,s=E.position,!ZT(E,n,VN,!1,!0))break;if(E.line===O){for(g=E.input.charCodeAt(E.position);_T(g);)g=E.input.charCodeAt(++E.position);if(g===58)g=E.input.charCodeAt(++E.position),jE(g)||V(E,"a whitespace character is expected after the key-value separator within a block mapping"),x&&(kT(E,_,h,F,H,null,I,C,s),F=H=G=null),m=!0,x=!1,S=!1,F=E.tag,H=E.result;else if(m)V(E,"can not read an implicit mapping pair; a colon is missed");else return E.tag=a,E.anchor=c,!0}else if(m)V(E,"can not read a block mapping entry; a multiline key may not be an implicit key");else return E.tag=a,E.anchor=c,!0}if((E.line===O||E.lineIndent>r)&&(x&&(I=E.line,C=E.lineStart,s=E.position),ZT(E,r,Jt,!0,S)&&(x?H=E.result:G=E.result),x||(kT(E,_,h,F,H,G,I,C,s),F=H=G=null),fE(E,!0,-1),g=E.input.charCodeAt(E.position)),(E.line===O||E.lineIndent>r)&&g!==0)V(E,"bad indentation of a mapping entry");else if(E.lineIndent<r)break}return x&&kT(E,_,h,F,H,null,I,C,s),m&&(E.tag=a,E.anchor=c,E.kind="mapping",E.result=_),m}function Ip(E){var r,n=!1,A=!1,S,O,I;if(I=E.input.charCodeAt(E.position),I!==33)return!1;if(E.tag!==null&&V(E,"duplication of a tag property"),I=E.input.charCodeAt(++E.position),I===60?(n=!0,I=E.input.charCodeAt(++E.position)):I===33?(A=!0,S="!!",I=E.input.charCodeAt(++E.position)):S="!",r=E.position,n){do I=E.input.charCodeAt(++E.position);while(I!==0&&I!==62);E.position<E.length?(O=E.input.slice(r,E.position),I=E.input.charCodeAt(++E.position)):V(E,"unexpected end of the stream within a verbatim tag")}else{for(;I!==0&&!jE(I);)I===33&&(A?V(E,"tag suffix cannot contain exclamation marks"):(S=E.input.slice(r-1,E.position+1),XN.test(S)||V(E,"named tag handle cannot contain such characters"),A=!0,r=E.position+1)),I=E.input.charCodeAt(++E.position);O=E.input.slice(r,E.position),jP.test(O)&&V(E,"tag suffix cannot contain flow indicator characters")}O&&!bN.test(O)&&V(E,"tag name cannot contain such characters: "+O);try{O=decodeURIComponent(O)}catch{V(E,"tag name is malformed: "+O)}return n?E.tag=O:rT.call(E.tagMap,S)?E.tag=E.tagMap[S]+O:S==="!"?E.tag="!"+O:S==="!!"?E.tag="tag:yaml.org,2002:"+O:V(E,'undeclared tag handle "'+S+'"'),!0}function Np(E){var r,n;if(n=E.input.charCodeAt(E.position),n!==38)return!1;for(E.anchor!==null&&V(E,"duplication of an anchor property"),n=E.input.charCodeAt(++E.position),r=E.position;n!==0&&!jE(n)&&!qT(n);)n=E.input.charCodeAt(++E.position);return E.position===r&&V(E,"name of an anchor node must contain at least one character"),E.anchor=E.input.slice(r,E.position),!0}function up(E){var r,n,A;if(A=E.input.charCodeAt(E.position),A!==42)return!1;for(A=E.input.charCodeAt(++E.position),r=E.position;A!==0&&!jE(A)&&!qT(A);)A=E.input.charCodeAt(++E.position);return E.position===r&&V(E,"name of an alias node must contain at least one character"),n=E.input.slice(r,E.position),rT.call(E.anchorMap,n)||V(E,'unidentified alias "'+n+'"'),E.result=E.anchorMap[n],fE(E,!0,-1),!0}function ZT(E,r,n,A,S){var O,I,C,s=1,a=!1,c=!1,_,h,F,H,G,x;if(E.listener!==null&&E.listener("open",E),E.tag=null,E.anchor=null,E.kind=null,E.result=null,O=I=C=Jt===n||WN===n,A&&fE(E,!0,-1)&&(a=!0,E.lineIndent>r?s=1:E.lineIndent===r?s=0:E.lineIndent<r&&(s=-1)),s===1)for(;Ip(E)||Np(E);)fE(E,!0,-1)?(a=!0,C=O,E.lineIndent>r?s=1:E.lineIndent===r?s=0:E.lineIndent<r&&(s=-1)):C=!1;if(C&&(C=a||S),(s===1||Jt===n)&&(Kt===n||VN===n?G=r:G=r+1,x=E.position-E.lineStart,s===1?C&&(ON(E,x)||Op(E,x,G))||Sp(E,G)?c=!0:(I&&ip(E,G)||Ap(E,G)||Rp(E,G)?c=!0:up(E)?(c=!0,(E.tag!==null||E.anchor!==null)&&V(E,"alias node should not have any properties")):np(E,G,Kt===n)&&(c=!0,E.tag===null&&(E.tag="?")),E.anchor!==null&&(E.anchorMap[E.anchor]=E.result)):s===0&&(c=C&&ON(E,x))),E.tag===null)E.anchor!==null&&(E.anchorMap[E.anchor]=E.result);else if(E.tag==="?"){for(E.result!==null&&E.kind!=="scalar"&&V(E,'unacceptable node kind for !<?> tag; it should be "scalar", not "'+E.kind+'"'),_=0,h=E.implicitTypes.length;_<h;_+=1)if(H=E.implicitTypes[_],H.resolve(E.result)){E.result=H.construct(E.result),E.tag=H.tag,E.anchor!==null&&(E.anchorMap[E.anchor]=E.result);break}}else if(E.tag!=="!"){if(rT.call(E.typeMap[E.kind||"fallback"],E.tag))H=E.typeMap[E.kind||"fallback"][E.tag];else for(H=null,F=E.typeMap.multi[E.kind||"fallback"],_=0,h=F.length;_<h;_+=1)if(E.tag.slice(0,F[_].tag.length)===F[_].tag){H=F[_];break}H||V(E,"unknown tag !<"+E.tag+">"),E.result!==null&&H.kind!==E.kind&&V(E,"unacceptable node kind for !<"+E.tag+'> tag; it should be "'+H.kind+'", not "'+E.kind+'"'),H.resolve(E.result,E.tag)?(E.result=H.construct(E.result,E.tag),E.anchor!==null&&(E.anchorMap[E.anchor]=E.result)):V(E,"cannot resolve a node with !<"+E.tag+"> explicit tag")}return E.listener!==null&&E.listener("close",E),E.tag!==null||E.anchor!==null||c}function sp(E){var r=E.position,n,A,S,O=!1,I;for(E.version=null,E.checkLineBreaks=E.legacy,E.tagMap=Object.create(null),E.anchorMap=Object.create(null);(I=E.input.charCodeAt(E.position))!==0&&(fE(E,!0,-1),I=E.input.charCodeAt(E.position),!(E.lineIndent>0||I!==37));){for(O=!0,I=E.input.charCodeAt(++E.position),n=E.position;I!==0&&!jE(I);)I=E.input.charCodeAt(++E.position);for(A=E.input.slice(n,E.position),S=[],A.length<1&&V(E,"directive name must not be less than one character in length");I!==0;){for(;_T(I);)I=E.input.charCodeAt(++E.position);if(I===35){do I=E.input.charCodeAt(++E.position);while(I!==0&&!Ue(I));break}if(Ue(I))break;for(n=E.position;I!==0&&!jE(I);)I=E.input.charCodeAt(++E.position);S.push(E.input.slice(n,E.position))}I!==0&&NR(E),rT.call(SN,A)?SN[A](E,A,S):$t(E,'unknown document directive "'+A+'"')}if(fE(E,!0,-1),E.lineIndent===0&&E.input.charCodeAt(E.position)===45&&E.input.charCodeAt(E.position+1)===45&&E.input.charCodeAt(E.position+2)===45?(E.position+=3,fE(E,!0,-1)):O&&V(E,"directives end mark is expected"),ZT(E,E.lineIndent-1,Jt,!1,!0),fE(E,!0,-1),E.checkLineBreaks&&zP.test(E.input.slice(r,E.position))&&$t(E,"non-ASCII line breaks are interpreted as content"),E.documents.push(E.result),E.position===E.lineStart&&kt(E)){E.input.charCodeAt(E.position)===46&&(E.position+=3,fE(E,!0,-1));return}if(E.position<E.length-1)V(E,"end of the stream or a document separator is expected");else return}function $N(E,r){E=String(E),r=r||{},E.length!==0&&(E.charCodeAt(E.length-1)!==10&&E.charCodeAt(E.length-1)!==13&&(E+=`
`),E.charCodeAt(0)===65279&&(E=E.slice(1)));var n=new tp(E,r),A=E.indexOf("\0");for(A!==-1&&(n.position=A,V(n,"null byte is not allowed in input")),n.input+="\0";n.input.charCodeAt(n.position)===32;)n.lineIndent+=1,n.position+=1;for(;n.position<n.length-1;)sp(n);return n.documents}function Cp(E,r,n){r!==null&&typeof r=="object"&&typeof n>"u"&&(n=r,r=null);var A=$N(E,n);if(typeof r!="function")return A;for(var S=0,O=A.length;S<O;S+=1)r(A[S])}function op(E,r){var n=$N(E,r);if(n.length!==0){if(n.length===1)return n[0];throw new JE("expected a single document in the stream, but found more")}}var ap=Cp,Lp=op,QN={loadAll:ap,load:Lp},qN=Object.prototype.toString,kN=Object.prototype.hasOwnProperty,sR=65279,_p=9,dr=10,Dp=13,lp=32,cp=33,fp=34,nR=35,Pp=37,pp=38,Mp=39,Up=42,ZN=44,hp=45,Qt=58,Fp=61,dp=62,Gp=63,Bp=64,zN=91,jN=93,mp=96,Eu=123,Hp=124,eu=125,XE={};XE[0]="\\0";XE[7]="\\a";XE[8]="\\b";XE[9]="\\t";XE[10]="\\n";XE[11]="\\v";XE[12]="\\f";XE[13]="\\r";XE[27]="\\e";XE[34]='\\"';XE[92]="\\\\";XE[133]="\\N";XE[160]="\\_";XE[8232]="\\L";XE[8233]="\\P";var Yp=["y","Y","yes","Yes","YES","on","On","ON","n","N","no","No","NO","off","Off","OFF"],gp=/^[-+]?[0-9_]+(?::[0-9_]+)+(?:\.[0-9_]*)?$/;function xp(E,r){var n,A,S,O,I,C,s;if(r===null)return{};for(n={},A=Object.keys(r),S=0,O=A.length;S<O;S+=1)I=A[S],C=String(r[I]),I.slice(0,2)==="!!"&&(I="tag:yaml.org,2002:"+I.slice(2)),s=E.compiledTypeMap.fallback[I],s&&kN.call(s.styleAliases,C)&&(C=s.styleAliases[C]),n[I]=C;return n}function vp(E){var r,n,A;if(r=E.toString(16).toUpperCase(),E<=255)n="x",A=2;else if(E<=65535)n="u",A=4;else if(E<=4294967295)n="U",A=8;else throw new JE("code point within a string may not be greater than 0xFFFFFFFF");return"\\"+n+ME.repeat("0",A-r.length)+r}var yp=1,Gr=2;function Vp(E){this.schema=E.schema||IR,this.indent=Math.max(1,E.indent||2),this.noArrayIndent=E.noArrayIndent||!1,this.skipInvalid=E.skipInvalid||!1,this.flowLevel=ME.isNothing(E.flowLevel)?-1:E.flowLevel,this.styleMap=xp(this.schema,E.styles||null),this.sortKeys=E.sortKeys||!1,this.lineWidth=E.lineWidth||80,this.noRefs=E.noRefs||!1,this.noCompatMode=E.noCompatMode||!1,this.condenseFlow=E.condenseFlow||!1,this.quotingType=E.quotingType==='"'?Gr:yp,this.forceQuotes=E.forceQuotes||!1,this.replacer=typeof E.replacer=="function"?E.replacer:null,this.implicitTypes=this.schema.compiledImplicit,this.explicitTypes=this.schema.compiledExplicit,this.tag=null,this.result="",this.duplicates=[],this.usedDuplicates=null}function IN(E,r){for(var n=ME.repeat(" ",r),A=0,S=-1,O="",I,C=E.length;A<C;)S=E.indexOf(`
`,A),S===-1?(I=E.slice(A),A=C):(I=E.slice(A,S+1),A=S+1),I.length&&I!==`
`&&(O+=n),O+=I;return O}function AR(E,r){return`
`+ME.repeat(" ",E.indent*r)}function Wp(E,r){var n,A,S;for(n=0,A=E.implicitTypes.length;n<A;n+=1)if(S=E.implicitTypes[n],S.resolve(r))return!0;return!1}function qt(E){return E===lp||E===_p}function Br(E){return 32<=E&&E<=126||161<=E&&E<=55295&&E!==8232&&E!==8233||57344<=E&&E<=65533&&E!==sR||65536<=E&&E<=1114111}function NN(E){return Br(E)&&E!==sR&&E!==Dp&&E!==dr}function uN(E,r,n){var A=NN(E),S=A&&!qt(E);return(n?A:A&&E!==ZN&&E!==zN&&E!==jN&&E!==Eu&&E!==eu)&&E!==nR&&!(r===Qt&&!S)||NN(r)&&!qt(r)&&E===nR||r===Qt&&S}function Xp(E){return Br(E)&&E!==sR&&!qt(E)&&E!==hp&&E!==Gp&&E!==Qt&&E!==ZN&&E!==zN&&E!==jN&&E!==Eu&&E!==eu&&E!==nR&&E!==pp&&E!==Up&&E!==cp&&E!==Hp&&E!==Fp&&E!==dp&&E!==Mp&&E!==fp&&E!==Pp&&E!==Bp&&E!==mp}function bp(E){return!qt(E)&&E!==Qt}function hr(E,r){var n=E.charCodeAt(r),A;return n>=55296&&n<=56319&&r+1<E.length&&(A=E.charCodeAt(r+1),A>=56320&&A<=57343)?(n-55296)*1024+A-56320+65536:n}function Tu(E){var r=/^\n* /;return r.test(E)}var ru=1,RR=2,tu=3,nu=4,QT=5;function wp(E,r,n,A,S,O,I,C){var s,a=0,c=null,_=!1,h=!1,F=A!==-1,H=-1,G=Xp(hr(E,0))&&bp(hr(E,E.length-1));if(r||I)for(s=0;s<E.length;a>=65536?s+=2:s++){if(a=hr(E,s),!Br(a))return QT;G=G&&uN(a,c,C),c=a}else{for(s=0;s<E.length;a>=65536?s+=2:s++){if(a=hr(E,s),a===dr)_=!0,F&&(h=h||s-H-1>A&&E[H+1]!==" ",H=s);else if(!Br(a))return QT;G=G&&uN(a,c,C),c=a}h=h||F&&s-H-1>A&&E[H+1]!==" "}return!_&&!h?G&&!I&&!S(E)?ru:O===Gr?QT:RR:n>9&&Tu(E)?QT:I?O===Gr?QT:RR:h?nu:tu}function Kp(E,r,n,A,S){E.dump=function(){if(r.length===0)return E.quotingType===Gr?'""':"''";if(!E.noCompatMode&&(Yp.indexOf(r)!==-1||gp.test(r)))return E.quotingType===Gr?'"'+r+'"':"'"+r+"'";var O=E.indent*Math.max(1,n),I=E.lineWidth===-1?-1:Math.max(Math.min(E.lineWidth,40),E.lineWidth-O),C=A||E.flowLevel>-1&&n>=E.flowLevel;function s(a){return Wp(E,a)}switch(wp(r,C,E.indent,I,s,E.quotingType,E.forceQuotes&&!A,S)){case ru:return r;case RR:return"'"+r.replace(/'/g,"''")+"'";case tu:return"|"+sN(r,E.indent)+CN(IN(r,O));case nu:return">"+sN(r,E.indent)+CN(IN(Jp(r,I),O));case QT:return'"'+$p(r)+'"';default:throw new JE("impossible error: invalid scalar style")}}()}function sN(E,r){var n=Tu(E)?String(r):"",A=E[E.length-1]===`
`,S=A&&(E[E.length-2]===`
`||E===`
`),O=S?"+":A?"":"-";return n+O+`
`}function CN(E){return E[E.length-1]===`
`?E.slice(0,-1):E}function Jp(E,r){for(var n=/(\n+)([^\n]*)/g,A=function(){var a=E.indexOf(`
`);return a=a!==-1?a:E.length,n.lastIndex=a,oN(E.slice(0,a),r)}(),S=E[0]===`
`||E[0]===" ",O,I;I=n.exec(E);){var C=I[1],s=I[2];O=s[0]===" ",A+=C+(!S&&!O&&s!==""?`
`:"")+oN(s,r),S=O}return A}function oN(E,r){if(E===""||E[0]===" ")return E;for(var n=/ [^ ]/g,A,S=0,O,I=0,C=0,s="";A=n.exec(E);)C=A.index,C-S>r&&(O=I>S?I:C,s+=`
`+E.slice(S,O),S=O+1),I=C;return s+=`
`,E.length-S>r&&I>S?s+=E.slice(S,I)+`
`+E.slice(I+1):s+=E.slice(S),s.slice(1)}function $p(E){for(var r="",n=0,A,S=0;S<E.length;n>=65536?S+=2:S++)n=hr(E,S),A=XE[n],!A&&Br(n)?(r+=E[S],n>=65536&&(r+=E[S+1])):r+=A||vp(n);return r}function Qp(E,r,n){var A="",S=E.tag,O,I,C;for(O=0,I=n.length;O<I;O+=1)C=n[O],E.replacer&&(C=E.replacer.call(n,String(O),C)),(ye(E,r,C,!1,!1)||typeof C>"u"&&ye(E,r,null,!1,!1))&&(A!==""&&(A+=","+(E.condenseFlow?"":" ")),A+=E.dump);E.tag=S,E.dump="["+A+"]"}function aN(E,r,n,A){var S="",O=E.tag,I,C,s;for(I=0,C=n.length;I<C;I+=1)s=n[I],E.replacer&&(s=E.replacer.call(n,String(I),s)),(ye(E,r+1,s,!0,!0,!1,!0)||typeof s>"u"&&ye(E,r+1,null,!0,!0,!1,!0))&&((!A||S!=="")&&(S+=AR(E,r)),E.dump&&dr===E.dump.charCodeAt(0)?S+="-":S+="- ",S+=E.dump);E.tag=O,E.dump=S||"[]"}function qp(E,r,n){var A="",S=E.tag,O=Object.keys(n),I,C,s,a,c;for(I=0,C=O.length;I<C;I+=1)c="",A!==""&&(c+=", "),E.condenseFlow&&(c+='"'),s=O[I],a=n[s],E.replacer&&(a=E.replacer.call(n,s,a)),ye(E,r,s,!1,!1)&&(E.dump.length>1024&&(c+="? "),c+=E.dump+(E.condenseFlow?'"':"")+":"+(E.condenseFlow?"":" "),ye(E,r,a,!1,!1)&&(c+=E.dump,A+=c));E.tag=S,E.dump="{"+A+"}"}function kp(E,r,n,A){var S="",O=E.tag,I=Object.keys(n),C,s,a,c,_,h;if(E.sortKeys===!0)I.sort();else if(typeof E.sortKeys=="function")I.sort(E.sortKeys);else if(E.sortKeys)throw new JE("sortKeys must be a boolean or a function");for(C=0,s=I.length;C<s;C+=1)h="",(!A||S!=="")&&(h+=AR(E,r)),a=I[C],c=n[a],E.replacer&&(c=E.replacer.call(n,a,c)),ye(E,r+1,a,!0,!0,!0)&&(_=E.tag!==null&&E.tag!=="?"||E.dump&&E.dump.length>1024,_&&(E.dump&&dr===E.dump.charCodeAt(0)?h+="?":h+="? "),h+=E.dump,_&&(h+=AR(E,r)),ye(E,r+1,c,!0,_)&&(E.dump&&dr===E.dump.charCodeAt(0)?h+=":":h+=": ",h+=E.dump,S+=h));E.tag=O,E.dump=S||"{}"}function LN(E,r,n){var A,S,O,I,C,s;for(S=n?E.explicitTypes:E.implicitTypes,O=0,I=S.length;O<I;O+=1)if(C=S[O],(C.instanceOf||C.predicate)&&(!C.instanceOf||typeof r=="object"&&r instanceof C.instanceOf)&&(!C.predicate||C.predicate(r))){if(n?C.multi&&C.representName?E.tag=C.representName(r):E.tag=C.tag:E.tag="?",C.represent){if(s=E.styleMap[C.tag]||C.defaultStyle,qN.call(C.represent)==="[object Function]")A=C.represent(r,s);else if(kN.call(C.represent,s))A=C.represent[s](r,s);else throw new JE("!<"+C.tag+'> tag resolver accepts not "'+s+'" style');E.dump=A}return!0}return!1}function ye(E,r,n,A,S,O,I){E.tag=null,E.dump=n,LN(E,n,!1)||LN(E,n,!0);var C=qN.call(E.dump),s=A,a;A&&(A=E.flowLevel<0||E.flowLevel>r);var c=C==="[object Object]"||C==="[object Array]",_,h;if(c&&(_=E.duplicates.indexOf(n),h=_!==-1),(E.tag!==null&&E.tag!=="?"||h||E.indent!==2&&r>0)&&(S=!1),h&&E.usedDuplicates[_])E.dump="*ref_"+_;else{if(c&&h&&!E.usedDuplicates[_]&&(E.usedDuplicates[_]=!0),C==="[object Object]")A&&Object.keys(E.dump).length!==0?(kp(E,r,E.dump,S),h&&(E.dump="&ref_"+_+E.dump)):(qp(E,r,E.dump),h&&(E.dump="&ref_"+_+" "+E.dump));else if(C==="[object Array]")A&&E.dump.length!==0?(E.noArrayIndent&&!I&&r>0?aN(E,r-1,E.dump,S):aN(E,r,E.dump,S),h&&(E.dump="&ref_"+_+E.dump)):(Qp(E,r,E.dump),h&&(E.dump="&ref_"+_+" "+E.dump));else if(C==="[object String]")E.tag!=="?"&&Kp(E,E.dump,r,O,s);else{if(C==="[object Undefined]")return!1;if(E.skipInvalid)return!1;throw new JE("unacceptable kind of an object to dump "+C)}E.tag!==null&&E.tag!=="?"&&(a=encodeURI(E.tag[0]==="!"?E.tag.slice(1):E.tag).replace(/!/g,"%21"),E.tag[0]==="!"?a="!"+a:a.slice(0,18)==="tag:yaml.org,2002:"?a="!!"+a.slice(18):a="!<"+a+">",E.dump=a+" "+E.dump)}return!0}function Zp(E,r){var n=[],A=[],S,O;for(SR(E,n,A),S=0,O=A.length;S<O;S+=1)r.duplicates.push(n[A[S]]);r.usedDuplicates=new Array(O)}function SR(E,r,n){var A,S,O;if(E!==null&&typeof E=="object")if(S=r.indexOf(E),S!==-1)n.indexOf(S)===-1&&n.push(S);else if(r.push(E),Array.isArray(E))for(S=0,O=E.length;S<O;S+=1)SR(E[S],r,n);else for(A=Object.keys(E),S=0,O=A.length;S<O;S+=1)SR(E[A[S]],r,n)}function zp(E,r){r=r||{};var n=new Vp(r);n.noRefs||Zp(E,n);var A=E;return n.replacer&&(A=n.replacer.call({"":A},"",A)),ye(n,0,A,!0,!0)?n.dump+`
`:""}var jp=zp,EM={dump:jp};function CR(E,r){return function(){throw new Error("Function yaml."+E+" is removed in js-yaml 4. Use yaml."+r+" instead, which is now safe by default.")}}var eM=xE,TM=lN,rM=pN,tM=dN,nM=GN,AM=IR,RM=QN.load,SM=QN.loadAll,iM=EM.dump,OM=JE,IM={binary:gN,float:FN,map:PN,null:MN,pairs:vN,set:yN,timestamp:HN,bool:UN,int:hN,merge:YN,omap:xN,seq:fN,str:cN},NM=CR("safeLoad","load"),uM=CR("safeLoadAll","loadAll"),sM=CR("safeDump","dump"),CM={Type:eM,Schema:TM,FAILSAFE_SCHEMA:rM,JSON_SCHEMA:tM,CORE_SCHEMA:nM,DEFAULT_SCHEMA:AM,load:RM,loadAll:SM,dump:iM,YAMLException:OM,types:IM,safeLoad:NM,safeLoadAll:uM,safeDump:sM},oR=CM;var pR=cE(ou()),PM={info:{title:"YAML to JSON",desc:"Convert YAML to JSON",type:["form","clipboard"],keywords:["markup"],example:`photos: 
  total: 10000 
  total_pages: 910`},run(E){try{return JSON.stringify(oR.load(E),null,2)}catch{throw Error("Invalid YAML")}}},pM={info:{title:"JS Object to JSON",desc:"Convert JavaScript Object to JSON",type:["form","clipboard"],keywords:["markup"],example:"{ name: 'John', age: 30, city: 'New York' }"},run(E){try{return JSON.stringify(pR.default.parse(E),null,2)}catch{throw Error("Invalid JavaScript Object")}}},MM={info:{title:"JSON to JS Object",desc:"Convert JSON to JavaScript Object",type:["form","clipboard"],keywords:["markup"],example:'{"name": "John", "age": 30, "city": "New York"}'},run(E){try{return pR.default.stringify(JSON.parse(E),null,2)}catch{throw Error("Invalid JSON")}}},UM={info:{title:"JSON to YAML",desc:"Convert JSON to YAML",type:["form","clipboard"],keywords:["markup"],example:'{"photos": {"total": 10000,"total_pages": 910}}'},run(E){try{return oR.dump(JSON.parse(E))}catch{throw Error("Invalid JSON")}}},hM={info:{title:"Hex to String",desc:"Convert Hex to UTF8 String",type:["form","clipboard"],keywords:["markup"],example:"72617963617374"},run(E){return Buffer.from(E,"hex").toString("utf8")}},FM={info:{title:"String to Hex",desc:"Convert UTF8 String to Hex",type:["form","clipboard"],keywords:["markup"],example:"raycast"},run(E){return Buffer.from(E,"utf8").toString("hex")}};var UR={};ve(UR,{dateToTimestamp:()=>dM,dateToUtc:()=>GM,timeToSeconds:()=>mM,timestampToDate:()=>BM});var dM={info:{title:"Date to Timestamp",desc:"Convert dates to Unix timestamps",type:["list","form","clipboard"],example:"2001-05-22 11:22:00"},run(E){let r=Date.parse(E);if(isFinite(r))return String(r/1e3);throw Error("Invalid Date format")}},GM={info:{title:"Date to UTC",desc:"Convert dates and timestamps to UTC dates",type:["list","form","clipboard"],example:"2001-05-22 11:22:00"},run(E){let r=Date.parse(E);if(isFinite(r))return new Date(r).toUTCString();throw Error("Invalid Date format")}},BM={info:{title:"Timestamp to Date",desc:"Convert Unix timestamps to date",type:["list","form","clipboard"],example:"1702400391000 or 1702400391"},run(E){let r=Number(E);if(isNaN(+r))throw Error("Invalid Unix Timestamp");return E.length<13&&(r=r*1e3),new Date(r).toString()}};var mM={info:{title:"Time to seconds",desc:"Convert hh:mm:ss to seconds",type:["list","form","clipboard"],example:"11:22:00"},run(E){let[r=0,n=0,A=0]=String(E).split(":"),S=Number(r)*3600+Number(n)*60+Number(A);if(isFinite(S))return String(S);throw Error("Invalid Time Format")}};var VR={};ve(VR,{escapeJson:()=>vM,foramtCss:()=>VM,foramtJson:()=>gM,foramtXml:()=>XM,formatSql:()=>wF,minifyCss:()=>WM,minifyJson:()=>xM,minifySql:()=>KF,minifyXml:()=>bM,unescapeJson:()=>yM});var hR=cE(Yr()),gM={info:{title:"Format JSON",desc:"Format JSON documents",type:["form","clipboard"],keywords:["prettify"],example:'{"photos": {"total": 10000,"total_pages": 910}}'},run(E){try{return hR.default.json(E,2)}catch{throw Error("Invalid JSON")}}},xM={info:{title:"Minify JSON",desc:"Cleans and minifies JSON documents",type:["form","clipboard"],example:'{"photos": {"total": 10000,"total_pages": 910}}'},run(E){try{return hR.default.jsonmin(E)}catch{throw Error("Invalid JSON")}}},vM={info:{title:"Escape JSON",desc:"Escapes JSON",type:["form","clipboard"],example:'{"photos": {"total": 10000,"total_pages": 910}}'},run(E){try{return JSON.stringify(E)}catch{throw Error("Invalid JSON")}}},yM={info:{title:"Unescape JSON",desc:"Unescapes JSON",type:["form","clipboard"],example:'"{\\"photos\\": {\\"total\\": 10000,\\"total_pages\\": 910}}"'},run(E){try{return JSON.parse(E)}catch{throw Error("Invalid JSON")}}};var FR=cE(Yr()),VM={info:{title:"Format CSS",desc:"Format CSS stylesheets",type:["form","clipboard"],keywords:["prettify","stylesheets"],example:".headbg{margin:0 8px /*display:none*/ }"},run(E){try{return FR.default.css(E,2)}catch{throw Error("Invalid CSS")}}},WM={info:{title:"Minify CSS",desc:"Cleans and minifies CSS stylesheets",type:["form","clipboard"],example:".headbg{margin:0 8px /*display:none*/ }"},run(E){try{return FR.default.cssmin(E)}catch{throw Error("Invalid CSS")}}};var dR=cE(Yr()),XM={info:{title:"Format XML/HTML",desc:"Format XML/HTML documents",type:["form","clipboard"],keywords:["prettify"],example:'<?xml version="1.0" encoding="UTF-8"><a><b>bbb</b><f>fff</f></a>'},run(E){try{return dR.default.xml(E)}catch{throw Error("Invalid XML/HTML")}}},bM={info:{title:"Minify XML/HTML",desc:"Cleans and minifies XML/HTML documents",type:["form","clipboard"],example:'<?xml version="1.0" encoding="UTF-8"><a><b>bbb</b><f>fff</f></a>'},run(E){try{return dR.default.xmlmin(E)}catch{throw Error("Invalid XML/HTML")}}};var As=cE(_u(),1),Qu=Object.defineProperty,wM=Object.defineProperties,KM=Object.getOwnPropertyDescriptors,nn=Object.getOwnPropertySymbols,qu=Object.prototype.hasOwnProperty,ku=Object.prototype.propertyIsEnumerable,Du=(E,r,n)=>r in E?Qu(E,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):E[r]=n,vE=(E,r)=>{for(var n in r||(r={}))qu.call(r,n)&&Du(E,n,r[n]);if(nn)for(var n of nn(r))ku.call(r,n)&&Du(E,n,r[n]);return E},QE=(E,r)=>wM(E,KM(r)),JM=(E,r)=>{var n={};for(var A in E)qu.call(E,A)&&r.indexOf(A)<0&&(n[A]=E[A]);if(E!=null&&nn)for(var A of nn(E))r.indexOf(A)<0&&ku.call(E,A)&&(n[A]=E[A]);return n},$M=(E,r)=>{for(var n in r)Qu(E,n,{get:r[n],enumerable:!0})},Zu={};$M(Zu,{bigquery:()=>IU,db2:()=>PU,db2i:()=>mU,hive:()=>XU,mariadb:()=>ZU,mysql:()=>A0,n1ql:()=>C0,plsql:()=>P0,postgresql:()=>H0,redshift:()=>b0,singlestoredb:()=>wh,snowflake:()=>jh,spark:()=>z0,sql:()=>ah,sqlite:()=>Sh,transactsql:()=>Yh,trino:()=>Mh});var B=E=>E.flatMap(QM),QM=E=>rn(kM(E)).map(qM),qM=E=>E.replace(/ +/g," ").trim(),kM=E=>({type:"mandatory_block",items:vR(E,0)[0]}),vR=(E,r,n)=>{let A=[];for(;E[r];){let[S,O]=ZM(E,r);if(A.push(S),r=O,E[r]==="|")r++;else if(E[r]==="}"||E[r]==="]"){if(n!==E[r])throw new Error(`Unbalanced parenthesis in: ${E}`);return r++,[A,r]}else if(r===E.length){if(n)throw new Error(`Unbalanced parenthesis in: ${E}`);return[A,r]}else throw new Error(`Unexpected "${E[r]}"`)}return[A,r]},ZM=(E,r)=>{let n=[];for(;;){let[A,S]=zM(E,r);if(A)n.push(A),r=S;else break}return n.length===1?[n[0],r]:[{type:"concatenation",items:n},r]},zM=(E,r)=>{if(E[r]==="{")return jM(E,r+1);if(E[r]==="[")return EU(E,r+1);{let n="";for(;E[r]&&/[A-Za-z0-9_ ]/.test(E[r]);)n+=E[r],r++;return[n,r]}},jM=(E,r)=>{let[n,A]=vR(E,r,"}");return[{type:"mandatory_block",items:n},A]},EU=(E,r)=>{let[n,A]=vR(E,r,"]");return[{type:"optional_block",items:n},A]},rn=E=>{if(typeof E=="string")return[E];if(E.type==="concatenation")return E.items.map(rn).reduce(eU,[""]);if(E.type==="mandatory_block")return E.items.flatMap(rn);if(E.type==="optional_block")return["",...E.items.flatMap(rn)];throw new Error(`Unknown node type: ${E}`)},eU=(E,r)=>{let n=[];for(let A of E)for(let S of r)n.push(A+S);return n},zu=(E=>(E.QUOTED_IDENTIFIER="QUOTED_IDENTIFIER",E.IDENTIFIER="IDENTIFIER",E.STRING="STRING",E.VARIABLE="VARIABLE",E.RESERVED_DATA_TYPE="RESERVED_DATA_TYPE",E.RESERVED_PARAMETERIZED_DATA_TYPE="RESERVED_PARAMETERIZED_DATA_TYPE",E.RESERVED_KEYWORD="RESERVED_KEYWORD",E.RESERVED_FUNCTION_NAME="RESERVED_FUNCTION_NAME",E.RESERVED_PHRASE="RESERVED_PHRASE",E.RESERVED_SET_OPERATION="RESERVED_SET_OPERATION",E.RESERVED_CLAUSE="RESERVED_CLAUSE",E.RESERVED_SELECT="RESERVED_SELECT",E.RESERVED_JOIN="RESERVED_JOIN",E.ARRAY_IDENTIFIER="ARRAY_IDENTIFIER",E.ARRAY_KEYWORD="ARRAY_KEYWORD",E.CASE="CASE",E.END="END",E.WHEN="WHEN",E.ELSE="ELSE",E.THEN="THEN",E.LIMIT="LIMIT",E.BETWEEN="BETWEEN",E.AND="AND",E.OR="OR",E.XOR="XOR",E.OPERATOR="OPERATOR",E.COMMA="COMMA",E.ASTERISK="ASTERISK",E.DOT="DOT",E.OPEN_PAREN="OPEN_PAREN",E.CLOSE_PAREN="CLOSE_PAREN",E.LINE_COMMENT="LINE_COMMENT",E.BLOCK_COMMENT="BLOCK_COMMENT",E.NUMBER="NUMBER",E.NAMED_PARAMETER="NAMED_PARAMETER",E.QUOTED_PARAMETER="QUOTED_PARAMETER",E.NUMBERED_PARAMETER="NUMBERED_PARAMETER",E.POSITIONAL_PARAMETER="POSITIONAL_PARAMETER",E.CUSTOM_PARAMETER="CUSTOM_PARAMETER",E.DELIMITER="DELIMITER",E.EOF="EOF",E))(zu||{}),ju=E=>({type:"EOF",raw:"\xABEOF\xBB",text:"\xABEOF\xBB",start:E}),jT=ju(1/0),zT=E=>r=>r.type===E.type&&r.text===E.text,fT={ARRAY:zT({text:"ARRAY",type:"RESERVED_DATA_TYPE"}),BY:zT({text:"BY",type:"RESERVED_KEYWORD"}),SET:zT({text:"SET",type:"RESERVED_CLAUSE"}),STRUCT:zT({text:"STRUCT",type:"RESERVED_DATA_TYPE"}),WINDOW:zT({text:"WINDOW",type:"RESERVED_CLAUSE"}),VALUES:zT({text:"VALUES",type:"RESERVED_CLAUSE"})},Es=E=>E==="RESERVED_DATA_TYPE"||E==="RESERVED_KEYWORD"||E==="RESERVED_FUNCTION_NAME"||E==="RESERVED_PHRASE"||E==="RESERVED_CLAUSE"||E==="RESERVED_SELECT"||E==="RESERVED_SET_OPERATION"||E==="RESERVED_JOIN"||E==="ARRAY_KEYWORD"||E==="CASE"||E==="END"||E==="WHEN"||E==="ELSE"||E==="THEN"||E==="LIMIT"||E==="BETWEEN"||E==="AND"||E==="OR"||E==="XOR",TU=E=>E==="AND"||E==="OR"||E==="XOR",rU=["KEYS.NEW_KEYSET","KEYS.ADD_KEY_FROM_RAW_BYTES","AEAD.DECRYPT_BYTES","AEAD.DECRYPT_STRING","AEAD.ENCRYPT","KEYS.KEYSET_CHAIN","KEYS.KEYSET_FROM_JSON","KEYS.KEYSET_TO_JSON","KEYS.ROTATE_KEYSET","KEYS.KEYSET_LENGTH","ANY_VALUE","ARRAY_AGG","AVG","CORR","COUNT","COUNTIF","COVAR_POP","COVAR_SAMP","MAX","MIN","ST_CLUSTERDBSCAN","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","VAR_POP","VAR_SAMP","ANY_VALUE","ARRAY_AGG","ARRAY_CONCAT_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","COUNT","COUNTIF","LOGICAL_AND","LOGICAL_OR","MAX","MIN","STRING_AGG","SUM","APPROX_COUNT_DISTINCT","APPROX_QUANTILES","APPROX_TOP_COUNT","APPROX_TOP_SUM","ARRAY_CONCAT","ARRAY_LENGTH","ARRAY_TO_STRING","GENERATE_ARRAY","GENERATE_DATE_ARRAY","GENERATE_TIMESTAMP_ARRAY","ARRAY_REVERSE","OFFSET","SAFE_OFFSET","ORDINAL","SAFE_ORDINAL","BIT_COUNT","PARSE_BIGNUMERIC","PARSE_NUMERIC","SAFE_CAST","CURRENT_DATE","EXTRACT","DATE","DATE_ADD","DATE_SUB","DATE_DIFF","DATE_TRUNC","DATE_FROM_UNIX_DATE","FORMAT_DATE","LAST_DAY","PARSE_DATE","UNIX_DATE","CURRENT_DATETIME","DATETIME","EXTRACT","DATETIME_ADD","DATETIME_SUB","DATETIME_DIFF","DATETIME_TRUNC","FORMAT_DATETIME","LAST_DAY","PARSE_DATETIME","ERROR","EXTERNAL_QUERY","S2_CELLIDFROMPOINT","S2_COVERINGCELLIDS","ST_ANGLE","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_AZIMUTH","ST_BOUNDARY","ST_BOUNDINGBOX","ST_BUFFER","ST_BUFFERWITHTOLERANCE","ST_CENTROID","ST_CENTROID_AGG","ST_CLOSESTPOINT","ST_CLUSTERDBSCAN","ST_CONTAINS","ST_CONVEXHULL","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DUMP","ST_DWITHIN","ST_ENDPOINT","ST_EQUALS","ST_EXTENT","ST_EXTERIORRING","ST_GEOGFROM","ST_GEOGFROMGEOJSON","ST_GEOGFROMTEXT","ST_GEOGFROMWKB","ST_GEOGPOINT","ST_GEOGPOINTFROMGEOHASH","ST_GEOHASH","ST_GEOMETRYTYPE","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_INTERSECTSBOX","ST_ISCOLLECTION","ST_ISEMPTY","ST_LENGTH","ST_MAKELINE","ST_MAKEPOLYGON","ST_MAKEPOLYGONORIENTED","ST_MAXDISTANCE","ST_NPOINTS","ST_NUMGEOMETRIES","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SIMPLIFY","ST_SNAPTOGRID","ST_STARTPOINT","ST_TOUCHES","ST_UNION","ST_UNION_AGG","ST_WITHIN","ST_X","ST_Y","FARM_FINGERPRINT","MD5","SHA1","SHA256","SHA512","HLL_COUNT.INIT","HLL_COUNT.MERGE","HLL_COUNT.MERGE_PARTIAL","HLL_COUNT.EXTRACT","MAKE_INTERVAL","EXTRACT","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","JSON_EXTRACT","JSON_QUERY","JSON_EXTRACT_SCALAR","JSON_VALUE","JSON_EXTRACT_ARRAY","JSON_QUERY_ARRAY","JSON_EXTRACT_STRING_ARRAY","JSON_VALUE_ARRAY","TO_JSON_STRING","ABS","SIGN","IS_INF","IS_NAN","IEEE_DIVIDE","RAND","SQRT","POW","POWER","EXP","LN","LOG","LOG10","GREATEST","LEAST","DIV","SAFE_DIVIDE","SAFE_MULTIPLY","SAFE_NEGATE","SAFE_ADD","SAFE_SUBTRACT","MOD","ROUND","TRUNC","CEIL","CEILING","FLOOR","COS","COSH","ACOS","ACOSH","SIN","SINH","ASIN","ASINH","TAN","TANH","ATAN","ATANH","ATAN2","RANGE_BUCKET","FIRST_VALUE","LAST_VALUE","NTH_VALUE","LEAD","LAG","PERCENTILE_CONT","PERCENTILE_DISC","NET.IP_FROM_STRING","NET.SAFE_IP_FROM_STRING","NET.IP_TO_STRING","NET.IP_NET_MASK","NET.IP_TRUNC","NET.IPV4_FROM_INT64","NET.IPV4_TO_INT64","NET.HOST","NET.PUBLIC_SUFFIX","NET.REG_DOMAIN","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","NTILE","ROW_NUMBER","SESSION_USER","CORR","COVAR_POP","COVAR_SAMP","STDDEV_POP","STDDEV_SAMP","STDDEV","VAR_POP","VAR_SAMP","VARIANCE","ASCII","BYTE_LENGTH","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CODE_POINTS_TO_BYTES","CODE_POINTS_TO_STRING","CONCAT","CONTAINS_SUBSTR","ENDS_WITH","FORMAT","FROM_BASE32","FROM_BASE64","FROM_HEX","INITCAP","INSTR","LEFT","LENGTH","LPAD","LOWER","LTRIM","NORMALIZE","NORMALIZE_AND_CASEFOLD","OCTET_LENGTH","REGEXP_CONTAINS","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","REPEAT","REVERSE","RIGHT","RPAD","RTRIM","SAFE_CONVERT_BYTES_TO_STRING","SOUNDEX","SPLIT","STARTS_WITH","STRPOS","SUBSTR","SUBSTRING","TO_BASE32","TO_BASE64","TO_CODE_POINTS","TO_HEX","TRANSLATE","TRIM","UNICODE","UPPER","CURRENT_TIME","TIME","EXTRACT","TIME_ADD","TIME_SUB","TIME_DIFF","TIME_TRUNC","FORMAT_TIME","PARSE_TIME","CURRENT_TIMESTAMP","EXTRACT","STRING","TIMESTAMP","TIMESTAMP_ADD","TIMESTAMP_SUB","TIMESTAMP_DIFF","TIMESTAMP_TRUNC","FORMAT_TIMESTAMP","PARSE_TIMESTAMP","TIMESTAMP_SECONDS","TIMESTAMP_MILLIS","TIMESTAMP_MICROS","UNIX_SECONDS","UNIX_MILLIS","UNIX_MICROS","GENERATE_UUID","COALESCE","IF","IFNULL","NULLIF","AVG","BIT_AND","BIT_OR","BIT_XOR","CORR","COUNT","COVAR_POP","COVAR_SAMP","EXACT_COUNT_DISTINCT","FIRST","GROUP_CONCAT","GROUP_CONCAT_UNQUOTED","LAST","MAX","MIN","NEST","NTH","QUANTILES","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","TOP","UNIQUE","VARIANCE","VAR_POP","VAR_SAMP","BIT_COUNT","BOOLEAN","BYTES","CAST","FLOAT","HEX_STRING","INTEGER","STRING","COALESCE","GREATEST","IFNULL","IS_INF","IS_NAN","IS_EXPLICITLY_DEFINED","LEAST","NVL","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE","DATE_ADD","DATEDIFF","DAY","DAYOFWEEK","DAYOFYEAR","FORMAT_UTC_USEC","HOUR","MINUTE","MONTH","MSEC_TO_TIMESTAMP","NOW","PARSE_UTC_USEC","QUARTER","SEC_TO_TIMESTAMP","SECOND","STRFTIME_UTC_USEC","TIME","TIMESTAMP","TIMESTAMP_TO_MSEC","TIMESTAMP_TO_SEC","TIMESTAMP_TO_USEC","USEC_TO_TIMESTAMP","UTC_USEC_TO_DAY","UTC_USEC_TO_HOUR","UTC_USEC_TO_MONTH","UTC_USEC_TO_WEEK","UTC_USEC_TO_YEAR","WEEK","YEAR","FORMAT_IP","PARSE_IP","FORMAT_PACKED_IP","PARSE_PACKED_IP","JSON_EXTRACT","JSON_EXTRACT_SCALAR","ABS","ACOS","ACOSH","ASIN","ASINH","ATAN","ATANH","ATAN2","CEIL","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG2","LOG10","PI","POW","RADIANS","RAND","ROUND","SIN","SINH","SQRT","TAN","TANH","REGEXP_MATCH","REGEXP_EXTRACT","REGEXP_REPLACE","CONCAT","INSTR","LEFT","LENGTH","LOWER","LPAD","LTRIM","REPLACE","RIGHT","RPAD","RTRIM","SPLIT","SUBSTR","UPPER","TABLE_DATE_RANGE","TABLE_DATE_RANGE_STRICT","TABLE_QUERY","HOST","DOMAIN","TLD","AVG","COUNT","MAX","MIN","STDDEV","SUM","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","CURRENT_USER","EVERY","FROM_BASE64","HASH","FARM_FINGERPRINT","IF","POSITION","SHA1","SOME","TO_BASE64","BQ.JOBS.CANCEL","BQ.REFRESH_MATERIALIZED_VIEW","OPTIONS","PIVOT","UNPIVOT"],tU=["ALL","AND","ANY","AS","ASC","ASSERT_ROWS_MODIFIED","AT","BETWEEN","BY","CASE","CAST","COLLATE","CONTAINS","CREATE","CROSS","CUBE","CURRENT","DEFAULT","DEFINE","DESC","DISTINCT","ELSE","END","ENUM","ESCAPE","EXCEPT","EXCLUDE","EXISTS","EXTRACT","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","GROUP","GROUPING","GROUPS","HASH","HAVING","IF","IGNORE","IN","INNER","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LIMIT","LOOKUP","MERGE","NATURAL","NEW","NO","NOT","NULL","NULLS","OF","ON","OR","ORDER","OUTER","OVER","PARTITION","PRECEDING","PROTO","RANGE","RECURSIVE","RESPECT","RIGHT","ROLLUP","ROWS","SELECT","SET","SOME","TABLE","TABLESAMPLE","THEN","TO","TREAT","TRUE","UNBOUNDED","UNION","UNNEST","USING","WHEN","WHERE","WINDOW","WITH","WITHIN","SAFE","LIKE","COPY","CLONE","IN","OUT","INOUT","RETURNS","LANGUAGE","CASCADE","RESTRICT","DETERMINISTIC"],nU=["ARRAY","BOOL","BYTES","DATE","DATETIME","GEOGRAPHY","INTERVAL","INT64","INT","SMALLINT","INTEGER","BIGINT","TINYINT","BYTEINT","NUMERIC","DECIMAL","BIGNUMERIC","BIGDECIMAL","FLOAT64","STRING","STRUCT","TIME","TIMEZONE"],AU=B(["SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]"]),RU=B(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","QUALIFY","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","OMIT RECORD IF","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]","UPDATE SET","CLUSTER BY","FOR SYSTEM_TIME AS OF","WITH CONNECTION","WITH PARTITION COLUMNS","REMOTE WITH CONNECTION"]),lu=B(["CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE [FROM]","DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME TO","ALTER COLUMN [IF EXISTS]","SET DEFAULT COLLATE","SET OPTIONS","DROP NOT NULL","SET DATA TYPE","ALTER SCHEMA [IF EXISTS]","ALTER [MATERIALIZED] VIEW [IF EXISTS]","ALTER BI_CAPACITY","TRUNCATE TABLE","CREATE SCHEMA [IF NOT EXISTS]","DEFAULT COLLATE","CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]","CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]","GRANT TO","FILTER USING","CREATE CAPACITY","AS JSON","CREATE RESERVATION","CREATE ASSIGNMENT","CREATE SEARCH INDEX [IF NOT EXISTS]","DROP SCHEMA [IF EXISTS]","DROP [MATERIALIZED] VIEW [IF EXISTS]","DROP [TABLE] FUNCTION [IF EXISTS]","DROP PROCEDURE [IF EXISTS]","DROP ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","DROP CAPACITY [IF EXISTS]","DROP RESERVATION [IF EXISTS]","DROP ASSIGNMENT [IF EXISTS]","DROP SEARCH INDEX [IF EXISTS]","DROP [IF EXISTS]","GRANT","REVOKE","DECLARE","EXECUTE IMMEDIATE","LOOP","END LOOP","REPEAT","END REPEAT","WHILE","END WHILE","BREAK","LEAVE","CONTINUE","ITERATE","FOR","END FOR","BEGIN","BEGIN TRANSACTION","COMMIT TRANSACTION","ROLLBACK TRANSACTION","RAISE","RETURN","CALL","ASSERT","EXPORT DATA"]),SU=B(["UNION {ALL | DISTINCT}","EXCEPT DISTINCT","INTERSECT DISTINCT"]),iU=B(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),OU=B(["TABLESAMPLE SYSTEM","ANY TYPE","ALL COLUMNS","NOT DETERMINISTIC","{ROWS | RANGE} BETWEEN","IS [NOT] DISTINCT FROM"]),IU={name:"bigquery",tokenizerOptions:{reservedSelect:AU,reservedClauses:[...RU,...lu],reservedSetOperations:SU,reservedJoins:iU,reservedPhrases:OU,reservedKeywords:tU,reservedDataTypes:nU,reservedFunctionNames:rU,extraParens:["[]"],stringTypes:[{quote:'""".."""',prefixes:["R","B","RB","BR"]},{quote:"'''..'''",prefixes:["R","B","RB","BR"]},'""-bs',"''-bs",{quote:'""-raw',prefixes:["R","B","RB","BR"],requirePrefix:!0},{quote:"''-raw",prefixes:["R","B","RB","BR"],requirePrefix:!0}],identTypes:["``"],identChars:{dashes:!0},paramTypes:{positional:!0,named:["@"],quoted:["@"]},variableTypes:[{regex:String.raw`@@\w+`}],lineCommentTypes:["--","#"],operators:["&","|","^","~",">>","<<","||","=>"],postProcess:NU},formatOptions:{onelineClauses:lu}};function NU(E){return uU(sU(E))}function uU(E){let r=jT;return E.map(n=>n.text==="OFFSET"&&r.text==="["?(r=n,QE(vE({},n),{type:"RESERVED_FUNCTION_NAME"})):(r=n,n))}function sU(E){var r;let n=[];for(let A=0;A<E.length;A++){let S=E[A];if((fT.ARRAY(S)||fT.STRUCT(S))&&((r=E[A+1])==null?void 0:r.text)==="<"){let O=CU(E,A+1),I=E.slice(A,O+1);n.push({type:"IDENTIFIER",raw:I.map(cu("raw")).join(""),text:I.map(cu("text")).join(""),start:S.start}),A=O}else n.push(S)}return n}var cu=E=>r=>r.type==="IDENTIFIER"||r.type==="COMMA"?r[E]+" ":r[E];function CU(E,r){let n=0;for(let A=r;A<E.length;A++){let S=E[A];if(S.text==="<"?n++:S.text===">"?n--:S.text===">>"&&(n-=2),n===0)return A}return E.length-1}var oU=["ARRAY_AGG","AVG","CORRELATION","COUNT","COUNT_BIG","COVARIANCE","COVARIANCE_SAMP","CUME_DIST","GROUPING","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_ICPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_SAMP","SUM","VARIANCE","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","AGE","ARRAY_DELETE","ARRAY_FIRST","ARRAY_LAST","ARRAY_NEXT","ARRAY_PRIOR","ASCII","ASCII_STR","ASIN","ATAN","ATAN2","ATANH","BITAND","BITANDNOT","BITOR","BITXOR","BITNOT","BPCHAR","BSON_TO_JSON","BTRIM","CARDINALITY","CEILING","CEIL","CHARACTER_LENGTH","CHR","COALESCE","COLLATION_KEY","COLLATION_KEY_BIT","COMPARE_DECFLOAT","CONCAT","COS","COSH","COT","CURSOR_ROWCOUNT","DATAPARTITIONNUM","DATE_PART","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFWEEK_ISO","DAYOFYEAR","DAYS","DAYS_BETWEEN","DAYS_TO_END_OF_MONTH","DBPARTITIONNUM","DECFLOAT","DECFLOAT_FORMAT","DECODE","DECRYPT_BIN","DECRYPT_CHAR","DEGREES","DEREF","DIFFERENCE","DIGITS","DOUBLE_PRECISION","EMPTY_BLOB","EMPTY_CLOB","EMPTY_DBCLOB","EMPTY_NCLOB","ENCRYPT","EVENT_MON_STATE","EXP","EXTRACT","FIRST_DAY","FLOOR","FROM_UTC_TIMESTAMP","GENERATE_UNIQUE","GETHINT","GREATEST","HASH","HASH4","HASH8","HASHEDVALUE","HEX","HEXTORAW","HOUR","HOURS_BETWEEN","IDENTITY_VAL_LOCAL","IFNULL","INITCAP","INSERT","INSTR","INSTR2","INSTR4","INSTRB","INTNAND","INTNOR","INTNXOR","INTNNOT","ISNULL","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_VALUE","JULIAN_DAY","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LENGTH2","LENGTH4","LENGTHB","LN","LOCATE","LOCATE_IN_STRING","LOG10","LONG_VARCHAR","LONG_VARGRAPHIC","LOWER","LPAD","LTRIM","MAX","MAX_CARDINALITY","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MINUTES_BETWEEN","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MULTIPLY_ALT","NEXT_DAY","NEXT_MONTH","NEXT_QUARTER","NEXT_WEEK","NEXT_YEAR","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARAMETER","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","QUOTE_IDENT","QUOTE_LITERAL","RADIANS","RAISE_ERROR","RAND","RANDOM","RAWTOHEX","REC2XML","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_MATCH_COUNT","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RID_BIT","RIGHT","ROUND","ROUND_TIMESTAMP","RPAD","RTRIM","SECLABEL","SECLABEL_BY_NAME","SECLABEL_TO_CHAR","SECOND","SECONDS_BETWEEN","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTR2","SUBSTR4","SUBSTRB","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","THIS_MONTH","THIS_QUARTER","THIS_WEEK","THIS_YEAR","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF","TIMEZONE","TO_CHAR","TO_CLOB","TO_DATE","TO_HEX","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_UTC_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM","TRIM_ARRAY","TRUNC_TIMESTAMP","TRUNCATE","TRUNC","TYPE_ID","TYPE_NAME","TYPE_SCHEMA","UCASE","UNICODE_STR","UPPER","VALUE","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT","VARCHAR_FORMAT_BIT","VERIFY_GROUP_FOR_USER","VERIFY_ROLE_FOR_USER","VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER","WEEK","WEEK_ISO","WEEKS_BETWEEN","WIDTH_BUCKET","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLQUERY","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XMLXSROBJECTID","XSLTRANSFORM","YEAR","YEARS_BETWEEN","YMD_BETWEEN","BASE_TABLE","JSON_TABLE","UNNEST","XMLTABLE","RANK","DENSE_RANK","NTILE","LAG","LEAD","ROW_NUMBER","FIRST_VALUE","LAST_VALUE","NTH_VALUE","RATIO_TO_REPORT","CAST"],aU=["ACTIVATE","ADD","AFTER","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","AS","ASENSITIVE","ASSOCIATE","ASUTIME","AT","ATTRIBUTES","AUDIT","AUTHORIZATION","AUX","AUXILIARY","BEFORE","BEGIN","BETWEEN","BINARY","BUFFERPOOL","BY","CACHE","CALL","CALLED","CAPTURE","CARDINALITY","CASCADED","CASE","CAST","CHECK","CLONE","CLOSE","CLUSTER","COLLECTION","COLLID","COLUMN","COMMENT","COMMIT","CONCAT","CONDITION","CONNECT","CONNECTION","CONSTRAINT","CONTAINS","CONTINUE","COUNT","COUNT_BIG","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_LC_CTYPE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFINITION","DELETE","DENSERANK","DENSE_RANK","DESCRIBE","DESCRIPTOR","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DSSIZE","DYNAMIC","EACH","EDITPROC","ELSE","ELSEIF","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ERASE","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXPLAIN","EXTENDED","EXTERNAL","EXTRACT","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST1","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GRAPHIC","GROUP","HANDLER","HASH","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IMMEDIATE","IMPORT","IN","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDICATOR","INDICATORS","INF","INFINITY","INHERIT","INNER","INOUT","INSENSITIVE","INSERT","INTEGRITY","INTERSECT","INTO","IS","ISNULL","ISOBID","ISOLATION","ITERATE","JAR","JAVA","JOIN","KEEP","KEY","LABEL","LANGUAGE","LAST3","LATERAL","LC_CTYPE","LEAVE","LEFT","LIKE","LIMIT","LINKTYPE","LOCAL","LOCALDATE","LOCALE","LOCALTIME","LOCALTIMESTAMP","LOCATOR","LOCATORS","LOCK","LOCKMAX","LOCKSIZE","LOOP","MAINTAINED","MATERIALIZED","MAXVALUE","MICROSECOND","MICROSECONDS","MINUTE","MINUTES","MINVALUE","MODE","MODIFIES","MONTH","MONTHS","NAN","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT2","NOTNULL","NULL","NULLS","NUMPARTS","OBID","OF","OFF","OFFSET","OLD","OLD_TABLE","ON","OPEN","OPTIMIZATION","OPTIMIZE","OPTION","OR","ORDER","OUT","OUTER","OVER","OVERRIDING","PACKAGE","PADDED","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSWORD","PATH","PERCENT","PIECESIZE","PLAN","POSITION","PRECISION","PREPARE","PREVVAL","PRIMARY","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PSID","PUBLIC","QUERY","QUERYNO","RANGE","RANK","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESTRICT","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROUND_CEILING","ROUND_DOWN","ROUND_FLOOR","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_UP","ROUND_UP","ROUTINE","ROW","ROWNUMBER","ROWS","ROWSET","ROW_NUMBER","RRN","RUN","SAVEPOINT","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURITY","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","STACKED","STANDARD","START","STARTING","STATEMENT","STATIC","STATMENT","STAY","STOGROUP","STORES","STYLE","SUBSTRING","SUMMARY","SYNONYM","SYSFUN","SYSIBM","SYSPROC","SYSTEM","SYSTEM_USER","TABLE","TABLESPACE","THEN","TO","TRANSACTION","TRIGGER","TRIM","TRUNCATE","TYPE","UNDO","UNION","UNIQUE","UNTIL","UPDATE","USAGE","USER","USING","VALIDPROC","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VIEW","VOLATILE","VOLUMES","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHOUT","WLM","WRITE","XMLELEMENT","XMLEXISTS","XMLNAMESPACES","YEAR","YEARS"],LU=["ARRAY","BIGINT","BINARY","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATE","DATETIME","DBCLOB","DEC","DECIMAL","DOUBLE","DOUBLE PRECISION","FLOAT","FLOAT4","FLOAT8","GRAPHIC","INT","INT2","INT4","INT8","INTEGER","INTERVAL","LONG VARCHAR","LONG VARGRAPHIC","NCHAR","NCHR","NCLOB","NVARCHAR","NUMERIC","SMALLINT","REAL","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC"],_U=B(["SELECT [ALL | DISTINCT]"]),DU=B(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH NEXT","FOR UPDATE [OF]","FOR {READ | FETCH} ONLY","FOR {RR | CS | UR | RS} [USE AND KEEP {SHARE | UPDATE | EXCLUSIVE} LOCKS]","WAIT FOR OUTCOME","SKIP LOCKED DATA","INTO","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT"]),fu=B(["CREATE [GLOBAL TEMPORARY | EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] VIEW","UPDATE","WHERE CURRENT OF","WITH {RR | RS | CS | UR}","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME COLUMN","ALTER [COLUMN]","SET DATA TYPE","SET NOT NULL","DROP {DEFAULT | GENERATED | NOT NULL}","TRUNCATE [TABLE]","ALLOCATE","ALTER AUDIT POLICY","ALTER BUFFERPOOL","ALTER DATABASE PARTITION GROUP","ALTER DATABASE","ALTER EVENT MONITOR","ALTER FUNCTION","ALTER HISTOGRAM TEMPLATE","ALTER INDEX","ALTER MASK","ALTER METHOD","ALTER MODULE","ALTER NICKNAME","ALTER PACKAGE","ALTER PERMISSION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SECURITY LABEL COMPONENT","ALTER SECURITY POLICY","ALTER SEQUENCE","ALTER SERVER","ALTER SERVICE CLASS","ALTER STOGROUP","ALTER TABLESPACE","ALTER THRESHOLD","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER TYPE","ALTER USAGE LIST","ALTER USER MAPPING","ALTER VIEW","ALTER WORK ACTION SET","ALTER WORK CLASS SET","ALTER WORKLOAD","ALTER WRAPPER","ALTER XSROBJECT","ALTER STOGROUP","ALTER TABLESPACE","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER VIEW","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","AUDIT","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON","COMMIT [WORK]","CONNECT","CREATE [OR REPLACE] [PUBLIC] ALIAS","CREATE AUDIT POLICY","CREATE BUFFERPOOL","CREATE DATABASE PARTITION GROUP","CREATE EVENT MONITOR","CREATE [OR REPLACE] FUNCTION","CREATE FUNCTION MAPPING","CREATE HISTOGRAM TEMPLATE","CREATE [UNIQUE] INDEX","CREATE INDEX EXTENSION","CREATE [OR REPLACE] MASK","CREATE [SPECIFIC] METHOD","CREATE [OR REPLACE] MODULE","CREATE [OR REPLACE] NICKNAME","CREATE [OR REPLACE] PERMISSION","CREATE [OR REPLACE] PROCEDURE","CREATE ROLE","CREATE SCHEMA","CREATE SECURITY LABEL [COMPONENT]","CREATE SECURITY POLICY","CREATE [OR REPLACE] SEQUENCE","CREATE SERVICE CLASS","CREATE SERVER","CREATE STOGROUP","CREATE SYNONYM","CREATE [LARGE | REGULAR | {SYSTEM | USER} TEMPORARY] TABLESPACE","CREATE THRESHOLD","CREATE {TRANSFORM | TRANSFORMS} FOR","CREATE [OR REPLACE] TRIGGER","CREATE TRUSTED CONTEXT","CREATE [OR REPLACE] TYPE","CREATE TYPE MAPPING","CREATE USAGE LIST","CREATE USER MAPPING FOR","CREATE [OR REPLACE] VARIABLE","CREATE WORK ACTION SET","CREATE WORK CLASS SET","CREATE WORKLOAD","CREATE WRAPPER","DECLARE","DECLARE GLOBAL TEMPORARY TABLE","DESCRIBE [INPUT | OUTPUT]","DISCONNECT","DROP [PUBLIC] ALIAS","DROP AUDIT POLICY","DROP BUFFERPOOL","DROP DATABASE PARTITION GROUP","DROP EVENT MONITOR","DROP [SPECIFIC] FUNCTION","DROP FUNCTION MAPPING","DROP HISTOGRAM TEMPLATE","DROP INDEX [EXTENSION]","DROP MASK","DROP [SPECIFIC] METHOD","DROP MODULE","DROP NICKNAME","DROP PACKAGE","DROP PERMISSION","DROP [SPECIFIC] PROCEDURE","DROP ROLE","DROP SCHEMA","DROP SECURITY LABEL [COMPONENT]","DROP SECURITY POLICY","DROP SEQUENCE","DROP SERVER","DROP SERVICE CLASS","DROP STOGROUP","DROP TABLE HIERARCHY","DROP {TABLESPACE | TABLESPACES}","DROP {TRANSFORM | TRANSFORMS}","DROP THRESHOLD","DROP TRIGGER","DROP TRUSTED CONTEXT","DROP TYPE [MAPPING]","DROP USAGE LIST","DROP USER MAPPING FOR","DROP VARIABLE","DROP VIEW [HIERARCHY]","DROP WORK {ACTION | CLASS} SET","DROP WORKLOAD","DROP WRAPPER","DROP XSROBJECT","END DECLARE SECTION","EXECUTE [IMMEDIATE]","EXPLAIN {PLAN [SECTION] | ALL}","FETCH [FROM]","FLUSH {BUFFERPOOL | BUFFERPOOLS} ALL","FLUSH EVENT MONITOR","FLUSH FEDERATED CACHE","FLUSH OPTIMIZATION PROFILE CACHE","FLUSH PACKAGE CACHE [DYNAMIC]","FLUSH AUTHENTICATION CACHE [FOR ALL]","FREE LOCATOR","GET DIAGNOSTICS","GOTO","GRANT","INCLUDE","ITERATE","LEAVE","LOCK TABLE","LOOP","OPEN","PIPE","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX | STOGROUP | TABLESPACE]","REPEAT","RESIGNAL","RETURN","REVOKE","ROLLBACK [WORK] [TO SAVEPOINT]","SAVEPOINT","SET COMPILATION ENVIRONMENT","SET CONNECTION","SET CURRENT","SET ENCRYPTION PASSWORD","SET EVENT MONITOR STATE","SET INTEGRITY","SET PASSTHRU","SET PATH","SET ROLE","SET SCHEMA","SET SERVER OPTION","SET {SESSION AUTHORIZATION | SESSION_USER}","SET USAGE LIST","SIGNAL","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}","WHILE"]),lU=B(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),cU=B(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),fU=B(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),PU={name:"db2",tokenizerOptions:{reservedSelect:_U,reservedClauses:[...DU,...fu],reservedSetOperations:lU,reservedJoins:cU,reservedPhrases:fU,reservedKeywords:aU,reservedDataTypes:LU,reservedFunctionNames:oU,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N","U&"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","%","|","&","^","~","\xAC=","\xAC>","\xAC<","!>","!<","^=","^>","^<","||","->","=>"]},formatOptions:{onelineClauses:fu}},pU=["ARRAY_AGG","AVG","CORR","CORRELATION","COUNT","COUNT_BIG","COVAR_POP","COVARIANCE","COVAR","COVAR_SAMP","COVARIANCE_SAMP","EVERY","GROUPING","JSON_ARRAYAGG","JSON_OBJECTAGG","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","SOME","STDDEV_POP","STDDEV","STDDEV_SAMP","SUM","VAR_POP","VARIANCE","VAR","VAR_SAMP","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","ANTILOG","ARRAY_MAX_CARDINALITY","ARRAY_TRIM","ASCII","ASIN","ATAN","ATAN2","ATANH","BASE64_DECODE","BASE64_ENCODE","BIT_LENGTH","BITAND","BITANDNOT","BITNOT","BITOR","BITXOR","BSON_TO_JSON","CARDINALITY","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","COALESCE","COMPARE_DECFLOAT","CONCAT","CONTAINS","COS","COSH","COT","CURDATE","CURTIME","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK_ISO","DAYOFWEEK","DAYOFYEAR","DAYS","DBPARTITIONNAME","DBPARTITIONNUM","DECFLOAT_FORMAT","DECFLOAT_SORTKEY","DECRYPT_BINARY","DECRYPT_BIT","DECRYPT_CHAR","DECRYPT_DB","DEGREES","DIFFERENCE","DIGITS","DLCOMMENT","DLLINKTYPE","DLURLCOMPLETE","DLURLPATH","DLURLPATHONLY","DLURLSCHEME","DLURLSERVER","DLVALUE","DOUBLE_PRECISION","DOUBLE","ENCRPYT","ENCRYPT_AES","ENCRYPT_AES256","ENCRYPT_RC2","ENCRYPT_TDES","EXP","EXTRACT","FIRST_DAY","FLOOR","GENERATE_UNIQUE","GET_BLOB_FROM_FILE","GET_CLOB_FROM_FILE","GET_DBCLOB_FROM_FILE","GET_XML_FILE","GETHINT","GREATEST","HASH_MD5","HASH_ROW","HASH_SHA1","HASH_SHA256","HASH_SHA512","HASH_VALUES","HASHED_VALUE","HEX","HEXTORAW","HOUR","HTML_ENTITY_DECODE","HTML_ENTITY_ENCODE","HTTP_DELETE_BLOB","HTTP_DELETE","HTTP_GET_BLOB","HTTP_GET","HTTP_PATCH_BLOB","HTTP_PATCH","HTTP_POST_BLOB","HTTP_POST","HTTP_PUT_BLOB","HTTP_PUT","IDENTITY_VAL_LOCAL","IFNULL","INSERT","INSTR","INTERPRET","ISFALSE","ISNOTFALSE","ISNOTTRUE","ISTRUE","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_UPDATE","JSON_VALUE","JULIAN_DAY","LAND","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LN","LNOT","LOCATE_IN_STRING","LOCATE","LOG10","LOR","LOWER","LPAD","LTRIM","MAX_CARDINALITY","MAX","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MQREAD","MQREADCLOB","MQRECEIVE","MQRECEIVECLOB","MQSEND","MULTIPLY_ALT","NEXT_DAY","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","OCTET_LENGTH","OVERLAY","PI","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","RADIANS","RAISE_ERROR","RANDOM","RAND","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RIGHT","ROUND_TIMESTAMP","ROUND","RPAD","RRN","RTRIM","SCORE","SECOND","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF_BIG","TIMESTAMPDIFF","TO_CHAR","TO_CLOB","TO_DATE","TO_NUMBER","TO_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM_ARRAY","TRIM","TRUNC_TIMESTAMP","TRUNC","TRUNCATE","UCASE","UPPER","URL_DECODE","URL_ENCODE","VALUE","VARBINARY_FORMAT","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT_BINARY","VARCHAR_FORMAT","VERIFY_GROUP_FOR_USER","WEEK_ISO","WEEK","WRAP","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XOR","XSLTRANSFORM","YEAR","ZONED","BASE_TABLE","HTTP_DELETE_BLOB_VERBOSE","HTTP_DELETE_VERBOSE","HTTP_GET_BLOB_VERBOSE","HTTP_GET_VERBOSE","HTTP_PATCH_BLOB_VERBOSE","HTTP_PATCH_VERBOSE","HTTP_POST_BLOB_VERBOSE","HTTP_POST_VERBOSE","HTTP_PUT_BLOB_VERBOSE","HTTP_PUT_VERBOSE","JSON_TABLE","MQREADALL","MQREADALLCLOB","MQRECEIVEALL","MQRECEIVEALLCLOB","XMLTABLE","UNPACK","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","RATIO_TO_REPORT","ROW_NUMBER","CAST"],MU=["ABSENT","ACCORDING","ACCTNG","ACTION","ACTIVATE","ADD","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","APPEND","APPLNAME","ARRAY","ARRAY_AGG","ARRAY_TRIM","AS","ASC","ASENSITIVE","ASSOCIATE","ATOMIC","ATTACH","ATTRIBUTES","AUTHORIZATION","AUTONOMOUS","BEFORE","BEGIN","BETWEEN","BIND","BSON","BUFFERPOOL","BY","CACHE","CALL","CALLED","CARDINALITY","CASE","CAST","CHECK","CL","CLOSE","CLUSTER","COLLECT","COLLECTION","COLUMN","COMMENT","COMMIT","COMPACT","COMPARISONS","COMPRESS","CONCAT","CONCURRENT","CONDITION","CONNECT","CONNECT_BY_ROOT","CONNECTION","CONSTANT","CONSTRAINT","CONTAINS","CONTENT","CONTINUE","COPY","COUNT","COUNT_BIG","CREATE","CREATEIN","CROSS","CUBE","CUME_DIST","CURRENT","CURRENT_DATE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEACTIVATE","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFER","DEFINE","DEFINITION","DELETE","DELETING","DENSE_RANK","DENSERANK","DESC","DESCRIBE","DESCRIPTOR","DETACH","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DYNAMIC","EACH","ELSE","ELSEIF","EMPTY","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ENFORCED","ERROR","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTEND","EXTERNAL","EXTRACT","FALSE","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST_VALUE","FOR","FOREIGN","FORMAT","FREE","FREEPAGE","FROM","FULL","FUNCTION","GBPCACHE","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GROUP","HANDLER","HASH","HASH_ROW","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IGNORE","IMMEDIATE","IMPLICITLY","IN","INCLUDE","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDEXBP","INDICATOR","INF","INFINITY","INHERIT","INLINE","INNER","INOUT","INSENSITIVE","INSERT","INSERTING","INTEGRITY","INTERPRET","INTERSECT","INTO","IS","ISNULL","ISOLATION","ITERATE","JAVA","JOIN","JSON","JSON_ARRAY","JSON_ARRAYAGG","JSON_EXISTS","JSON_OBJECT","JSON_OBJECTAGG","JSON_QUERY","JSON_TABLE","JSON_VALUE","KEEP","KEY","KEYS","LABEL","LAG","LANGUAGE","LAST_VALUE","LATERAL","LEAD","LEAVE","LEFT","LEVEL2","LIKE","LIMIT","LINKTYPE","LISTAGG","LOCAL","LOCALDATE","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCATOR","LOCK","LOCKSIZE","LOG","LOGGED","LOOP","MAINTAINED","MASK","MATCHED","MATERIALIZED","MAXVALUE","MERGE","MICROSECOND","MICROSECONDS","MINPCTUSED","MINUTE","MINUTES","MINVALUE","MIRROR","MIXED","MODE","MODIFIES","MONTH","MONTHS","NAMESPACE","NAN","NATIONAL","NCHAR","NCLOB","NESTED","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT","NOTNULL","NTH_VALUE","NTILE","NULL","NULLS","NVARCHAR","OBID","OBJECT","OF","OFF","OFFSET","OLD","OLD_TABLE","OMIT","ON","ONLY","OPEN","OPTIMIZE","OPTION","OR","ORDER","ORDINALITY","ORGANIZE","OUT","OUTER","OVER","OVERLAY","OVERRIDING","PACKAGE","PADDED","PAGE","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSING","PASSWORD","PATH","PCTFREE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PERIOD","PERMISSION","PIECESIZE","PIPE","PLAN","POSITION","PREPARE","PREVVAL","PRIMARY","PRIOR","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PROGRAMID","QUERY","RANGE","RANK","RATIO_TO_REPORT","RCDFMT","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","REGEXP_LIKE","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNING","RETURNS","REVOKE","RID","RIGHT","ROLLBACK","ROLLUP","ROUTINE","ROW","ROW_NUMBER","ROWNUMBER","ROWS","RRN","RUN","SAVEPOINT","SBCS","SCALAR","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURED","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SKIP","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","SQLIND_DEFAULT","SQLIND_UNASSIGNED","STACKED","START","STARTING","STATEMENT","STATIC","STOGROUP","SUBSTRING","SUMMARY","SYNONYM","SYSTEM_TIME","SYSTEM_USER","TABLE","TABLESPACE","TABLESPACES","TAG","THEN","THREADSAFE","TO","TRANSACTION","TRANSFER","TRIGGER","TRIM","TRIM_ARRAY","TRUE","TRUNCATE","TRY_CAST","TYPE","UNDO","UNION","UNIQUE","UNIT","UNKNOWN","UNNEST","UNTIL","UPDATE","UPDATING","URI","USAGE","USE","USER","USERID","USING","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VERSIONING","VIEW","VOLATILE","WAIT","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHIN","WITHOUT","WRAPPED","WRAPPER","WRITE","WRKSTNNAME","XMLAGG","XMLATTRIBUTES","XMLCAST","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLGROUP","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTABLE","XMLTEXT","XMLVALIDATE","XSLTRANSFORM","XSROBJECT","YEAR","YEARS","YES","ZONE"],UU=["ARRAY","BIGINT","BINARY","BIT","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATA","DATALINK","DATE","DBCLOB","DECFLOAT","DECIMAL","DEC","DOUBLE","DOUBLE PRECISION","FLOAT","GRAPHIC","INT","INTEGER","LONG","NUMERIC","REAL","ROWID","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC","XML"],hU=B(["SELECT [ALL | DISTINCT]"]),FU=B(["WITH [RECURSIVE]","INTO","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","FOR READ ONLY","OPTIMIZE FOR","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","DELETE","INSERT","FOR SYSTEM NAME"]),Pu=B(["CREATE [OR REPLACE] TABLE","CREATE [OR REPLACE] [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","WITH {NC | RR | RS | CS | UR}","DELETE FROM","DROP TABLE","ALTER TABLE","ADD [COLUMN]","ALTER [COLUMN]","DROP [COLUMN]","SET DATA TYPE","SET {GENERATED ALWAYS | GENERATED BY DEFAULT}","SET NOT NULL","SET {NOT HIDDEN | IMPLICITLY HIDDEN}","SET FIELDPROC","DROP {DEFAULT | NOT NULL | GENERATED | IDENTITY | ROW CHANGE TIMESTAMP | FIELDPROC}","TRUNCATE [TABLE]","SET [CURRENT] SCHEMA","SET CURRENT_SCHEMA","ALLOCATE CURSOR","ALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL] SQL","ALTER [SPECIFIC] {FUNCTION | PROCEDURE}","ALTER {MASK | PERMISSION | SEQUENCE | TRIGGER}","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PARAMETER | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","COMMENT ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON PARAMETER SPECIFIC {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON [TABLE FUNCTION] RETURN COLUMN","COMMENT ON [TABLE FUNCTION] RETURN COLUMN SPECIFIC [PROCEDURE | ROUTINE]","COMMIT [WORK] [HOLD]","CONNECT [TO | RESET] USER","CREATE [OR REPLACE] {ALIAS | FUNCTION | MASK | PERMISSION | PROCEDURE | SEQUENCE | TRIGGER | VARIABLE}","CREATE [ENCODED VECTOR] INDEX","CREATE UNIQUE [WHERE NOT NULL] INDEX","CREATE SCHEMA","CREATE TYPE","DEALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL]","DECLARE CURSOR","DECLARE GLOBAL TEMPORARY TABLE","DECLARE","DESCRIBE CURSOR","DESCRIBE INPUT","DESCRIBE [OUTPUT]","DESCRIBE {PROCEDURE | ROUTINE}","DESCRIBE TABLE","DISCONNECT ALL [SQL]","DISCONNECT [CURRENT]","DROP {ALIAS | INDEX | MASK | PACKAGE | PERMISSION | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT} [IF EXISTS]","DROP [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE} [IF EXISTS]","END DECLARE SECTION","EXECUTE [IMMEDIATE]","FREE LOCATOR","GET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","GET [CURRENT | STACKED] DIAGNOSTICS","GRANT {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","HOLD LOCATOR","INCLUDE","LABEL ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","LABEL ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","LOCK TABLE","OPEN","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX] TO","REVOKE {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","ROLLBACK [WORK] [HOLD | TO SAVEPOINT]","SAVEPOINT","SET CONNECTION","SET CURRENT {DEBUG MODE | DECFLOAT ROUNDING MODE | DEGREE | IMPLICIT XMLPARSE OPTION | TEMPORAL SYSTEM_TIME}","SET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","SET ENCRYPTION PASSWORD","SET OPTION","SET {[CURRENT [FUNCTION]] PATH | CURRENT_PATH}","SET RESULT SETS [WITH RETURN [TO CALLER | TO CLIENT]]","SET SESSION AUTHORIZATION","SET SESSION_USER","SET TRANSACTION","SIGNAL SQLSTATE [VALUE]","TAG","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}"]),dU=B(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),GU=B(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT | RIGHT] EXCEPTION JOIN","{INNER | CROSS} JOIN"]),BU=B(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),mU={name:"db2i",tokenizerOptions:{reservedSelect:hU,reservedClauses:[...FU,...Pu],reservedSetOperations:dU,reservedJoins:GU,reservedPhrases:BU,reservedKeywords:MU,reservedDataTypes:UU,reservedFunctionNames:pU,nestedBlockComments:!0,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","\xAC=","\xAC>","\xAC<","!>","!<","||","=>"]},formatOptions:{onelineClauses:Pu}},HU=["ABS","ACOS","ASIN","ATAN","BIN","BROUND","CBRT","CEIL","CEILING","CONV","COS","DEGREES","EXP","FACTORIAL","FLOOR","GREATEST","HEX","LEAST","LN","LOG","LOG10","LOG2","NEGATIVE","PI","PMOD","POSITIVE","POW","POWER","RADIANS","RAND","ROUND","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIN","SQRT","TAN","UNHEX","WIDTH_BUCKET","ARRAY_CONTAINS","MAP_KEYS","MAP_VALUES","SIZE","SORT_ARRAY","BINARY","CAST","ADD_MONTHS","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","QUARTER","SECOND","TIMESTAMP","TO_DATE","TO_UTC_TIMESTAMP","TRUNC","UNIX_TIMESTAMP","WEEKOFYEAR","YEAR","ASSERT_TRUE","COALESCE","IF","ISNOTNULL","ISNULL","NULLIF","NVL","ASCII","BASE64","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONTEXT_NGRAMS","DECODE","ELT","ENCODE","FIELD","FIND_IN_SET","FORMAT_NUMBER","GET_JSON_OBJECT","IN_FILE","INITCAP","INSTR","LCASE","LENGTH","LEVENSHTEIN","LOCATE","LOWER","LPAD","LTRIM","NGRAMS","OCTET_LENGTH","PARSE_URL","PRINTF","QUOTE","REGEXP_EXTRACT","REGEXP_REPLACE","REPEAT","REVERSE","RPAD","RTRIM","SENTENCES","SOUNDEX","SPACE","SPLIT","STR_TO_MAP","SUBSTR","SUBSTRING","TRANSLATE","TRIM","UCASE","UNBASE64","UPPER","MASK","MASK_FIRST_N","MASK_HASH","MASK_LAST_N","MASK_SHOW_FIRST_N","MASK_SHOW_LAST_N","AES_DECRYPT","AES_ENCRYPT","CRC32","CURRENT_DATABASE","CURRENT_USER","HASH","JAVA_METHOD","LOGGED_IN_USER","MD5","REFLECT","SHA","SHA1","SHA2","SURROGATE_KEY","VERSION","AVG","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COVAR_POP","COVAR_SAMP","HISTOGRAM_NUMERIC","MAX","MIN","NTILE","PERCENTILE","PERCENTILE_APPROX","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","EXPLODE","INLINE","JSON_TUPLE","PARSE_URL_TUPLE","POSEXPLODE","STACK","LEAD","LAG","FIRST_VALUE","LAST_VALUE","RANK","ROW_NUMBER","DENSE_RANK","CUME_DIST","PERCENT_RANK","NTILE"],YU=["ADD","ADMIN","AFTER","ANALYZE","ARCHIVE","ASC","BEFORE","BUCKET","BUCKETS","CASCADE","CHANGE","CLUSTER","CLUSTERED","CLUSTERSTATUS","COLLECTION","COLUMNS","COMMENT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONTINUE","DATA","DATABASES","DATETIME","DAY","DBPROPERTIES","DEFERRED","DEFINED","DELIMITED","DEPENDENCY","DESC","DIRECTORIES","DIRECTORY","DISABLE","DISTRIBUTE","ELEM_TYPE","ENABLE","ESCAPED","EXCLUSIVE","EXPLAIN","EXPORT","FIELDS","FILE","FILEFORMAT","FIRST","FORMAT","FORMATTED","FUNCTIONS","HOLD_DDLTIME","HOUR","IDXPROPERTIES","IGNORE","INDEX","INDEXES","INPATH","INPUTDRIVER","INPUTFORMAT","ITEMS","JAR","KEYS","KEY_TYPE","LIMIT","LINES","LOAD","LOCATION","LOCK","LOCKS","LOGICAL","LONG","MAPJOIN","MATERIALIZED","METADATA","MINUS","MINUTE","MONTH","MSCK","NOSCAN","NO_DROP","OFFLINE","OPTION","OUTPUTDRIVER","OUTPUTFORMAT","OVERWRITE","OWNER","PARTITIONED","PARTITIONS","PLUS","PRETTY","PRINCIPALS","PROTECTION","PURGE","READ","READONLY","REBUILD","RECORDREADER","RECORDWRITER","RELOAD","RENAME","REPAIR","REPLACE","REPLICATION","RESTRICT","REWRITE","ROLE","ROLES","SCHEMA","SCHEMAS","SECOND","SEMI","SERDE","SERDEPROPERTIES","SERVER","SETS","SHARED","SHOW","SHOW_DATABASE","SKEWED","SORT","SORTED","SSL","STATISTICS","STORED","STREAMTABLE","STRING","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","TINYINT","TOUCH","TRANSACTIONS","UNARCHIVE","UNDO","UNIONTYPE","UNLOCK","UNSET","UNSIGNED","URI","USE","UTC","UTCTIMESTAMP","VALUE_TYPE","VIEW","WHILE","YEAR","AUTOCOMMIT","ISOLATION","LEVEL","OFFSET","SNAPSHOT","TRANSACTION","WORK","WRITE","ABORT","KEY","LAST","NORELY","NOVALIDATE","NULLS","RELY","VALIDATE","DETAIL","DOW","EXPRESSION","OPERATOR","QUARTER","SUMMARY","VECTORIZATION","WEEK","YEARS","MONTHS","WEEKS","DAYS","HOURS","MINUTES","SECONDS","TIMESTAMPTZ","ZONE","ALL","ALTER","AND","AS","AUTHORIZATION","BETWEEN","BOTH","BY","CASE","CAST","COLUMN","CONF","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIMESTAMP","CURSOR","DATABASE","DELETE","DESCRIBE","DISTINCT","DROP","ELSE","END","EXCHANGE","EXISTS","EXTENDED","EXTERNAL","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","FUNCTION","GRANT","GROUP","GROUPING","HAVING","IF","IMPORT","IN","INNER","INSERT","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LESS","LIKE","LOCAL","MACRO","MORE","NONE","NOT","NULL","OF","ON","OR","ORDER","OUT","OUTER","OVER","PARTIALSCAN","PARTITION","PERCENT","PRECEDING","PRESERVE","PROCEDURE","RANGE","READS","REDUCE","REVOKE","RIGHT","ROLLUP","ROW","ROWS","SELECT","SET","TABLE","TABLESAMPLE","THEN","TO","TRANSFORM","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNION","UNIQUEJOIN","UPDATE","USER","USING","UTC_TMESTAMP","VALUES","WHEN","WHERE","WINDOW","WITH","COMMIT","ONLY","REGEXP","RLIKE","ROLLBACK","START","CACHE","CONSTRAINT","FOREIGN","PRIMARY","REFERENCES","DAYOFWEEK","EXTRACT","FLOOR","VIEWS","TIME","SYNC","TEXTFILE","SEQUENCEFILE","ORC","CSV","TSV","PARQUET","AVRO","RCFILE","JSONFILE","INPUTFORMAT","OUTPUTFORMAT"],gU=["ARRAY","BIGINT","BINARY","BOOLEAN","CHAR","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MAP","NUMERIC","PRECISION","SMALLINT","STRUCT","TIMESTAMP","VARCHAR"],xU=B(["SELECT [ALL | DISTINCT]"]),vU=B(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT INTO [TABLE]","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT [VALUES]","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),pu=B(["CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","RENAME TO","TRUNCATE [TABLE]","ALTER","CREATE","USE","DESCRIBE","DROP","FETCH","SHOW","STORED AS","STORED BY","ROW FORMAT"]),yU=B(["UNION [ALL | DISTINCT]"]),VU=B(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","LEFT SEMI JOIN"]),WU=B(["{ROWS | RANGE} BETWEEN"]),XU={name:"hive",tokenizerOptions:{reservedSelect:xU,reservedClauses:[...vU,...pu],reservedSetOperations:yU,reservedJoins:VU,reservedPhrases:WU,reservedKeywords:YU,reservedDataTypes:gU,reservedFunctionNames:HU,extraParens:["[]"],stringTypes:['""-bs',"''-bs"],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||"]},formatOptions:{onelineClauses:pu}};function yR(E){return E.map((r,n)=>{let A=E[n+1]||jT;if(fT.SET(r)&&A.text==="(")return QE(vE({},r),{type:"RESERVED_FUNCTION_NAME"});let S=E[n-1]||jT;return fT.VALUES(r)&&S.text==="="?QE(vE({},r),{type:"RESERVED_FUNCTION_NAME"}):r})}var bU=["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DELETE_DOMAIN_ID","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DO_DOMAIN_IDS","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FOR","FORCE","FOREIGN","FROM","FULLTEXT","GENERAL","GRANT","GROUP","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IGNORE_DOMAIN_IDS","IGNORE_SERVER_IDS","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTERVAL","INTO","IS","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MASTER_HEARTBEAT_PERIOD","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NULL","OFFSET","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PAGE_CHECKSUM","PARSE_VCOL_EXPR","PARTITION","POSITION","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","READ_WRITE","RECURSIVE","REF_SYSTEM_ID","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","RETURNING","REVOKE","RIGHT","RLIKE","ROW_NUMBER","ROWS","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SLOW","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STATS_AUTO_RECALC","STATS_PERSISTENT","STATS_SAMPLE_PAGES","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],wU=["BIGINT","BINARY","BIT","BLOB","CHAR BYTE","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],KU=["ADDDATE","ADD_MONTHS","BIT_AND","BIT_OR","BIT_XOR","CAST","COUNT","CUME_DIST","CURDATE","CURTIME","DATE_ADD","DATE_SUB","DATE_FORMAT","DECODE","DENSE_RANK","EXTRACT","FIRST_VALUE","GROUP_CONCAT","JSON_ARRAYAGG","JSON_OBJECTAGG","LAG","LEAD","MAX","MEDIAN","MID","MIN","NOW","NTH_VALUE","NTILE","POSITION","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","ROW_NUMBER","SESSION_USER","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUBDATE","SUBSTR","SUBSTRING","SUM","SYSTEM_USER","TRIM","TRIM_ORACLE","VARIANCE","VAR_POP","VAR_SAMP","ABS","ACOS","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ASIN","ATAN","ATAN2","BENCHMARK","BIN","BINLOG_GTID_POS","BIT_COUNT","BIT_LENGTH","CEIL","CEILING","CHARACTER_LENGTH","CHAR_LENGTH","CHR","COERCIBILITY","COLUMN_CHECK","COLUMN_EXISTS","COLUMN_LIST","COLUMN_JSON","COMPRESS","CONCAT","CONCAT_OPERATOR_ORACLE","CONCAT_WS","CONNECTION_ID","CONV","CONVERT_TZ","COS","COT","CRC32","DATEDIFF","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEGREES","DECODE_HISTOGRAM","DECODE_ORACLE","DES_DECRYPT","DES_ENCRYPT","ELT","ENCODE","ENCRYPT","EXP","EXPORT_SET","EXTRACTVALUE","FIELD","FIND_IN_SET","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GET_LOCK","GREATEST","HEX","IFNULL","INSTR","ISNULL","IS_FREE_LOCK","IS_USED_LOCK","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_COMPACT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_DETAILED","JSON_EXISTS","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_LOOSE","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_QUERY","JSON_QUOTE","JSON_OBJECT","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_SEARCH","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAST_DAY","LAST_INSERT_ID","LCASE","LEAST","LENGTH","LENGTHB","LN","LOAD_FILE","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LPAD_ORACLE","LTRIM","LTRIM_ORACLE","MAKEDATE","MAKETIME","MAKE_SET","MASTER_GTID_WAIT","MASTER_POS_WAIT","MD5","MONTHNAME","NAME_CONST","NVL","NVL2","OCT","OCTET_LENGTH","ORD","PERIOD_ADD","PERIOD_DIFF","PI","POW","POWER","QUOTE","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","RADIANS","RAND","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPLACE_ORACLE","REVERSE","ROUND","RPAD","RPAD_ORACLE","RTRIM","RTRIM_ORACLE","SEC_TO_TIME","SHA","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SPACE","SQRT","STRCMP","STR_TO_DATE","SUBSTR_ORACLE","SUBSTRING_INDEX","SUBTIME","SYS_GUID","TAN","TIMEDIFF","TIME_FORMAT","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_SECONDS","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UUID","UUID_SHORT","VERSION","WEEKDAY","WEEKOFYEAR","WSREP_LAST_WRITTEN_GTID","WSREP_LAST_SEEN_GTID","WSREP_SYNC_WAIT_UPTO_GTID","YEARWEEK","COALESCE","NULLIF"],JU=B(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),$U=B(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET","RETURNING"]),Mu=B(["CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]","ADD [COLUMN] [IF NOT EXISTS]","{CHANGE | MODIFY} [COLUMN] [IF EXISTS]","DROP [COLUMN] [IF EXISTS]","RENAME [TO]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","SET {VISIBLE | INVISIBLE}","TRUNCATE [TABLE]","ALTER DATABASE","ALTER DATABASE COMMENT","ALTER EVENT","ALTER FUNCTION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SCHEMA COMMENT","ALTER SEQUENCE","ALTER SERVER","ALTER USER","ALTER VIEW","ANALYZE","ANALYZE TABLE","BACKUP LOCK","BACKUP STAGE","BACKUP UNLOCK","BEGIN","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHECK TABLE","CHECK VIEW","CHECKSUM TABLE","COMMIT","CREATE AGGREGATE FUNCTION","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE INDEX","CREATE PROCEDURE","CREATE ROLE","CREATE SEQUENCE","CREATE SERVER","CREATE SPATIAL INDEX","CREATE TRIGGER","CREATE UNIQUE INDEX","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP INDEX","DROP PREPARE","DROP PROCEDURE","DROP ROLE","DROP SEQUENCE","DROP SERVER","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GET DIAGNOSTICS","GET DIAGNOSTICS CONDITION","GRANT","HANDLER","HELP","INSTALL PLUGIN","INSTALL SONAME","KILL","LOAD DATA INFILE","LOAD INDEX INTO CACHE","LOAD XML INFILE","LOCK TABLE","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","PURGE MASTER LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","REPAIR VIEW","RESET MASTER","RESET QUERY CACHE","RESET REPLICA","RESET SLAVE","RESIGNAL","REVOKE","ROLLBACK","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET GLOBAL TRANSACTION","SET NAMES","SET PASSWORD","SET ROLE","SET STATEMENT","SET TRANSACTION","SHOW","SHOW ALL REPLICAS STATUS","SHOW ALL SLAVES STATUS","SHOW AUTHORS","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW BINLOG STATUS","SHOW CHARACTER SET","SHOW CLIENT_STATISTICS","SHOW COLLATION","SHOW COLUMNS","SHOW CONTRIBUTORS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PACKAGE","SHOW CREATE PACKAGE BODY","SHOW CREATE PROCEDURE","SHOW CREATE SEQUENCE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINE INNODB STATUS","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW EXPLAIN","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW INDEXES","SHOW INDEX_STATISTICS","SHOW KEYS","SHOW LOCALES","SHOW MASTER LOGS","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PACKAGE BODY CODE","SHOW PACKAGE BODY STATUS","SHOW PACKAGE STATUS","SHOW PLUGINS","SHOW PLUGINS SONAME","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW QUERY_RESPONSE_TIME","SHOW RELAYLOG EVENTS","SHOW REPLICA","SHOW REPLICA HOSTS","SHOW REPLICA STATUS","SHOW SCHEMAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW SLAVE STATUS","SHOW STATUS","SHOW STORAGE ENGINES","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW USER_STATISTICS","SHOW VARIABLES","SHOW WARNINGS","SHOW WSREP_MEMBERSHIP","SHOW WSREP_STATUS","SHUTDOWN","SIGNAL","START ALL REPLICAS","START ALL SLAVES","START REPLICA","START SLAVE","START TRANSACTION","STOP ALL REPLICAS","STOP ALL SLAVES","STOP REPLICA","STOP SLAVE","UNINSTALL PLUGIN","UNINSTALL SONAME","UNLOCK TABLE","USE","XA BEGIN","XA COMMIT","XA END","XA PREPARE","XA RECOVER","XA ROLLBACK","XA START"]),QU=B(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]","MINUS [ALL | DISTINCT]"]),qU=B(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),kU=B(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),ZU={name:"mariadb",tokenizerOptions:{reservedSelect:JU,reservedClauses:[...$U,...Mu],reservedSetOperations:QU,reservedJoins:qU,reservedPhrases:kU,supportsXor:!0,reservedKeywords:bU,reservedDataTypes:wU,reservedFunctionNames:KU,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","&&","||","!","*.*"],postProcess:yR},formatOptions:{onelineClauses:Mu}},zU=["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CUBE","CUME_DIST","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DENSE_RANK","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","EMPTY","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FIRST_VALUE","FOR","FORCE","FOREIGN","FROM","FULLTEXT","FUNCTION","GENERATED","GET","GRANT","GROUP","GROUPING","GROUPS","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","INTERSECT","INTERVAL","INTO","IO_AFTER_GTIDS","IO_BEFORE_GTIDS","IS","ITERATE","JOIN","JSON_TABLE","KEY","KEYS","KILL","LAG","LAST_VALUE","LATERAL","LEAD","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LONG","LOOP","LOW_PRIORITY","MASTER_BIND","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NTH_VALUE","NTILE","NULL","OF","ON","OPTIMIZE","OPTIMIZER_COSTS","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PARTITION","PERCENT_RANK","PRIMARY","PROCEDURE","PURGE","RANGE","RANK","READ","READS","READ_WRITE","RECURSIVE","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","REVOKE","RIGHT","RLIKE","ROW","ROWS","ROW_NUMBER","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STORED","STRAIGHT_JOIN","SYSTEM","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","VIRTUAL","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],jU=["BIGINT","BINARY","BIT","BLOB","BOOL","BOOLEAN","CHAR","CHARACTER","DATE","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],E0=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","ASCII","ASIN","ATAN","ATAN2","AVG","BENCHMARK","BIN","BIN_TO_UUID","BINARY","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","CAN_ACCESS_COLUMN","CAN_ACCESS_DATABASE","CAN_ACCESS_TABLE","CAN_ACCESS_USER","CAN_ACCESS_VIEW","CAST","CEIL","CEILING","CHAR","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CRC32","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEFAULT","DEGREES","DENSE_RANK","DIV","ELT","EXP","EXPORT_SET","EXTRACT","EXTRACTVALUE","FIELD","FIND_IN_SET","FIRST_VALUE","FLOOR","FORMAT","FORMAT_BYTES","FORMAT_PICO_TIME","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOMCOLLECTION","GEOMETRYCOLLECTION","GET_DD_COLUMN_PRIVILEGES","GET_DD_CREATE_OPTIONS","GET_DD_INDEX_SUB_PART_LENGTH","GET_FORMAT","GET_LOCK","GREATEST","GROUP_CONCAT","GROUPING","GTID_SUBSET","GTID_SUBTRACT","HEX","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INSERT","INSTR","INTERNAL_AUTO_INCREMENT","INTERNAL_AVG_ROW_LENGTH","INTERNAL_CHECK_TIME","INTERNAL_CHECKSUM","INTERNAL_DATA_FREE","INTERNAL_DATA_LENGTH","INTERNAL_DD_CHAR_LENGTH","INTERNAL_GET_COMMENT_OR_ERROR","INTERNAL_GET_ENABLED_ROLE_JSON","INTERNAL_GET_HOSTNAME","INTERNAL_GET_USERNAME","INTERNAL_GET_VIEW_WARNING_OR_ERROR","INTERNAL_INDEX_COLUMN_CARDINALITY","INTERNAL_INDEX_LENGTH","INTERNAL_IS_ENABLED_ROLE","INTERNAL_IS_MANDATORY_ROLE","INTERNAL_KEYS_DISABLED","INTERNAL_MAX_DATA_LENGTH","INTERNAL_TABLE_ROWS","INTERNAL_UPDATE_TIME","INTERVAL","IS","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS NOT","IS NOT NULL","IS NULL","IS_USED_LOCK","IS_UUID","ISNULL","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_ARRAYAGG","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_OBJECTAGG","JSON_OVERLAPS","JSON_PRETTY","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SCHEMA_VALID","JSON_SCHEMA_VALIDATION_REPORT","JSON_SEARCH","JSON_SET","JSON_STORAGE_FREE","JSON_STORAGE_SIZE","JSON_TABLE","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAG","LAST_DAY","LAST_INSERT_ID","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LINESTRING","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MATCH","MAX","MBRCONTAINS","MBRCOVEREDBY","MBRCOVERS","MBRDISJOINT","MBREQUALS","MBRINTERSECTS","MBROVERLAPS","MBRTOUCHES","MBRWITHIN","MD5","MEMBER OF","MICROSECOND","MID","MIN","MINUTE","MOD","MONTH","MONTHNAME","MULTILINESTRING","MULTIPOINT","MULTIPOLYGON","NAME_CONST","NOT","NOT IN","NOT LIKE","NOT REGEXP","NOW","NTH_VALUE","NTILE","NULLIF","OCT","OCTET_LENGTH","ORD","PERCENT_RANK","PERIOD_ADD","PERIOD_DIFF","PI","POINT","POLYGON","POSITION","POW","POWER","PS_CURRENT_THREAD_ID","PS_THREAD_ID","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RANK","REGEXP","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROLES_GRAPHML","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_BUFFER","ST_BUFFER_STRATEGY","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_CONVEXHULL","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DISTANCE_SPHERE","ST_ENDPOINT","ST_ENVELOPE","ST_EQUALS","ST_EXTERIORRING","ST_FRECHETDISTANCE","ST_GEOHASH","ST_GEOMCOLLFROMTEXT","ST_GEOMCOLLFROMWKB","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMGEOJSON","ST_GEOMFROMTEXT","ST_GEOMFROMWKB","ST_HAUSDORFFDISTANCE","ST_INTERIORRINGN","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISSIMPLE","ST_ISVALID","ST_LATFROMGEOHASH","ST_LATITUDE","ST_LENGTH","ST_LINEFROMTEXT","ST_LINEFROMWKB","ST_LINEINTERPOLATEPOINT","ST_LINEINTERPOLATEPOINTS","ST_LONGFROMGEOHASH","ST_LONGITUDE","ST_MAKEENVELOPE","ST_MLINEFROMTEXT","ST_MLINEFROMWKB","ST_MPOINTFROMTEXT","ST_MPOINTFROMWKB","ST_MPOLYFROMTEXT","ST_MPOLYFROMWKB","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINTATDISTANCE","ST_POINTFROMGEOHASH","ST_POINTFROMTEXT","ST_POINTFROMWKB","ST_POINTN","ST_POLYFROMTEXT","ST_POLYFROMWKB","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SWAPXY","ST_SYMDIFFERENCE","ST_TOUCHES","ST_TRANSFORM","ST_UNION","ST_VALIDATE","ST_WITHIN","ST_X","ST_Y","STATEMENT_DIGEST","STATEMENT_DIGEST_TEXT","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","TRIM","TRUNCATE","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","UUID_TO_BIN","VALIDATE_PASSWORD_STRENGTH","VALUES","VAR_POP","VAR_SAMP","VARIANCE","VERSION","WAIT_FOR_EXECUTED_GTID_SET","WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","YEAR","YEARWEEK"],e0=B(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),T0=B(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET"]),Uu=B(["CREATE [TEMPORARY] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","{CHANGE | MODIFY} [COLUMN]","DROP [COLUMN]","RENAME [TO | AS]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","TRUNCATE [TABLE]","ALTER DATABASE","ALTER EVENT","ALTER FUNCTION","ALTER INSTANCE","ALTER LOGFILE GROUP","ALTER PROCEDURE","ALTER RESOURCE GROUP","ALTER SERVER","ALTER TABLESPACE","ALTER USER","ALTER VIEW","ANALYZE TABLE","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK TABLE","CHECKSUM TABLE","CLONE","COMMIT","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE FUNCTION","CREATE INDEX","CREATE LOGFILE GROUP","CREATE PROCEDURE","CREATE RESOURCE GROUP","CREATE ROLE","CREATE SERVER","CREATE SPATIAL REFERENCE SYSTEM","CREATE TABLESPACE","CREATE TRIGGER","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP FUNCTION","DROP INDEX","DROP LOGFILE GROUP","DROP PROCEDURE","DROP RESOURCE GROUP","DROP ROLE","DROP SERVER","DROP SPATIAL REFERENCE SYSTEM","DROP TABLESPACE","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GRANT","HANDLER","HELP","IMPORT TABLE","INSTALL COMPONENT","INSTALL PLUGIN","KILL","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SOURCE_POS_WAIT","START GROUP_REPLICATION","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP REPLICA","STOP SLAVE","TABLE","UNINSTALL COMPONENT","UNINSTALL PLUGIN","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),r0=B(["UNION [ALL | DISTINCT]"]),t0=B(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),n0=B(["ON {UPDATE | DELETE} [SET NULL]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),A0={name:"mysql",tokenizerOptions:{reservedSelect:e0,reservedClauses:[...T0,...Uu],reservedSetOperations:r0,reservedJoins:t0,reservedPhrases:n0,supportsXor:!0,reservedKeywords:zU,reservedDataTypes:jU,reservedFunctionNames:E0,stringTypes:['""-qq-bs',{quote:"''-qq-bs",prefixes:["N"]},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","->","->>","&&","||","!","*.*"],postProcess:yR},formatOptions:{onelineClauses:Uu}},R0=["ABORT","ABS","ACOS","ADVISOR","ARRAY_AGG","ARRAY_AGG","ARRAY_APPEND","ARRAY_AVG","ARRAY_BINARY_SEARCH","ARRAY_CONCAT","ARRAY_CONTAINS","ARRAY_COUNT","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_FLATTEN","ARRAY_IFNULL","ARRAY_INSERT","ARRAY_INTERSECT","ARRAY_LENGTH","ARRAY_MAX","ARRAY_MIN","ARRAY_MOVE","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_PUT","ARRAY_RANGE","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_REPLACE","ARRAY_REVERSE","ARRAY_SORT","ARRAY_STAR","ARRAY_SUM","ARRAY_SYMDIFF","ARRAY_SYMDIFF1","ARRAY_SYMDIFFN","ARRAY_UNION","ASIN","ATAN","ATAN2","AVG","BASE64","BASE64_DECODE","BASE64_ENCODE","BITAND ","BITCLEAR ","BITNOT ","BITOR ","BITSET ","BITSHIFT ","BITTEST ","BITXOR ","CEIL","CLOCK_LOCAL","CLOCK_MILLIS","CLOCK_STR","CLOCK_TZ","CLOCK_UTC","COALESCE","CONCAT","CONCAT2","CONTAINS","CONTAINS_TOKEN","CONTAINS_TOKEN_LIKE","CONTAINS_TOKEN_REGEXP","COS","COUNT","COUNT","COUNTN","CUME_DIST","CURL","DATE_ADD_MILLIS","DATE_ADD_STR","DATE_DIFF_MILLIS","DATE_DIFF_STR","DATE_FORMAT_STR","DATE_PART_MILLIS","DATE_PART_STR","DATE_RANGE_MILLIS","DATE_RANGE_STR","DATE_TRUNC_MILLIS","DATE_TRUNC_STR","DECODE","DECODE_JSON","DEGREES","DENSE_RANK","DURATION_TO_STR","ENCODED_SIZE","ENCODE_JSON","EXP","FIRST_VALUE","FLOOR","GREATEST","HAS_TOKEN","IFINF","IFMISSING","IFMISSINGORNULL","IFNAN","IFNANORINF","IFNULL","INITCAP","ISARRAY","ISATOM","ISBITSET","ISBOOLEAN","ISNUMBER","ISOBJECT","ISSTRING","LAG","LAST_VALUE","LEAD","LEAST","LENGTH","LN","LOG","LOWER","LTRIM","MAX","MEAN","MEDIAN","META","MILLIS","MILLIS_TO_LOCAL","MILLIS_TO_STR","MILLIS_TO_TZ","MILLIS_TO_UTC","MILLIS_TO_ZONE_NAME","MIN","MISSINGIF","NANIF","NEGINFIF","NOW_LOCAL","NOW_MILLIS","NOW_STR","NOW_TZ","NOW_UTC","NTH_VALUE","NTILE","NULLIF","NVL","NVL2","OBJECT_ADD","OBJECT_CONCAT","OBJECT_INNER_PAIRS","OBJECT_INNER_VALUES","OBJECT_LENGTH","OBJECT_NAMES","OBJECT_PAIRS","OBJECT_PUT","OBJECT_REMOVE","OBJECT_RENAME","OBJECT_REPLACE","OBJECT_UNWRAP","OBJECT_VALUES","PAIRS","PERCENT_RANK","PI","POLY_LENGTH","POSINFIF","POSITION","POWER","RADIANS","RANDOM","RANK","RATIO_TO_REPORT","REGEXP_CONTAINS","REGEXP_LIKE","REGEXP_MATCHES","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGEX_CONTAINS","REGEX_LIKE","REGEX_MATCHES","REGEX_POSITION","REGEX_REPLACE","REGEX_SPLIT","REPEAT","REPLACE","REVERSE","ROUND","ROW_NUMBER","RTRIM","SEARCH","SEARCH_META","SEARCH_SCORE","SIGN","SIN","SPLIT","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DURATION","STR_TO_MILLIS","STR_TO_TZ","STR_TO_UTC","STR_TO_ZONE_NAME","SUBSTR","SUFFIXES","SUM","TAN","TITLE","TOARRAY","TOATOM","TOBOOLEAN","TOKENS","TOKENS","TONUMBER","TOOBJECT","TOSTRING","TRIM","TRUNC","UPPER","UUID","VARIANCE","VARIANCE_POP","VARIANCE_SAMP","VAR_POP","VAR_SAMP","WEEKDAY_MILLIS","WEEKDAY_STR","CAST"],S0=["ADVISE","ALL","ALTER","ANALYZE","AND","ANY","ARRAY","AS","ASC","AT","BEGIN","BETWEEN","BINARY","BOOLEAN","BREAK","BUCKET","BUILD","BY","CALL","CASE","CAST","CLUSTER","COLLATE","COLLECTION","COMMIT","COMMITTED","CONNECT","CONTINUE","CORRELATED","COVER","CREATE","CURRENT","DATABASE","DATASET","DATASTORE","DECLARE","DECREMENT","DELETE","DERIVED","DESC","DESCRIBE","DISTINCT","DO","DROP","EACH","ELEMENT","ELSE","END","EVERY","EXCEPT","EXCLUDE","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FILTER","FIRST","FLATTEN","FLUSH","FOLLOWING","FOR","FORCE","FROM","FTS","FUNCTION","GOLANG","GRANT","GROUP","GROUPS","GSI","HASH","HAVING","IF","IGNORE","ILIKE","IN","INCLUDE","INCREMENT","INDEX","INFER","INLINE","INNER","INSERT","INTERSECT","INTO","IS","ISOLATION","JAVASCRIPT","JOIN","KEY","KEYS","KEYSPACE","KNOWN","LANGUAGE","LAST","LEFT","LET","LETTING","LEVEL","LIKE","LIMIT","LSM","MAP","MAPPING","MATCHED","MATERIALIZED","MERGE","MINUS","MISSING","NAMESPACE","NEST","NL","NO","NOT","NTH_VALUE","NULL","NULLS","NUMBER","OBJECT","OFFSET","ON","OPTION","OPTIONS","OR","ORDER","OTHERS","OUTER","OVER","PARSE","PARTITION","PASSWORD","PATH","POOL","PRECEDING","PREPARE","PRIMARY","PRIVATE","PRIVILEGE","PROBE","PROCEDURE","PUBLIC","RANGE","RAW","REALM","REDUCE","RENAME","RESPECT","RETURN","RETURNING","REVOKE","RIGHT","ROLE","ROLLBACK","ROW","ROWS","SATISFIES","SAVEPOINT","SCHEMA","SCOPE","SELECT","SELF","SEMI","SET","SHOW","SOME","START","STATISTICS","STRING","SYSTEM","THEN","TIES","TO","TRAN","TRANSACTION","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNDER","UNION","UNIQUE","UNKNOWN","UNNEST","UNSET","UPDATE","UPSERT","USE","USER","USING","VALIDATE","VALUE","VALUED","VALUES","VIA","VIEW","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WORK","XOR"],i0=[],O0=B(["SELECT [ALL | DISTINCT]"]),I0=B(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED THEN","UPDATE SET","INSERT","NEST","UNNEST","RETURNING"]),hu=B(["UPDATE","DELETE FROM","SET SCHEMA","ADVISE","ALTER INDEX","BEGIN TRANSACTION","BUILD INDEX","COMMIT TRANSACTION","CREATE COLLECTION","CREATE FUNCTION","CREATE INDEX","CREATE PRIMARY INDEX","CREATE SCOPE","DROP COLLECTION","DROP FUNCTION","DROP INDEX","DROP PRIMARY INDEX","DROP SCOPE","EXECUTE","EXECUTE FUNCTION","EXPLAIN","GRANT","INFER","PREPARE","REVOKE","ROLLBACK TRANSACTION","SAVEPOINT","SET TRANSACTION","UPDATE STATISTICS","UPSERT","LET","SET CURRENT SCHEMA","SHOW","USE [PRIMARY] KEYS"]),N0=B(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),u0=B(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","INNER JOIN"]),s0=B(["{ROWS | RANGE | GROUPS} BETWEEN"]),C0={name:"n1ql",tokenizerOptions:{reservedSelect:O0,reservedClauses:[...I0,...hu],reservedSetOperations:N0,reservedJoins:u0,reservedPhrases:s0,supportsXor:!0,reservedKeywords:S0,reservedDataTypes:i0,reservedFunctionNames:R0,stringTypes:['""-bs',"''-bs"],identTypes:["``"],extraParens:["[]","{}"],paramTypes:{positional:!0,numbered:["$"],named:["$"]},lineCommentTypes:["#","--"],operators:["%","==",":","||"]},formatOptions:{onelineClauses:hu}},o0=["ADD","AGENT","AGGREGATE","ALL","ALTER","AND","ANY","ARROW","AS","ASC","AT","ATTRIBUTE","AUTHID","AVG","BEGIN","BETWEEN","BLOCK","BODY","BOTH","BOUND","BULK","BY","BYTE","CALL","CALLING","CASCADE","CASE","CHARSET","CHARSETFORM","CHARSETID","CHECK","CLOSE","CLUSTER","CLUSTERS","COLAUTH","COLLECT","COLUMNS","COMMENT","COMMIT","COMMITTED","COMPILED","COMPRESS","CONNECT","CONSTANT","CONSTRUCTOR","CONTEXT","CONVERT","COUNT","CRASH","CREATE","CURRENT","CURSOR","CUSTOMDATUM","DANGLING","DATA","DAY","DECLARE","DEFAULT","DEFINE","DELETE","DESC","DETERMINISTIC","DISTINCT","DROP","DURATION","ELEMENT","ELSE","ELSIF","EMPTY","END","ESCAPE","EXCEPT","EXCEPTION","EXCEPTIONS","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FINAL","FIXED","FOR","FORALL","FORCE","FORM","FROM","FUNCTION","GENERAL","GOTO","GRANT","GROUP","HASH","HAVING","HEAP","HIDDEN","HOUR","IDENTIFIED","IF","IMMEDIATE","IN","INCLUDING","INDEX","INDEXES","INDICATOR","INDICES","INFINITE","INSERT","INSTANTIABLE","INTERFACE","INTERSECT","INTERVAL","INTO","INVALIDATE","IS","ISOLATION","JAVA","LANGUAGE","LARGE","LEADING","LENGTH","LEVEL","LIBRARY","LIKE","LIKE2","LIKE4","LIKEC","LIMIT","LIMITED","LOCAL","LOCK","LOOP","MAP","MAX","MAXLEN","MEMBER","MERGE","MIN","MINUS","MINUTE","MOD","MODE","MODIFY","MONTH","MULTISET","NAME","NAN","NATIONAL","NATIVE","NEW","NOCOMPRESS","NOCOPY","NOT","NOWAIT","NULL","OBJECT","OCICOLL","OCIDATE","OCIDATETIME","OCIDURATION","OCIINTERVAL","OCILOBLOCATOR","OCINUMBER","OCIRAW","OCIREF","OCIREFCURSOR","OCIROWID","OCISTRING","OCITYPE","OF","ON","ONLY","OPAQUE","OPEN","OPERATOR","OPTION","OR","ORACLE","ORADATA","ORDER","OVERLAPS","ORGANIZATION","ORLANY","ORLVARY","OTHERS","OUT","OVERRIDING","PACKAGE","PARALLEL_ENABLE","PARAMETER","PARAMETERS","PARTITION","PASCAL","PIPE","PIPELINED","PRAGMA","PRIOR","PRIVATE","PROCEDURE","PUBLIC","RAISE","RANGE","READ","RECORD","REF","REFERENCE","REM","REMAINDER","RENAME","RESOURCE","RESULT","RETURN","RETURNING","REVERSE","REVOKE","ROLLBACK","ROW","SAMPLE","SAVE","SAVEPOINT","SB1","SB2","SB4","SECOND","SEGMENT","SELECT","SELF","SEPARATE","SEQUENCE","SERIALIZABLE","SET","SHARE","SHORT","SIZE","SIZE_T","SOME","SPARSE","SQL","SQLCODE","SQLDATA","SQLNAME","SQLSTATE","STANDARD","START","STATIC","STDDEV","STORED","STRING","STRUCT","STYLE","SUBMULTISET","SUBPARTITION","SUBSTITUTABLE","SUBTYPE","SUM","SYNONYM","TABAUTH","TABLE","TDO","THE","THEN","TIME","TIMEZONE_ABBR","TIMEZONE_HOUR","TIMEZONE_MINUTE","TIMEZONE_REGION","TO","TRAILING","TRANSAC","TRANSACTIONAL","TRUSTED","TYPE","UB1","UB2","UB4","UNDER","UNION","UNIQUE","UNSIGNED","UNTRUSTED","UPDATE","USE","USING","VALIST","VALUE","VALUES","VARIABLE","VARIANCE","VARRAY","VIEW","VIEWS","VOID","WHEN","WHERE","WHILE","WITH","WORK","WRAPPED","WRITE","YEAR","ZONE"],a0=["ARRAY","BFILE_BASE","BINARY","BLOB_BASE","CHAR VARYING","CHAR_BASE","CHAR","CHARACTER VARYING","CHARACTER","CLOB_BASE","DATE_BASE","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTERVAL DAY","INTERVAL YEAR","LONG","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR VARYING","NCHAR","NCHAR","NUMBER_BASE","NUMBER","NUMBERIC","NVARCHAR","PRECISION","RAW","TIMESTAMP","UROWID","VARCHAR","VARCHAR2"],L0=["ABS","ACOS","ASIN","ATAN","ATAN2","BITAND","CEIL","COS","COSH","EXP","FLOOR","LN","LOG","MOD","NANVL","POWER","REMAINDER","ROUND","SIGN","SIN","SINH","SQRT","TAN","TANH","TRUNC","WIDTH_BUCKET","CHR","CONCAT","INITCAP","LOWER","LPAD","LTRIM","NLS_INITCAP","NLS_LOWER","NLSSORT","NLS_UPPER","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","RPAD","RTRIM","SOUNDEX","SUBSTR","TRANSLATE","TREAT","TRIM","UPPER","NLS_CHARSET_DECL_LEN","NLS_CHARSET_ID","NLS_CHARSET_NAME","ASCII","INSTR","LENGTH","REGEXP_INSTR","ADD_MONTHS","CURRENT_DATE","CURRENT_TIMESTAMP","DBTIMEZONE","EXTRACT","FROM_TZ","LAST_DAY","LOCALTIMESTAMP","MONTHS_BETWEEN","NEW_TIME","NEXT_DAY","NUMTODSINTERVAL","NUMTOYMINTERVAL","ROUND","SESSIONTIMEZONE","SYS_EXTRACT_UTC","SYSDATE","SYSTIMESTAMP","TO_CHAR","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_DSINTERVAL","TO_YMINTERVAL","TRUNC","TZ_OFFSET","GREATEST","LEAST","ASCIISTR","BIN_TO_NUM","CAST","CHARTOROWID","COMPOSE","CONVERT","DECOMPOSE","HEXTORAW","NUMTODSINTERVAL","NUMTOYMINTERVAL","RAWTOHEX","RAWTONHEX","ROWIDTOCHAR","ROWIDTONCHAR","SCN_TO_TIMESTAMP","TIMESTAMP_TO_SCN","TO_BINARY_DOUBLE","TO_BINARY_FLOAT","TO_CHAR","TO_CLOB","TO_DATE","TO_DSINTERVAL","TO_LOB","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_DSINTERVAL","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_YMINTERVAL","TO_YMINTERVAL","TRANSLATE","UNISTR","BFILENAME","EMPTY_BLOB,","EMPTY_CLOB","CARDINALITY","COLLECT","POWERMULTISET","POWERMULTISET_BY_CARDINALITY","SET","SYS_CONNECT_BY_PATH","CLUSTER_ID","CLUSTER_PROBABILITY","CLUSTER_SET","FEATURE_ID","FEATURE_SET","FEATURE_VALUE","PREDICTION","PREDICTION_COST","PREDICTION_DETAILS","PREDICTION_PROBABILITY","PREDICTION_SET","APPENDCHILDXML","DELETEXML","DEPTH","EXTRACT","EXISTSNODE","EXTRACTVALUE","INSERTCHILDXML","INSERTXMLBEFORE","PATH","SYS_DBURIGEN","SYS_XMLAGG","SYS_XMLGEN","UPDATEXML","XMLAGG","XMLCDATA","XMLCOLATTVAL","XMLCOMMENT","XMLCONCAT","XMLFOREST","XMLPARSE","XMLPI","XMLQUERY","XMLROOT","XMLSEQUENCE","XMLSERIALIZE","XMLTABLE","XMLTRANSFORM","DECODE","DUMP","ORA_HASH","VSIZE","COALESCE","LNNVL","NULLIF","NVL","NVL2","SYS_CONTEXT","SYS_GUID","SYS_TYPEID","UID","USER","USERENV","AVG","COLLECT","CORR","CORR_S","CORR_K","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","FIRST","GROUP_ID","GROUPING","GROUPING_ID","LAST","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANK","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","STATS_BINOMIAL_TEST","STATS_CROSSTAB","STATS_F_TEST","STATS_KS_TEST","STATS_MODE","STATS_MW_TEST","STATS_ONE_WAY_ANOVA","STATS_T_TEST_ONE","STATS_T_TEST_PAIRED","STATS_T_TEST_INDEP","STATS_T_TEST_INDEPU","STATS_WSR_TEST","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTILE","RATIO_TO_REPORT","ROW_NUMBER","DEREF","MAKE_REF","REF","REFTOHEX","VALUE","CV","ITERATION_NUMBER","PRESENTNNV","PRESENTV","PREVIOUS"],_0=B(["SELECT [ALL | DISTINCT | UNIQUE]"]),D0=B(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","INSERT [INTO | ALL INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [THEN]","UPDATE SET","RETURNING"]),Fu=B(["CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE","CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW","CREATE MATERIALIZED VIEW","UPDATE [ONLY]","DELETE FROM [ONLY]","DROP TABLE","ALTER TABLE","ADD","DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}","MODIFY","RENAME TO","RENAME COLUMN","TRUNCATE TABLE","SET SCHEMA","BEGIN","CONNECT BY","DECLARE","EXCEPT","EXCEPTION","LOOP","START WITH"]),l0=B(["UNION [ALL]","EXCEPT","INTERSECT"]),c0=B(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | OUTER} APPLY"]),f0=B(["ON {UPDATE | DELETE} [SET NULL]","ON COMMIT","{ROWS | RANGE} BETWEEN"]),P0={name:"plsql",tokenizerOptions:{reservedSelect:_0,reservedClauses:[...D0,...Fu],reservedSetOperations:l0,reservedJoins:c0,reservedPhrases:f0,supportsXor:!0,reservedKeywords:o0,reservedDataTypes:a0,reservedFunctionNames:L0,stringTypes:[{quote:"''-qq",prefixes:["N"]},{quote:"q''",prefixes:["N"]}],identTypes:['""-qq'],identChars:{rest:"$#"},variableTypes:[{regex:"&{1,2}[A-Za-z][A-Za-z0-9_$#]*"}],paramTypes:{numbered:[":"],named:[":"]},paramChars:{},operators:["**",":=","%","~=","^=",">>","<<","=>","@","||"],postProcess:p0},formatOptions:{alwaysDenseOperators:["@"],onelineClauses:Fu}};function p0(E){let r=jT;return E.map(n=>fT.SET(n)&&fT.BY(r)?QE(vE({},n),{type:"RESERVED_KEYWORD"}):(Es(n.type)&&(r=n),n))}var M0=["ABS","ACOS","ACOSD","ACOSH","ASIN","ASIND","ASINH","ATAN","ATAN2","ATAN2D","ATAND","ATANH","CBRT","CEIL","CEILING","COS","COSD","COSH","COT","COTD","DEGREES","DIV","EXP","FACTORIAL","FLOOR","GCD","LCM","LN","LOG","LOG10","MIN_SCALE","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SCALE","SETSEED","SIGN","SIN","SIND","SINH","SQRT","TAN","TAND","TANH","TRIM_SCALE","TRUNC","WIDTH_BUCKET","ABS","ASCII","BIT_LENGTH","BTRIM","CHARACTER_LENGTH","CHAR_LENGTH","CHR","CONCAT","CONCAT_WS","FORMAT","INITCAP","LEFT","LENGTH","LOWER","LPAD","LTRIM","MD5","NORMALIZE","OCTET_LENGTH","OVERLAY","PARSE_IDENT","PG_CLIENT_ENCODING","POSITION","QUOTE_IDENT","QUOTE_LITERAL","QUOTE_NULLABLE","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","REPEAT","REPLACE","REVERSE","RIGHT","RPAD","RTRIM","SPLIT_PART","SPRINTF","STARTS_WITH","STRING_AGG","STRING_TO_ARRAY","STRING_TO_TABLE","STRPOS","SUBSTR","SUBSTRING","TO_ASCII","TO_HEX","TRANSLATE","TRIM","UNISTR","UPPER","BIT_COUNT","BIT_LENGTH","BTRIM","CONVERT","CONVERT_FROM","CONVERT_TO","DECODE","ENCODE","GET_BIT","GET_BYTE","LENGTH","LTRIM","MD5","OCTET_LENGTH","OVERLAY","POSITION","RTRIM","SET_BIT","SET_BYTE","SHA224","SHA256","SHA384","SHA512","STRING_AGG","SUBSTR","SUBSTRING","TRIM","BIT_COUNT","BIT_LENGTH","GET_BIT","LENGTH","OCTET_LENGTH","OVERLAY","POSITION","SET_BIT","SUBSTRING","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","TO_CHAR","TO_DATE","TO_NUMBER","TO_TIMESTAMP","CLOCK_TIMESTAMP","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_BIN","DATE_PART","DATE_TRUNC","EXTRACT","ISFINITE","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","LOCALTIME","LOCALTIMESTAMP","MAKE_DATE","MAKE_INTERVAL","MAKE_TIME","MAKE_TIMESTAMP","MAKE_TIMESTAMPTZ","NOW","PG_SLEEP","PG_SLEEP_FOR","PG_SLEEP_UNTIL","STATEMENT_TIMESTAMP","TIMEOFDAY","TO_TIMESTAMP","TRANSACTION_TIMESTAMP","ENUM_FIRST","ENUM_LAST","ENUM_RANGE","AREA","BOUND_BOX","BOX","CENTER","CIRCLE","DIAGONAL","DIAMETER","HEIGHT","ISCLOSED","ISOPEN","LENGTH","LINE","LSEG","NPOINTS","PATH","PCLOSE","POINT","POLYGON","POPEN","RADIUS","SLOPE","WIDTH","ABBREV","BROADCAST","FAMILY","HOST","HOSTMASK","INET_MERGE","INET_SAME_FAMILY","MACADDR8_SET7BIT","MASKLEN","NETMASK","NETWORK","SET_MASKLEN","TEXT","TRUNC","ARRAY_TO_TSVECTOR","GET_CURRENT_TS_CONFIG","JSONB_TO_TSVECTOR","JSON_TO_TSVECTOR","LENGTH","NUMNODE","PHRASETO_TSQUERY","PLAINTO_TSQUERY","QUERYTREE","SETWEIGHT","STRIP","TO_TSQUERY","TO_TSVECTOR","TSQUERY_PHRASE","TSVECTOR_TO_ARRAY","TS_DEBUG","TS_DELETE","TS_FILTER","TS_HEADLINE","TS_LEXIZE","TS_PARSE","TS_RANK","TS_RANK_CD","TS_REWRITE","TS_STAT","TS_TOKEN_TYPE","WEBSEARCH_TO_TSQUERY","UUID","CURSOR_TO_XML","CURSOR_TO_XMLSCHEMA","DATABASE_TO_XML","DATABASE_TO_XMLSCHEMA","DATABASE_TO_XML_AND_XMLSCHEMA","NEXTVAL","QUERY_TO_XML","QUERY_TO_XMLSCHEMA","QUERY_TO_XML_AND_XMLSCHEMA","SCHEMA_TO_XML","SCHEMA_TO_XMLSCHEMA","SCHEMA_TO_XML_AND_XMLSCHEMA","STRING","TABLE_TO_XML","TABLE_TO_XMLSCHEMA","TABLE_TO_XML_AND_XMLSCHEMA","XMLAGG","XMLCOMMENT","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","XML_IS_WELL_FORMED","XML_IS_WELL_FORMED_CONTENT","XML_IS_WELL_FORMED_DOCUMENT","XPATH","XPATH_EXISTS","ARRAY_TO_JSON","JSONB_AGG","JSONB_ARRAY_ELEMENTS","JSONB_ARRAY_ELEMENTS_TEXT","JSONB_ARRAY_LENGTH","JSONB_BUILD_ARRAY","JSONB_BUILD_OBJECT","JSONB_EACH","JSONB_EACH_TEXT","JSONB_EXTRACT_PATH","JSONB_EXTRACT_PATH_TEXT","JSONB_INSERT","JSONB_OBJECT","JSONB_OBJECT_AGG","JSONB_OBJECT_KEYS","JSONB_PATH_EXISTS","JSONB_PATH_EXISTS_TZ","JSONB_PATH_MATCH","JSONB_PATH_MATCH_TZ","JSONB_PATH_QUERY","JSONB_PATH_QUERY_ARRAY","JSONB_PATH_QUERY_ARRAY_TZ","JSONB_PATH_QUERY_FIRST","JSONB_PATH_QUERY_FIRST_TZ","JSONB_PATH_QUERY_TZ","JSONB_POPULATE_RECORD","JSONB_POPULATE_RECORDSET","JSONB_PRETTY","JSONB_SET","JSONB_SET_LAX","JSONB_STRIP_NULLS","JSONB_TO_RECORD","JSONB_TO_RECORDSET","JSONB_TYPEOF","JSON_AGG","JSON_ARRAY_ELEMENTS","JSON_ARRAY_ELEMENTS_TEXT","JSON_ARRAY_LENGTH","JSON_BUILD_ARRAY","JSON_BUILD_OBJECT","JSON_EACH","JSON_EACH_TEXT","JSON_EXTRACT_PATH","JSON_EXTRACT_PATH_TEXT","JSON_OBJECT","JSON_OBJECT_AGG","JSON_OBJECT_KEYS","JSON_POPULATE_RECORD","JSON_POPULATE_RECORDSET","JSON_STRIP_NULLS","JSON_TO_RECORD","JSON_TO_RECORDSET","JSON_TYPEOF","ROW_TO_JSON","TO_JSON","TO_JSONB","TO_TIMESTAMP","CURRVAL","LASTVAL","NEXTVAL","SETVAL","COALESCE","GREATEST","LEAST","NULLIF","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_DIMS","ARRAY_FILL","ARRAY_LENGTH","ARRAY_LOWER","ARRAY_NDIMS","ARRAY_POSITION","ARRAY_POSITIONS","ARRAY_PREPEND","ARRAY_REMOVE","ARRAY_REPLACE","ARRAY_TO_STRING","ARRAY_UPPER","CARDINALITY","STRING_TO_ARRAY","TRIM_ARRAY","UNNEST","ISEMPTY","LOWER","LOWER_INC","LOWER_INF","MULTIRANGE","RANGE_MERGE","UPPER","UPPER_INC","UPPER_INF","ARRAY_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COALESCE","CORR","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","EVERY","GROUPING","JSONB_AGG","JSONB_OBJECT_AGG","JSON_AGG","JSON_OBJECT_AGG","MAX","MIN","MODE","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANGE_AGG","RANGE_INTERSECT_AGG","RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","TO_JSON","TO_JSONB","VARIANCE","VAR_POP","VAR_SAMP","XMLAGG","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","GENERATE_SERIES","GENERATE_SUBSCRIPTS","ACLDEFAULT","ACLEXPLODE","COL_DESCRIPTION","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_QUERY","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","FORMAT_TYPE","HAS_ANY_COLUMN_PRIVILEGE","HAS_COLUMN_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE","HAS_FUNCTION_PRIVILEGE","HAS_LANGUAGE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_SEQUENCE_PRIVILEGE","HAS_SERVER_PRIVILEGE","HAS_TABLESPACE_PRIVILEGE","HAS_TABLE_PRIVILEGE","HAS_TYPE_PRIVILEGE","INET_CLIENT_ADDR","INET_CLIENT_PORT","INET_SERVER_ADDR","INET_SERVER_PORT","MAKEACLITEM","OBJ_DESCRIPTION","PG_BACKEND_PID","PG_BLOCKING_PIDS","PG_COLLATION_IS_VISIBLE","PG_CONF_LOAD_TIME","PG_CONTROL_CHECKPOINT","PG_CONTROL_INIT","PG_CONTROL_SYSTEM","PG_CONVERSION_IS_VISIBLE","PG_CURRENT_LOGFILE","PG_CURRENT_SNAPSHOT","PG_CURRENT_XACT_ID","PG_CURRENT_XACT_ID_IF_ASSIGNED","PG_DESCRIBE_OBJECT","PG_FUNCTION_IS_VISIBLE","PG_GET_CATALOG_FOREIGN_KEYS","PG_GET_CONSTRAINTDEF","PG_GET_EXPR","PG_GET_FUNCTIONDEF","PG_GET_FUNCTION_ARGUMENTS","PG_GET_FUNCTION_IDENTITY_ARGUMENTS","PG_GET_FUNCTION_RESULT","PG_GET_INDEXDEF","PG_GET_KEYWORDS","PG_GET_OBJECT_ADDRESS","PG_GET_OWNED_SEQUENCE","PG_GET_RULEDEF","PG_GET_SERIAL_SEQUENCE","PG_GET_STATISTICSOBJDEF","PG_GET_TRIGGERDEF","PG_GET_USERBYID","PG_GET_VIEWDEF","PG_HAS_ROLE","PG_IDENTIFY_OBJECT","PG_IDENTIFY_OBJECT_AS_ADDRESS","PG_INDEXAM_HAS_PROPERTY","PG_INDEX_COLUMN_HAS_PROPERTY","PG_INDEX_HAS_PROPERTY","PG_IS_OTHER_TEMP_SCHEMA","PG_JIT_AVAILABLE","PG_LAST_COMMITTED_XACT","PG_LISTENING_CHANNELS","PG_MY_TEMP_SCHEMA","PG_NOTIFICATION_QUEUE_USAGE","PG_OPCLASS_IS_VISIBLE","PG_OPERATOR_IS_VISIBLE","PG_OPFAMILY_IS_VISIBLE","PG_OPTIONS_TO_TABLE","PG_POSTMASTER_START_TIME","PG_SAFE_SNAPSHOT_BLOCKING_PIDS","PG_SNAPSHOT_XIP","PG_SNAPSHOT_XMAX","PG_SNAPSHOT_XMIN","PG_STATISTICS_OBJ_IS_VISIBLE","PG_TABLESPACE_DATABASES","PG_TABLESPACE_LOCATION","PG_TABLE_IS_VISIBLE","PG_TRIGGER_DEPTH","PG_TS_CONFIG_IS_VISIBLE","PG_TS_DICT_IS_VISIBLE","PG_TS_PARSER_IS_VISIBLE","PG_TS_TEMPLATE_IS_VISIBLE","PG_TYPEOF","PG_TYPE_IS_VISIBLE","PG_VISIBLE_IN_SNAPSHOT","PG_XACT_COMMIT_TIMESTAMP","PG_XACT_COMMIT_TIMESTAMP_ORIGIN","PG_XACT_STATUS","PQSERVERVERSION","ROW_SECURITY_ACTIVE","SESSION_USER","SHOBJ_DESCRIPTION","TO_REGCLASS","TO_REGCOLLATION","TO_REGNAMESPACE","TO_REGOPER","TO_REGOPERATOR","TO_REGPROC","TO_REGPROCEDURE","TO_REGROLE","TO_REGTYPE","TXID_CURRENT","TXID_CURRENT_IF_ASSIGNED","TXID_CURRENT_SNAPSHOT","TXID_SNAPSHOT_XIP","TXID_SNAPSHOT_XMAX","TXID_SNAPSHOT_XMIN","TXID_STATUS","TXID_VISIBLE_IN_SNAPSHOT","USER","VERSION","BRIN_DESUMMARIZE_RANGE","BRIN_SUMMARIZE_NEW_VALUES","BRIN_SUMMARIZE_RANGE","CONVERT_FROM","CURRENT_SETTING","GIN_CLEAN_PENDING_LIST","PG_ADVISORY_LOCK","PG_ADVISORY_LOCK_SHARED","PG_ADVISORY_UNLOCK","PG_ADVISORY_UNLOCK_ALL","PG_ADVISORY_UNLOCK_SHARED","PG_ADVISORY_XACT_LOCK","PG_ADVISORY_XACT_LOCK_SHARED","PG_BACKUP_START_TIME","PG_CANCEL_BACKEND","PG_COLLATION_ACTUAL_VERSION","PG_COLUMN_COMPRESSION","PG_COLUMN_SIZE","PG_COPY_LOGICAL_REPLICATION_SLOT","PG_COPY_PHYSICAL_REPLICATION_SLOT","PG_CREATE_LOGICAL_REPLICATION_SLOT","PG_CREATE_PHYSICAL_REPLICATION_SLOT","PG_CREATE_RESTORE_POINT","PG_CURRENT_WAL_FLUSH_LSN","PG_CURRENT_WAL_INSERT_LSN","PG_CURRENT_WAL_LSN","PG_DATABASE_SIZE","PG_DROP_REPLICATION_SLOT","PG_EXPORT_SNAPSHOT","PG_FILENODE_RELATION","PG_GET_WAL_REPLAY_PAUSE_STATE","PG_IMPORT_SYSTEM_COLLATIONS","PG_INDEXES_SIZE","PG_IS_IN_BACKUP","PG_IS_IN_RECOVERY","PG_IS_WAL_REPLAY_PAUSED","PG_LAST_WAL_RECEIVE_LSN","PG_LAST_WAL_REPLAY_LSN","PG_LAST_XACT_REPLAY_TIMESTAMP","PG_LOGICAL_EMIT_MESSAGE","PG_LOGICAL_SLOT_GET_BINARY_CHANGES","PG_LOGICAL_SLOT_GET_CHANGES","PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES","PG_LOGICAL_SLOT_PEEK_CHANGES","PG_LOG_BACKEND_MEMORY_CONTEXTS","PG_LS_ARCHIVE_STATUSDIR","PG_LS_DIR","PG_LS_LOGDIR","PG_LS_TMPDIR","PG_LS_WALDIR","PG_PARTITION_ANCESTORS","PG_PARTITION_ROOT","PG_PARTITION_TREE","PG_PROMOTE","PG_READ_BINARY_FILE","PG_READ_FILE","PG_RELATION_FILENODE","PG_RELATION_FILEPATH","PG_RELATION_SIZE","PG_RELOAD_CONF","PG_REPLICATION_ORIGIN_ADVANCE","PG_REPLICATION_ORIGIN_CREATE","PG_REPLICATION_ORIGIN_DROP","PG_REPLICATION_ORIGIN_OID","PG_REPLICATION_ORIGIN_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_IS_SETUP","PG_REPLICATION_ORIGIN_SESSION_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_RESET","PG_REPLICATION_ORIGIN_SESSION_SETUP","PG_REPLICATION_ORIGIN_XACT_RESET","PG_REPLICATION_ORIGIN_XACT_SETUP","PG_REPLICATION_SLOT_ADVANCE","PG_ROTATE_LOGFILE","PG_SIZE_BYTES","PG_SIZE_PRETTY","PG_START_BACKUP","PG_STAT_FILE","PG_STOP_BACKUP","PG_SWITCH_WAL","PG_TABLESPACE_SIZE","PG_TABLE_SIZE","PG_TERMINATE_BACKEND","PG_TOTAL_RELATION_SIZE","PG_TRY_ADVISORY_LOCK","PG_TRY_ADVISORY_LOCK_SHARED","PG_TRY_ADVISORY_XACT_LOCK","PG_TRY_ADVISORY_XACT_LOCK_SHARED","PG_WALFILE_NAME","PG_WALFILE_NAME_OFFSET","PG_WAL_LSN_DIFF","PG_WAL_REPLAY_PAUSE","PG_WAL_REPLAY_RESUME","SET_CONFIG","SUPPRESS_REDUNDANT_UPDATES_TRIGGER","TSVECTOR_UPDATE_TRIGGER","TSVECTOR_UPDATE_TRIGGER_COLUMN","PG_EVENT_TRIGGER_DDL_COMMANDS","PG_EVENT_TRIGGER_DROPPED_OBJECTS","PG_EVENT_TRIGGER_TABLE_REWRITE_OID","PG_EVENT_TRIGGER_TABLE_REWRITE_REASON","PG_GET_OBJECT_ADDRESS","PG_MCV_LIST_ITEMS","CAST"],U0=["ABORT","ABSOLUTE","ACCESS","ACTION","ADD","ADMIN","AFTER","AGGREGATE","ALL","ALSO","ALTER","ALWAYS","ANALYSE","ANALYZE","AND","ANY","AS","ASC","ASENSITIVE","ASSERTION","ASSIGNMENT","ASYMMETRIC","AT","ATOMIC","ATTACH","ATTRIBUTE","AUTHORIZATION","BACKWARD","BEFORE","BEGIN","BETWEEN","BINARY","BOTH","BREADTH","BY","CACHE","CALL","CALLED","CASCADE","CASCADED","CASE","CAST","CATALOG","CHAIN","CHARACTERISTICS","CHECK","CHECKPOINT","CLASS","CLOSE","CLUSTER","COALESCE","COLLATE","COLLATION","COLUMN","COLUMNS","COMMENT","COMMENTS","COMMIT","COMMITTED","COMPRESSION","CONCURRENTLY","CONFIGURATION","CONFLICT","CONNECTION","CONSTRAINT","CONSTRAINTS","CONTENT","CONTINUE","CONVERSION","COPY","COST","CREATE","CROSS","CSV","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DATE","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DAY","DEALLOCATE","DEC","DECLARE","DEFAULT","DEFAULTS","DEFERRABLE","DEFERRED","DEFINER","DELETE","DELIMITER","DELIMITERS","DEPENDS","DEPTH","DESC","DETACH","DICTIONARY","DISABLE","DISCARD","DISTINCT","DO","DOCUMENT","DOMAIN","DROP","EACH","ELSE","ENABLE","ENCODING","ENCRYPTED","END","ENUM","ESCAPE","EVENT","EXCEPT","EXCLUDE","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXPLAIN","EXPRESSION","EXTENSION","EXTERNAL","EXTRACT","FALSE","FAMILY","FETCH","FILTER","FINALIZE","FIRST","FOLLOWING","FOR","FORCE","FOREIGN","FORWARD","FREEZE","FROM","FULL","FUNCTION","FUNCTIONS","GENERATED","GLOBAL","GRANT","GRANTED","GREATEST","GROUP","GROUPING","GROUPS","HANDLER","HAVING","HEADER","HOLD","HOUR","IDENTITY","IF","ILIKE","IMMEDIATE","IMMUTABLE","IMPLICIT","IMPORT","IN","INCLUDE","INCLUDING","INCREMENT","INDEX","INDEXES","INHERIT","INHERITS","INITIALLY","INLINE","INNER","INOUT","INPUT","INSENSITIVE","INSERT","INSTEAD","INTERSECT","INTO","INVOKER","IS","ISNULL","ISOLATION","JOIN","KEY","LANGUAGE","LARGE","LAST","LATERAL","LEADING","LEAKPROOF","LEAST","LEFT","LEVEL","LIKE","LIMIT","LISTEN","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCK","LOCKED","LOGGED","MAPPING","MATCH","MATERIALIZED","MAXVALUE","METHOD","MINUTE","MINVALUE","MODE","MONTH","MOVE","NATIONAL","NATURAL","NCHAR","NEW","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NORMALIZE","NORMALIZED","NOT","NOTHING","NOTIFY","NOTNULL","NOWAIT","NULL","NULLIF","NULLS","OBJECT","OF","OFF","OFFSET","OIDS","OLD","ON","ONLY","OPERATOR","OPTION","OPTIONS","OR","ORDER","ORDINALITY","OTHERS","OUT","OUTER","OVER","OVERLAPS","OVERLAY","OVERRIDING","OWNED","OWNER","PARALLEL","PARSER","PARTIAL","PARTITION","PASSING","PASSWORD","PLACING","PLANS","POLICY","POSITION","PRECEDING","PREPARE","PREPARED","PRESERVE","PRIMARY","PRIOR","PRIVILEGES","PROCEDURAL","PROCEDURE","PROCEDURES","PROGRAM","PUBLICATION","QUOTE","RANGE","READ","REASSIGN","RECHECK","RECURSIVE","REF","REFERENCES","REFERENCING","REFRESH","REINDEX","RELATIVE","RENAME","REPEATABLE","REPLACE","REPLICA","RESET","RESTART","RESTRICT","RETURN","RETURNING","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROLLUP","ROUTINE","ROUTINES","ROW","ROWS","RULE","SAVEPOINT","SCHEMA","SCHEMAS","SCROLL","SEARCH","SECOND","SECURITY","SELECT","SEQUENCE","SEQUENCES","SERIALIZABLE","SERVER","SESSION","SESSION_USER","SET","SETOF","SETS","SHARE","SHOW","SIMILAR","SIMPLE","SKIP","SNAPSHOT","SOME","SQL","STABLE","STANDALONE","START","STATEMENT","STATISTICS","STDIN","STDOUT","STORAGE","STORED","STRICT","STRIP","SUBSCRIPTION","SUBSTRING","SUPPORT","SYMMETRIC","SYSID","SYSTEM","TABLE","TABLES","TABLESAMPLE","TABLESPACE","TEMP","TEMPLATE","TEMPORARY","THEN","TIES","TO","TRAILING","TRANSACTION","TRANSFORM","TREAT","TRIGGER","TRIM","TRUE","TRUNCATE","TRUSTED","UESCAPE","UNBOUNDED","UNCOMMITTED","UNENCRYPTED","UNION","UNIQUE","UNKNOWN","UNLISTEN","UNLOGGED","UNTIL","UPDATE","USER","USING","VACUUM","VALID","VALIDATE","VALIDATOR","VALUE","VALUES","VARIADIC","VERBOSE","VERSION","VIEW","VIEWS","VOLATILE","WHEN","WHERE","WHITESPACE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","XMLATTRIBUTES","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","YEAR","YES"],h0=["ARRAY","BIGINT","BIT","BIT VARYING","BOOL","BOOLEAN","CHAR","CHARACTER","CHARACTER VARYING","DECIMAL","DOUBLE","ENUM","FLOAT","INT","INTEGER","INTERVAL","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TIMESTAMPTZ","VARCHAR","XML","ZONE"],F0=B(["SELECT [ALL | DISTINCT]"]),d0=B(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR {UPDATE | NO KEY UPDATE | SHARE | KEY SHARE} [OF]","INSERT INTO","VALUES","SET","RETURNING"]),du=B(["CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW","CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE [ONLY]","WHERE CURRENT OF","ON CONFLICT","DELETE FROM [ONLY]","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS] [ONLY]","ALTER TABLE ALL IN TABLESPACE","RENAME [COLUMN]","RENAME TO","ADD [COLUMN] [IF NOT EXISTS]","DROP [COLUMN] [IF EXISTS]","ALTER [COLUMN]","SET DATA TYPE","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","TRUNCATE [TABLE] [ONLY]","SET SCHEMA","AFTER","ABORT","ALTER AGGREGATE","ALTER COLLATION","ALTER CONVERSION","ALTER DATABASE","ALTER DEFAULT PRIVILEGES","ALTER DOMAIN","ALTER EVENT TRIGGER","ALTER EXTENSION","ALTER FOREIGN DATA WRAPPER","ALTER FOREIGN TABLE","ALTER FUNCTION","ALTER GROUP","ALTER INDEX","ALTER LANGUAGE","ALTER LARGE OBJECT","ALTER MATERIALIZED VIEW","ALTER OPERATOR","ALTER OPERATOR CLASS","ALTER OPERATOR FAMILY","ALTER POLICY","ALTER PROCEDURE","ALTER PUBLICATION","ALTER ROLE","ALTER ROUTINE","ALTER RULE","ALTER SCHEMA","ALTER SEQUENCE","ALTER SERVER","ALTER STATISTICS","ALTER SUBSCRIPTION","ALTER SYSTEM","ALTER TABLESPACE","ALTER TEXT SEARCH CONFIGURATION","ALTER TEXT SEARCH DICTIONARY","ALTER TEXT SEARCH PARSER","ALTER TEXT SEARCH TEMPLATE","ALTER TRIGGER","ALTER TYPE","ALTER USER","ALTER USER MAPPING","ALTER VIEW","ANALYZE","BEGIN","CALL","CHECKPOINT","CLOSE","CLUSTER","COMMIT","COMMIT PREPARED","COPY","CREATE ACCESS METHOD","CREATE AGGREGATE","CREATE CAST","CREATE COLLATION","CREATE CONVERSION","CREATE DATABASE","CREATE DOMAIN","CREATE EVENT TRIGGER","CREATE EXTENSION","CREATE FOREIGN DATA WRAPPER","CREATE FOREIGN TABLE","CREATE FUNCTION","CREATE GROUP","CREATE INDEX","CREATE LANGUAGE","CREATE OPERATOR","CREATE OPERATOR CLASS","CREATE OPERATOR FAMILY","CREATE POLICY","CREATE PROCEDURE","CREATE PUBLICATION","CREATE ROLE","CREATE RULE","CREATE SCHEMA","CREATE SEQUENCE","CREATE SERVER","CREATE STATISTICS","CREATE SUBSCRIPTION","CREATE TABLESPACE","CREATE TEXT SEARCH CONFIGURATION","CREATE TEXT SEARCH DICTIONARY","CREATE TEXT SEARCH PARSER","CREATE TEXT SEARCH TEMPLATE","CREATE TRANSFORM","CREATE TRIGGER","CREATE TYPE","CREATE USER","CREATE USER MAPPING","DEALLOCATE","DECLARE","DISCARD","DROP ACCESS METHOD","DROP AGGREGATE","DROP CAST","DROP COLLATION","DROP CONVERSION","DROP DATABASE","DROP DOMAIN","DROP EVENT TRIGGER","DROP EXTENSION","DROP FOREIGN DATA WRAPPER","DROP FOREIGN TABLE","DROP FUNCTION","DROP GROUP","DROP INDEX","DROP LANGUAGE","DROP MATERIALIZED VIEW","DROP OPERATOR","DROP OPERATOR CLASS","DROP OPERATOR FAMILY","DROP OWNED","DROP POLICY","DROP PROCEDURE","DROP PUBLICATION","DROP ROLE","DROP ROUTINE","DROP RULE","DROP SCHEMA","DROP SEQUENCE","DROP SERVER","DROP STATISTICS","DROP SUBSCRIPTION","DROP TABLESPACE","DROP TEXT SEARCH CONFIGURATION","DROP TEXT SEARCH DICTIONARY","DROP TEXT SEARCH PARSER","DROP TEXT SEARCH TEMPLATE","DROP TRANSFORM","DROP TRIGGER","DROP TYPE","DROP USER","DROP USER MAPPING","DROP VIEW","EXECUTE","EXPLAIN","FETCH","GRANT","IMPORT FOREIGN SCHEMA","LISTEN","LOAD","LOCK","MOVE","NOTIFY","PREPARE","PREPARE TRANSACTION","REASSIGN OWNED","REFRESH MATERIALIZED VIEW","REINDEX","RELEASE SAVEPOINT","RESET","REVOKE","ROLLBACK","ROLLBACK PREPARED","ROLLBACK TO SAVEPOINT","SAVEPOINT","SECURITY LABEL","SELECT INTO","SET CONSTRAINTS","SET ROLE","SET SESSION AUTHORIZATION","SET TRANSACTION","SHOW","START TRANSACTION","UNLISTEN","VACUUM"]),G0=B(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),B0=B(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),m0=B(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN","[TIMESTAMP | TIME] {WITH | WITHOUT} TIME ZONE","IS [NOT] DISTINCT FROM"]),H0={name:"postgresql",tokenizerOptions:{reservedSelect:F0,reservedClauses:[...d0,...du],reservedSetOperations:G0,reservedJoins:B0,reservedPhrases:m0,reservedKeywords:U0,reservedDataTypes:h0,reservedFunctionNames:M0,nestedBlockComments:!0,extraParens:["[]"],stringTypes:["$$",{quote:"''-qq",prefixes:["U&"]},{quote:"''-qq-bs",prefixes:["E"],requirePrefix:!0},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:[{quote:'""-qq',prefixes:["U&"]}],identChars:{rest:"$"},paramTypes:{numbered:["$"]},operators:["%","^","|/","||/","@",":=","&","|","#","~","<<",">>","~>~","~<~","~>=~","~<=~","@-@","@@","##","<->","&&","&<","&>","<<|","&<|","|>>","|&>","<^","^>","?#","?-","?|","?-|","?||","@>","<@","~=","?","@?","?&","->","->>","#>","#>>","#-","=>",">>=","<<=","~~","~~*","!~~","!~~*","~","~*","!~","!~*","-|-","||","@@@","!!","<%","%>","<<%","%>>","<<->","<->>","<<<->","<->>>","::",":"]},formatOptions:{alwaysDenseOperators:["::",":"],onelineClauses:du}},Y0=["ANY_VALUE","APPROXIMATE PERCENTILE_DISC","AVG","COUNT","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","array","array_concat","array_flatten","get_array_length","split_to_array","subarray","BIT_AND","BIT_OR","BOOL_AND","BOOL_OR","COALESCE","DECODE","GREATEST","LEAST","NVL","NVL2","NULLIF","ADD_MONTHS","AT TIME ZONE","CONVERT_TIMEZONE","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_CMP","DATE_CMP_TIMESTAMP","DATE_CMP_TIMESTAMPTZ","DATE_PART_YEAR","DATEADD","DATEDIFF","DATE_PART","DATE_TRUNC","EXTRACT","GETDATE","INTERVAL_CMP","LAST_DAY","MONTHS_BETWEEN","NEXT_DAY","SYSDATE","TIMEOFDAY","TIMESTAMP_CMP","TIMESTAMP_CMP_DATE","TIMESTAMP_CMP_TIMESTAMPTZ","TIMESTAMPTZ_CMP","TIMESTAMPTZ_CMP_DATE","TIMESTAMPTZ_CMP_TIMESTAMP","TIMEZONE","TO_TIMESTAMP","TRUNC","AddBBox","DropBBox","GeometryType","ST_AddPoint","ST_Angle","ST_Area","ST_AsBinary","ST_AsEWKB","ST_AsEWKT","ST_AsGeoJSON","ST_AsText","ST_Azimuth","ST_Boundary","ST_Collect","ST_Contains","ST_ContainsProperly","ST_ConvexHull","ST_CoveredBy","ST_Covers","ST_Crosses","ST_Dimension","ST_Disjoint","ST_Distance","ST_DistanceSphere","ST_DWithin","ST_EndPoint","ST_Envelope","ST_Equals","ST_ExteriorRing","ST_Force2D","ST_Force3D","ST_Force3DM","ST_Force3DZ","ST_Force4D","ST_GeometryN","ST_GeometryType","ST_GeomFromEWKB","ST_GeomFromEWKT","ST_GeomFromText","ST_GeomFromWKB","ST_InteriorRingN","ST_Intersects","ST_IsPolygonCCW","ST_IsPolygonCW","ST_IsClosed","ST_IsCollection","ST_IsEmpty","ST_IsSimple","ST_IsValid","ST_Length","ST_LengthSphere","ST_Length2D","ST_LineFromMultiPoint","ST_LineInterpolatePoint","ST_M","ST_MakeEnvelope","ST_MakeLine","ST_MakePoint","ST_MakePolygon","ST_MemSize","ST_MMax","ST_MMin","ST_Multi","ST_NDims","ST_NPoints","ST_NRings","ST_NumGeometries","ST_NumInteriorRings","ST_NumPoints","ST_Perimeter","ST_Perimeter2D","ST_Point","ST_PointN","ST_Points","ST_Polygon","ST_RemovePoint","ST_Reverse","ST_SetPoint","ST_SetSRID","ST_Simplify","ST_SRID","ST_StartPoint","ST_Touches","ST_Within","ST_X","ST_XMax","ST_XMin","ST_Y","ST_YMax","ST_YMin","ST_Z","ST_ZMax","ST_ZMin","SupportsBBox","CHECKSUM","FUNC_SHA1","FNV_HASH","MD5","SHA","SHA1","SHA2","HLL","HLL_CREATE_SKETCH","HLL_CARDINALITY","HLL_COMBINE","IS_VALID_JSON","IS_VALID_JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_EXTRACT_ARRAY_ELEMENT_TEXT","JSON_EXTRACT_PATH_TEXT","JSON_PARSE","JSON_SERIALIZE","ABS","ACOS","ASIN","ATAN","ATAN2","CBRT","CEILING","CEIL","COS","COT","DEGREES","DEXP","DLOG1","DLOG10","EXP","FLOOR","LN","LOG","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SIN","SIGN","SQRT","TAN","TO_HEX","TRUNC","EXPLAIN_MODEL","ASCII","BPCHARCMP","BTRIM","BTTEXT_PATTERN_CMP","CHAR_LENGTH","CHARACTER_LENGTH","CHARINDEX","CHR","COLLATE","CONCAT","CRC32","DIFFERENCE","INITCAP","LEFT","RIGHT","LEN","LENGTH","LOWER","LPAD","RPAD","LTRIM","OCTETINDEX","OCTET_LENGTH","POSITION","QUOTE_IDENT","QUOTE_LITERAL","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","REPLICATE","REVERSE","RTRIM","SOUNDEX","SPLIT_PART","STRPOS","STRTOL","SUBSTRING","TEXTLEN","TRANSLATE","TRIM","UPPER","decimal_precision","decimal_scale","is_array","is_bigint","is_boolean","is_char","is_decimal","is_float","is_integer","is_object","is_scalar","is_smallint","is_varchar","json_typeof","AVG","COUNT","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAST_VALUE","LAG","LEAD","LISTAGG","MAX","MEDIAN","MIN","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","CAST","CONVERT","TO_CHAR","TO_DATE","TO_NUMBER","TEXT_TO_INT_ALT","TEXT_TO_NUMERIC_ALT","CHANGE_QUERY_PRIORITY","CHANGE_SESSION_PRIORITY","CHANGE_USER_PRIORITY","CURRENT_SETTING","PG_CANCEL_BACKEND","PG_TERMINATE_BACKEND","REBOOT_CLUSTER","SET_CONFIG","CURRENT_AWS_ACCOUNT","CURRENT_DATABASE","CURRENT_NAMESPACE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","CURRENT_USER_ID","HAS_ASSUMEROLE_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_TABLE_PRIVILEGE","PG_BACKEND_PID","PG_GET_COLS","PG_GET_GRANTEE_BY_IAM_ROLE","PG_GET_IAM_ROLE_BY_USER","PG_GET_LATE_BINDING_VIEW_COLS","PG_LAST_COPY_COUNT","PG_LAST_COPY_ID","PG_LAST_UNLOAD_ID","PG_LAST_QUERY_ID","PG_LAST_UNLOAD_COUNT","SESSION_USER","SLICE_NUM","USER","VERSION"],g0=["AES128","AES256","ALL","ALLOWOVERWRITE","ANY","AS","ASC","AUTHORIZATION","BACKUP","BETWEEN","BINARY","BOTH","CHECK","COLUMN","CONSTRAINT","CREATE","CROSS","DEFAULT","DEFERRABLE","DEFLATE","DEFRAG","DESC","DISABLE","DISTINCT","DO","ENABLE","ENCODE","ENCRYPT","ENCRYPTION","EXPLICIT","FALSE","FOR","FOREIGN","FREEZE","FROM","FULL","GLOBALDICT256","GLOBALDICT64K","GROUP","IDENTITY","IGNORE","ILIKE","IN","INITIALLY","INNER","INTO","IS","ISNULL","LANGUAGE","LEADING","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","LUN","LUNS","MINUS","NATURAL","NEW","NOT","NOTNULL","NULL","NULLS","OFF","OFFLINE","OFFSET","OID","OLD","ON","ONLY","OPEN","ORDER","OUTER","OVERLAPS","PARALLEL","PARTITION","PERCENT","PERMISSIONS","PLACING","PRIMARY","RECOVER","REFERENCES","REJECTLOG","RESORT","RESPECT","RESTORE","SIMILAR","SNAPSHOT","SOME","SYSTEM","TABLE","TAG","TDES","THEN","TIMESTAMP","TO","TOP","TRAILING","TRUE","UNIQUE","USING","VERBOSE","WALLET","WITHOUT","ACCEPTANYDATE","ACCEPTINVCHARS","BLANKSASNULL","DATEFORMAT","EMPTYASNULL","ENCODING","ESCAPE","EXPLICIT_IDS","FILLRECORD","IGNOREBLANKLINES","IGNOREHEADER","REMOVEQUOTES","ROUNDEC","TIMEFORMAT","TRIMBLANKS","TRUNCATECOLUMNS","COMPROWS","COMPUPDATE","MAXERROR","NOLOAD","STATUPDATE","FORMAT","CSV","DELIMITER","FIXEDWIDTH","SHAPEFILE","AVRO","JSON","PARQUET","ORC","ACCESS_KEY_ID","CREDENTIALS","ENCRYPTED","IAM_ROLE","MASTER_SYMMETRIC_KEY","SECRET_ACCESS_KEY","SESSION_TOKEN","BZIP2","GZIP","LZOP","ZSTD","MANIFEST","READRATIO","REGION","SSH","RAW","AZ64","BYTEDICT","DELTA","DELTA32K","LZO","MOSTLY8","MOSTLY16","MOSTLY32","RUNLENGTH","TEXT255","TEXT32K","CATALOG_ROLE","SECRET_ARN","EXTERNAL","AUTO","EVEN","KEY","PREDICATE","COMPRESSION"],x0=["ARRAY","BIGINT","BPCHAR","CHAR","CHARACTER VARYING","CHARACTER","DECIMAL","INT","INT2","INT4","INT8","INTEGER","NCHAR","NUMERIC","NVARCHAR","SMALLINT","TEXT","VARBYTE","VARCHAR"],v0=B(["SELECT [ALL | DISTINCT]"]),y0=B(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET"]),Gu=B(["CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE | MATERIALIZED] VIEW","UPDATE","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ALTER TABLE APPEND","ADD [COLUMN]","DROP [COLUMN]","RENAME TO","RENAME COLUMN","ALTER COLUMN","TYPE","ENCODE","TRUNCATE [TABLE]","ABORT","ALTER DATABASE","ALTER DATASHARE","ALTER DEFAULT PRIVILEGES","ALTER GROUP","ALTER MATERIALIZED VIEW","ALTER PROCEDURE","ALTER SCHEMA","ALTER USER","ANALYSE","ANALYZE","ANALYSE COMPRESSION","ANALYZE COMPRESSION","BEGIN","CALL","CANCEL","CLOSE","COMMIT","COPY","CREATE DATABASE","CREATE DATASHARE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL SCHEMA","CREATE EXTERNAL TABLE","CREATE FUNCTION","CREATE GROUP","CREATE LIBRARY","CREATE MODEL","CREATE PROCEDURE","CREATE SCHEMA","CREATE USER","DEALLOCATE","DECLARE","DESC DATASHARE","DROP DATABASE","DROP DATASHARE","DROP FUNCTION","DROP GROUP","DROP LIBRARY","DROP MODEL","DROP MATERIALIZED VIEW","DROP PROCEDURE","DROP SCHEMA","DROP USER","DROP VIEW","DROP","EXECUTE","EXPLAIN","FETCH","GRANT","LOCK","PREPARE","REFRESH MATERIALIZED VIEW","RESET","REVOKE","ROLLBACK","SELECT INTO","SET SESSION AUTHORIZATION","SET SESSION CHARACTERISTICS","SHOW","SHOW EXTERNAL TABLE","SHOW MODEL","SHOW DATASHARES","SHOW PROCEDURE","SHOW TABLE","SHOW VIEW","START TRANSACTION","UNLOAD","VACUUM"]),V0=B(["UNION [ALL]","EXCEPT","INTERSECT","MINUS"]),W0=B(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),X0=B(["NULL AS","DATA CATALOG","HIVE METASTORE","{ROWS | RANGE} BETWEEN"]),b0={name:"redshift",tokenizerOptions:{reservedSelect:v0,reservedClauses:[...y0,...Gu],reservedSetOperations:V0,reservedJoins:W0,reservedPhrases:X0,reservedKeywords:g0,reservedDataTypes:x0,reservedFunctionNames:Y0,stringTypes:["''-qq"],identTypes:['""-qq'],identChars:{first:"#"},paramTypes:{numbered:["$"]},operators:["^","%","@","|/","||/","&","|","~","<<",">>","||","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:Gu}},w0=["ADD","AFTER","ALL","ALTER","ANALYZE","AND","ANTI","ANY","ARCHIVE","AS","ASC","AT","AUTHORIZATION","BETWEEN","BOTH","BUCKET","BUCKETS","BY","CACHE","CASCADE","CAST","CHANGE","CHECK","CLEAR","CLUSTER","CLUSTERED","CODEGEN","COLLATE","COLLECTION","COLUMN","COLUMNS","COMMENT","COMMIT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONSTRAINT","COST","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATA","DATABASE","DATABASES","DAY","DBPROPERTIES","DEFINED","DELETE","DELIMITED","DESC","DESCRIBE","DFS","DIRECTORIES","DIRECTORY","DISTINCT","DISTRIBUTE","DIV","DROP","ESCAPE","ESCAPED","EXCEPT","EXCHANGE","EXISTS","EXPORT","EXTENDED","EXTERNAL","EXTRACT","FALSE","FETCH","FIELDS","FILTER","FILEFORMAT","FIRST","FIRST_VALUE","FOLLOWING","FOR","FOREIGN","FORMAT","FORMATTED","FULL","FUNCTION","FUNCTIONS","GLOBAL","GRANT","GROUP","GROUPING","HOUR","IF","IGNORE","IMPORT","IN","INDEX","INDEXES","INNER","INPATH","INPUTFORMAT","INTERSECT","INTO","IS","ITEMS","KEYS","LAST","LAST_VALUE","LATERAL","LAZY","LEADING","LEFT","LIKE","LINES","LIST","LOCAL","LOCATION","LOCK","LOCKS","LOGICAL","MACRO","MATCHED","MERGE","MINUTE","MONTH","MSCK","NAMESPACE","NAMESPACES","NATURAL","NO","NOT","NULL","NULLS","OF","ONLY","OPTION","OPTIONS","OR","ORDER","OUT","OUTER","OUTPUTFORMAT","OVER","OVERLAPS","OVERLAY","OVERWRITE","OWNER","PARTITION","PARTITIONED","PARTITIONS","PERCENT","PLACING","POSITION","PRECEDING","PRIMARY","PRINCIPALS","PROPERTIES","PURGE","QUERY","RANGE","RECORDREADER","RECORDWRITER","RECOVER","REDUCE","REFERENCES","RENAME","REPAIR","REPLACE","RESPECT","RESTRICT","REVOKE","RIGHT","RLIKE","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","SCHEMA","SECOND","SELECT","SEMI","SEPARATED","SERDE","SERDEPROPERTIES","SESSION_USER","SETS","SHOW","SKEWED","SOME","SORT","SORTED","START","STATISTICS","STORED","STRATIFY","SUBSTR","SUBSTRING","TABLE","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","THEN","TO","TOUCH","TRAILING","TRANSACTION","TRANSACTIONS","TRIM","TRUE","TRUNCATE","UNARCHIVE","UNBOUNDED","UNCACHE","UNIQUE","UNKNOWN","UNLOCK","UNSET","USE","USER","USING","VIEW","WINDOW","YEAR","ANALYSE","ARRAY_ZIP","COALESCE","CONTAINS","CONVERT","DAYS","DAY_HOUR","DAY_MINUTE","DAY_SECOND","DECODE","DEFAULT","DISTINCTROW","ENCODE","EXPLODE","EXPLODE_OUTER","FIXED","GREATEST","GROUP_CONCAT","HOURS","HOUR_MINUTE","HOUR_SECOND","IFNULL","LEAST","LEVEL","MINUTE_SECOND","NULLIF","OFFSET","ON","OPTIMIZE","REGEXP","SEPARATOR","SIZE","TYPE","TYPES","UNSIGNED","VARIABLES","YEAR_MONTH"],K0=["ARRAY","BIGINT","BINARY","BOOLEAN","BYTE","CHAR","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","LONG","MAP","NUMERIC","REAL","SHORT","SMALLINT","STRING","STRUCT","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TINYINT","VARCHAR"],J0=["APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COUNT","COUNT","COUNT_IF","COUNT_MIN_SKETCH","COVAR_POP","COVAR_SAMP","EVERY","FIRST","FIRST_VALUE","GROUPING","GROUPING_ID","KURTOSIS","LAST","LAST_VALUE","MAX","MAX_BY","MEAN","MIN","MIN_BY","PERCENTILE","PERCENTILE","PERCENTILE_APPROX","SKEWNESS","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","CUME_DIST","DENSE_RANK","LAG","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","ARRAY","ARRAY_CONTAINS","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_UNION","ARRAYS_OVERLAP","ARRAYS_ZIP","FLATTEN","SEQUENCE","SHUFFLE","SLICE","SORT_ARRAY","ELEMENT_AT","ELEMENT_AT","MAP_CONCAT","MAP_ENTRIES","MAP_FROM_ARRAYS","MAP_FROM_ENTRIES","MAP_KEYS","MAP_VALUES","STR_TO_MAP","ADD_MONTHS","CURRENT_DATE","CURRENT_DATE","CURRENT_TIMESTAMP","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","DATE_ADD","DATE_FORMAT","DATE_FROM_UNIX_DATE","DATE_PART","DATE_SUB","DATE_TRUNC","DATEDIFF","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MAKE_DATE","MAKE_DT_INTERVAL","MAKE_INTERVAL","MAKE_TIMESTAMP","MAKE_YM_INTERVAL","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","NOW","QUARTER","SECOND","SESSION_WINDOW","TIMESTAMP_MICROS","TIMESTAMP_MILLIS","TIMESTAMP_SECONDS","TO_DATE","TO_TIMESTAMP","TO_UNIX_TIMESTAMP","TO_UTC_TIMESTAMP","TRUNC","UNIX_DATE","UNIX_MICROS","UNIX_MILLIS","UNIX_SECONDS","UNIX_TIMESTAMP","WEEKDAY","WEEKOFYEAR","WINDOW","YEAR","FROM_JSON","GET_JSON_OBJECT","JSON_ARRAY_LENGTH","JSON_OBJECT_KEYS","JSON_TUPLE","SCHEMA_OF_JSON","TO_JSON","ABS","ACOS","ACOSH","AGGREGATE","ARRAY_SORT","ASCII","ASIN","ASINH","ASSERT_TRUE","ATAN","ATAN2","ATANH","BASE64","BIN","BIT_COUNT","BIT_GET","BIT_LENGTH","BROUND","BTRIM","CARDINALITY","CBRT","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONV","COS","COSH","COT","CRC32","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_USER","DEGREES","ELT","EXP","EXPM1","FACTORIAL","FIND_IN_SET","FLOOR","FORALL","FORMAT_NUMBER","FORMAT_STRING","FROM_CSV","GETBIT","HASH","HEX","HYPOT","INITCAP","INLINE","INLINE_OUTER","INPUT_FILE_BLOCK_LENGTH","INPUT_FILE_BLOCK_START","INPUT_FILE_NAME","INSTR","ISNAN","ISNOTNULL","ISNULL","JAVA_METHOD","LCASE","LEFT","LENGTH","LEVENSHTEIN","LN","LOCATE","LOG","LOG10","LOG1P","LOG2","LOWER","LPAD","LTRIM","MAP_FILTER","MAP_ZIP_WITH","MD5","MOD","MONOTONICALLY_INCREASING_ID","NAMED_STRUCT","NANVL","NEGATIVE","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARSE_URL","PI","PMOD","POSEXPLODE","POSEXPLODE_OUTER","POSITION","POSITIVE","POW","POWER","PRINTF","RADIANS","RAISE_ERROR","RAND","RANDN","RANDOM","REFLECT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_REPLACE","REPEAT","REPLACE","REVERSE","RIGHT","RINT","ROUND","RPAD","RTRIM","SCHEMA_OF_CSV","SENTENCES","SHA","SHA1","SHA2","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIGNUM","SIN","SINH","SOUNDEX","SPACE","SPARK_PARTITION_ID","SPLIT","SQRT","STACK","SUBSTR","SUBSTRING","SUBSTRING_INDEX","TAN","TANH","TO_CSV","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRY_ADD","TRY_DIVIDE","TYPEOF","UCASE","UNBASE64","UNHEX","UPPER","UUID","VERSION","WIDTH_BUCKET","XPATH","XPATH_BOOLEAN","XPATH_DOUBLE","XPATH_FLOAT","XPATH_INT","XPATH_LONG","XPATH_NUMBER","XPATH_SHORT","XPATH_STRING","XXHASH64","ZIP_WITH","CAST","COALESCE","NULLIF"],$0=B(["SELECT [ALL | DISTINCT]"]),Q0=B(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT [INTO | OVERWRITE] [TABLE]","VALUES","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),Bu=B(["CREATE [EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD COLUMNS","DROP {COLUMN | COLUMNS}","RENAME TO","RENAME COLUMN","ALTER COLUMN","TRUNCATE TABLE","LATERAL VIEW","ALTER DATABASE","ALTER VIEW","CREATE DATABASE","CREATE FUNCTION","DROP DATABASE","DROP FUNCTION","DROP VIEW","REPAIR TABLE","USE DATABASE","TABLESAMPLE","PIVOT","TRANSFORM","EXPLAIN","ADD FILE","ADD JAR","ANALYZE TABLE","CACHE TABLE","CLEAR CACHE","DESCRIBE DATABASE","DESCRIBE FUNCTION","DESCRIBE QUERY","DESCRIBE TABLE","LIST FILE","LIST JAR","REFRESH","REFRESH TABLE","REFRESH FUNCTION","RESET","SHOW COLUMNS","SHOW CREATE TABLE","SHOW DATABASES","SHOW FUNCTIONS","SHOW PARTITIONS","SHOW TABLE EXTENDED","SHOW TABLES","SHOW TBLPROPERTIES","SHOW VIEWS","UNCACHE TABLE"]),q0=B(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),k0=B(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT] {ANTI | SEMI} JOIN","NATURAL [LEFT] {ANTI | SEMI} JOIN"]),Z0=B(["ON DELETE","ON UPDATE","CURRENT ROW","{ROWS | RANGE} BETWEEN"]),z0={name:"spark",tokenizerOptions:{reservedSelect:$0,reservedClauses:[...Q0,...Bu],reservedSetOperations:q0,reservedJoins:k0,reservedPhrases:Z0,supportsXor:!0,reservedKeywords:w0,reservedDataTypes:K0,reservedFunctionNames:J0,extraParens:["[]"],stringTypes:["''-bs",'""-bs',{quote:"''-raw",prefixes:["R","X"],requirePrefix:!0},{quote:'""-raw',prefixes:["R","X"],requirePrefix:!0}],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||","->"],postProcess:j0},formatOptions:{onelineClauses:Bu}};function j0(E){return E.map((r,n)=>{let A=E[n-1]||jT,S=E[n+1]||jT;return fT.WINDOW(r)&&S.type==="OPEN_PAREN"?QE(vE({},r),{type:"RESERVED_FUNCTION_NAME"}):r.text==="ITEMS"&&r.type==="RESERVED_KEYWORD"&&!(A.text==="COLLECTION"&&S.text==="TERMINATED")?QE(vE({},r),{type:"IDENTIFIER",text:r.raw}):r})}var Eh=["ABS","CHANGES","CHAR","COALESCE","FORMAT","GLOB","HEX","IFNULL","IIF","INSTR","LAST_INSERT_ROWID","LENGTH","LIKE","LIKELIHOOD","LIKELY","LOAD_EXTENSION","LOWER","LTRIM","NULLIF","PRINTF","QUOTE","RANDOM","RANDOMBLOB","REPLACE","ROUND","RTRIM","SIGN","SOUNDEX","SQLITE_COMPILEOPTION_GET","SQLITE_COMPILEOPTION_USED","SQLITE_OFFSET","SQLITE_SOURCE_ID","SQLITE_VERSION","SUBSTR","SUBSTRING","TOTAL_CHANGES","TRIM","TYPEOF","UNICODE","UNLIKELY","UPPER","ZEROBLOB","AVG","COUNT","GROUP_CONCAT","MAX","MIN","SUM","TOTAL","DATE","TIME","DATETIME","JULIANDAY","UNIXEPOCH","STRFTIME","row_number","rank","dense_rank","percent_rank","cume_dist","ntile","lag","lead","first_value","last_value","nth_value","ACOS","ACOSH","ASIN","ASINH","ATAN","ATAN2","ATANH","CEIL","CEILING","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG","LOG10","LOG2","MOD","PI","POW","POWER","RADIANS","SIN","SINH","SQRT","TAN","TANH","TRUNC","JSON","JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_ARRAY_LENGTH","JSON_EXTRACT","JSON_INSERT","JSON_OBJECT","JSON_PATCH","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_TYPE","JSON_TYPE","JSON_VALID","JSON_QUOTE","JSON_GROUP_ARRAY","JSON_GROUP_OBJECT","JSON_EACH","JSON_TREE","CAST"],eh=["ABORT","ACTION","ADD","AFTER","ALL","ALTER","AND","ARE","ALWAYS","ANALYZE","AS","ASC","ATTACH","AUTOINCREMENT","BEFORE","BEGIN","BETWEEN","BY","CASCADE","CASE","CAST","CHECK","COLLATE","COLUMN","COMMIT","CONFLICT","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATABASE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DESC","DETACH","DISTINCT","DO","DROP","EACH","ELSE","END","ESCAPE","EXCEPT","EXCLUDE","EXCLUSIVE","EXISTS","EXPLAIN","FAIL","FILTER","FIRST","FOLLOWING","FOR","FOREIGN","FROM","FULL","GENERATED","GLOB","GROUP","GROUPS","HAVING","IF","IGNORE","IMMEDIATE","IN","INDEX","INDEXED","INITIALLY","INNER","INSERT","INSTEAD","INTERSECT","INTO","IS","ISNULL","JOIN","KEY","LAST","LEFT","LIKE","LIMIT","MATCH","MATERIALIZED","NATURAL","NO","NOT","NOTHING","NOTNULL","NULL","NULLS","OF","OFFSET","ON","ONLY","OPEN","OR","ORDER","OTHERS","OUTER","OVER","PARTITION","PLAN","PRAGMA","PRECEDING","PRIMARY","QUERY","RAISE","RANGE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELEASE","RENAME","REPLACE","RESTRICT","RETURNING","RIGHT","ROLLBACK","ROW","ROWS","SAVEPOINT","SELECT","SET","TABLE","TEMP","TEMPORARY","THEN","TIES","TO","TRANSACTION","TRIGGER","UNBOUNDED","UNION","UNIQUE","UPDATE","USING","VACUUM","VALUES","VIEW","VIRTUAL","WHEN","WHERE","WINDOW","WITH","WITHOUT"],Th=["ANY","ARRAY","BLOB","CHARACTER","DECIMAL","INT","INTEGER","NATIVE CHARACTER","NCHAR","NUMERIC","NVARCHAR","REAL","TEXT","VARCHAR","VARYING CHARACTER"],rh=B(["SELECT [ALL | DISTINCT]"]),th=B(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO","REPLACE INTO","VALUES","SET"]),mu=B(["CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]","CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]","UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]","ON CONFLICT","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME [COLUMN]","RENAME TO","SET SCHEMA"]),nh=B(["UNION [ALL]","EXCEPT","INTERSECT"]),Ah=B(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Rh=B(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN"]),Sh={name:"sqlite",tokenizerOptions:{reservedSelect:rh,reservedClauses:[...th,...mu],reservedSetOperations:nh,reservedJoins:Ah,reservedPhrases:Rh,reservedKeywords:eh,reservedDataTypes:Th,reservedFunctionNames:Eh,stringTypes:["''-qq",{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``","[]"],paramTypes:{positional:!0,numbered:["?"],named:[":","@","$"]},operators:["%","~","&","|","<<",">>","==","->","->>","||"]},formatOptions:{onelineClauses:mu}},ih=["GROUPING","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","ROW_NUMBER","POSITION","OCCURRENCES_REGEX","POSITION_REGEX","EXTRACT","CHAR_LENGTH","CHARACTER_LENGTH","OCTET_LENGTH","CARDINALITY","ABS","MOD","LN","EXP","POWER","SQRT","FLOOR","CEIL","CEILING","WIDTH_BUCKET","SUBSTRING","SUBSTRING_REGEX","UPPER","LOWER","CONVERT","TRANSLATE","TRANSLATE_REGEX","TRIM","OVERLAY","NORMALIZE","SPECIFICTYPE","CURRENT_DATE","CURRENT_TIME","LOCALTIME","CURRENT_TIMESTAMP","LOCALTIMESTAMP","COUNT","AVG","MAX","MIN","SUM","STDDEV_POP","STDDEV_SAMP","VAR_SAMP","VAR_POP","COLLECT","FUSION","INTERSECTION","COVAR_POP","COVAR_SAMP","CORR","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","PERCENTILE_CONT","PERCENTILE_DISC","CAST","COALESCE","NULLIF","ROUND","SIN","COS","TAN","ASIN","ACOS","ATAN"],Oh=["ALL","ALLOCATE","ALTER","ANY","ARE","AS","ASENSITIVE","ASYMMETRIC","AT","ATOMIC","AUTHORIZATION","BEGIN","BETWEEN","BOTH","BY","CALL","CALLED","CASCADED","CAST","CHECK","CLOSE","COALESCE","COLLATE","COLUMN","COMMIT","CONDITION","CONNECT","CONSTRAINT","CORRESPONDING","CREATE","CROSS","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DEFAULT_TRANSFORM_GROUP","CURRENT_PATH","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TRANSFORM_GROUP_FOR_TYPE","CURRENT_USER","CURSOR","CYCLE","DEALLOCATE","DAY","DECLARE","DEFAULT","DELETE","DEREF","DESCRIBE","DETERMINISTIC","DISCONNECT","DISTINCT","DROP","DYNAMIC","EACH","ELEMENT","END-EXEC","ESCAPE","EVERY","EXCEPT","EXEC","EXECUTE","EXISTS","EXTERNAL","FALSE","FETCH","FILTER","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GET","GLOBAL","GRANT","GROUP","HAVING","HOLD","HOUR","IDENTITY","IN","INDICATOR","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTO","IS","LANGUAGE","LARGE","LATERAL","LEADING","LEFT","LIKE","LIKE_REGEX","LOCAL","MATCH","MEMBER","MERGE","METHOD","MINUTE","MODIFIES","MODULE","MONTH","NATURAL","NEW","NO","NONE","NOT","NULL","NULLIF","OF","OLD","ON","ONLY","OPEN","ORDER","OUT","OUTER","OVER","OVERLAPS","PARAMETER","PARTITION","PRECISION","PREPARE","PRIMARY","PROCEDURE","RANGE","READS","REAL","RECURSIVE","REF","REFERENCES","REFERENCING","RELEASE","RESULT","RETURN","RETURNS","REVOKE","RIGHT","ROLLBACK","ROLLUP","ROW","ROWS","SAVEPOINT","SCOPE","SCROLL","SEARCH","SECOND","SELECT","SENSITIVE","SESSION_USER","SET","SIMILAR","SOME","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","START","STATIC","SUBMULTISET","SYMMETRIC","SYSTEM","SYSTEM_USER","TABLE","TABLESAMPLE","THEN","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TRAILING","TRANSLATION","TREAT","TRIGGER","TRUE","UESCAPE","UNION","UNIQUE","UNKNOWN","UNNEST","UPDATE","USER","USING","VALUE","VALUES","WHENEVER","WINDOW","WITHIN","WITHOUT","YEAR"],Ih=["ARRAY","BIGINT","BINARY LARGE OBJECT","BINARY VARYING","BINARY","BLOB","BOOLEAN","CHAR LARGE OBJECT","CHAR VARYING","CHAR","CHARACTER LARGE OBJECT","CHARACTER VARYING","CHARACTER","CLOB","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MULTISET","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER LARGE OBJECT","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR LARGE OBJECT","NCHAR VARYING","NCHAR","NCLOB","NUMERIC","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],Nh=B(["SELECT [ALL | DISTINCT]"]),uh=B(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET"]),Hu=B(["CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE","CREATE [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","DELETE FROM","DROP TABLE","ALTER TABLE","ADD COLUMN","DROP [COLUMN]","RENAME COLUMN","RENAME TO","ALTER [COLUMN]","{SET | DROP} DEFAULT","ADD SCOPE","DROP SCOPE {CASCADE | RESTRICT}","RESTART WITH","TRUNCATE TABLE","SET SCHEMA"]),sh=B(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),Ch=B(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),oh=B(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),ah={name:"sql",tokenizerOptions:{reservedSelect:Nh,reservedClauses:[...uh,...Hu],reservedSetOperations:sh,reservedJoins:Ch,reservedPhrases:oh,reservedKeywords:Oh,reservedDataTypes:Ih,reservedFunctionNames:ih,stringTypes:[{quote:"''-qq-bs",prefixes:["N","U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``"],paramTypes:{positional:!0},operators:["||"]},formatOptions:{onelineClauses:Hu}},Lh=["ABS","ACOS","ALL_MATCH","ANY_MATCH","APPROX_DISTINCT","APPROX_MOST_FREQUENT","APPROX_PERCENTILE","APPROX_SET","ARBITRARY","ARRAYS_OVERLAP","ARRAY_AGG","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_SORT","ARRAY_UNION","ASIN","ATAN","ATAN2","AT_TIMEZONE","AVG","BAR","BETA_CDF","BING_TILE","BING_TILES_AROUND","BING_TILE_AT","BING_TILE_COORDINATES","BING_TILE_POLYGON","BING_TILE_QUADKEY","BING_TILE_ZOOM_LEVEL","BITWISE_AND","BITWISE_AND_AGG","BITWISE_LEFT_SHIFT","BITWISE_NOT","BITWISE_OR","BITWISE_OR_AGG","BITWISE_RIGHT_SHIFT","BITWISE_RIGHT_SHIFT_ARITHMETIC","BITWISE_XOR","BIT_COUNT","BOOL_AND","BOOL_OR","CARDINALITY","CAST","CBRT","CEIL","CEILING","CHAR2HEXINT","CHECKSUM","CHR","CLASSIFY","COALESCE","CODEPOINT","COLOR","COMBINATIONS","CONCAT","CONCAT_WS","CONTAINS","CONTAINS_SEQUENCE","CONVEX_HULL_AGG","CORR","COS","COSH","COSINE_SIMILARITY","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CRC32","CUME_DIST","CURRENT_CATALOG","CURRENT_DATE","CURRENT_GROUPS","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","DATE","DATE_ADD","DATE_DIFF","DATE_FORMAT","DATE_PARSE","DATE_TRUNC","DAY","DAY_OF_MONTH","DAY_OF_WEEK","DAY_OF_YEAR","DEGREES","DENSE_RANK","DOW","DOY","E","ELEMENT_AT","EMPTY_APPROX_SET","EVALUATE_CLASSIFIER_PREDICTIONS","EVERY","EXP","EXTRACT","FEATURES","FILTER","FIRST_VALUE","FLATTEN","FLOOR","FORMAT","FORMAT_DATETIME","FORMAT_NUMBER","FROM_BASE","FROM_BASE32","FROM_BASE64","FROM_BASE64URL","FROM_BIG_ENDIAN_32","FROM_BIG_ENDIAN_64","FROM_ENCODED_POLYLINE","FROM_GEOJSON_GEOMETRY","FROM_HEX","FROM_IEEE754_32","FROM_IEEE754_64","FROM_ISO8601_DATE","FROM_ISO8601_TIMESTAMP","FROM_ISO8601_TIMESTAMP_NANOS","FROM_UNIXTIME","FROM_UNIXTIME_NANOS","FROM_UTF8","GEOMETRIC_MEAN","GEOMETRY_FROM_HADOOP_SHAPE","GEOMETRY_INVALID_REASON","GEOMETRY_NEAREST_POINTS","GEOMETRY_TO_BING_TILES","GEOMETRY_UNION","GEOMETRY_UNION_AGG","GREATEST","GREAT_CIRCLE_DISTANCE","HAMMING_DISTANCE","HASH_COUNTS","HISTOGRAM","HMAC_MD5","HMAC_SHA1","HMAC_SHA256","HMAC_SHA512","HOUR","HUMAN_READABLE_SECONDS","IF","INDEX","INFINITY","INTERSECTION_CARDINALITY","INVERSE_BETA_CDF","INVERSE_NORMAL_CDF","IS_FINITE","IS_INFINITE","IS_JSON_SCALAR","IS_NAN","JACCARD_INDEX","JSON_ARRAY_CONTAINS","JSON_ARRAY_GET","JSON_ARRAY_LENGTH","JSON_EXISTS","JSON_EXTRACT","JSON_EXTRACT_SCALAR","JSON_FORMAT","JSON_PARSE","JSON_QUERY","JSON_SIZE","JSON_VALUE","KURTOSIS","LAG","LAST_DAY_OF_MONTH","LAST_VALUE","LEAD","LEARN_CLASSIFIER","LEARN_LIBSVM_CLASSIFIER","LEARN_LIBSVM_REGRESSOR","LEARN_REGRESSOR","LEAST","LENGTH","LEVENSHTEIN_DISTANCE","LINE_INTERPOLATE_POINT","LINE_INTERPOLATE_POINTS","LINE_LOCATE_POINT","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","LUHN_CHECK","MAKE_SET_DIGEST","MAP","MAP_AGG","MAP_CONCAT","MAP_ENTRIES","MAP_FILTER","MAP_FROM_ENTRIES","MAP_KEYS","MAP_UNION","MAP_VALUES","MAP_ZIP_WITH","MAX","MAX_BY","MD5","MERGE","MERGE_SET_DIGEST","MILLISECOND","MIN","MINUTE","MIN_BY","MOD","MONTH","MULTIMAP_AGG","MULTIMAP_FROM_ENTRIES","MURMUR3","NAN","NGRAMS","NONE_MATCH","NORMALIZE","NORMAL_CDF","NOW","NTH_VALUE","NTILE","NULLIF","NUMERIC_HISTOGRAM","OBJECTID","OBJECTID_TIMESTAMP","PARSE_DATA_SIZE","PARSE_DATETIME","PARSE_DURATION","PERCENT_RANK","PI","POSITION","POW","POWER","QDIGEST_AGG","QUARTER","RADIANS","RAND","RANDOM","RANK","REDUCE","REDUCE_AGG","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGRESS","REGR_INTERCEPT","REGR_SLOPE","RENDER","REPEAT","REPLACE","REVERSE","RGB","ROUND","ROW_NUMBER","RPAD","RTRIM","SECOND","SEQUENCE","SHA1","SHA256","SHA512","SHUFFLE","SIGN","SIMPLIFY_GEOMETRY","SIN","SKEWNESS","SLICE","SOUNDEX","SPATIAL_PARTITIONING","SPATIAL_PARTITIONS","SPLIT","SPLIT_PART","SPLIT_TO_MAP","SPLIT_TO_MULTIMAP","SPOOKY_HASH_V2_32","SPOOKY_HASH_V2_64","SQRT","STARTS_WITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRPOS","ST_AREA","ST_ASBINARY","ST_ASTEXT","ST_BOUNDARY","ST_BUFFER","ST_CENTROID","ST_CONTAINS","ST_CONVEXHULL","ST_COORDDIM","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_ENDPOINT","ST_ENVELOPE","ST_ENVELOPEASPTS","ST_EQUALS","ST_EXTERIORRING","ST_GEOMETRIES","ST_GEOMETRYFROMTEXT","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMBINARY","ST_INTERIORRINGN","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISRING","ST_ISSIMPLE","ST_ISVALID","ST_LENGTH","ST_LINEFROMTEXT","ST_LINESTRING","ST_MULTIPOINT","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINT","ST_POINTN","ST_POINTS","ST_POLYGON","ST_RELATE","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_TOUCHES","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","SUBSTR","SUBSTRING","SUM","TAN","TANH","TDIGEST_AGG","TIMESTAMP_OBJECTID","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO_BASE","TO_BASE32","TO_BASE64","TO_BASE64URL","TO_BIG_ENDIAN_32","TO_BIG_ENDIAN_64","TO_CHAR","TO_DATE","TO_ENCODED_POLYLINE","TO_GEOJSON_GEOMETRY","TO_GEOMETRY","TO_HEX","TO_IEEE754_32","TO_IEEE754_64","TO_ISO8601","TO_MILLISECONDS","TO_SPHERICAL_GEOGRAPHY","TO_TIMESTAMP","TO_UNIXTIME","TO_UTF8","TRANSFORM","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRIM_ARRAY","TRUNCATE","TRY","TRY_CAST","TYPEOF","UPPER","URL_DECODE","URL_ENCODE","URL_EXTRACT_FRAGMENT","URL_EXTRACT_HOST","URL_EXTRACT_PARAMETER","URL_EXTRACT_PATH","URL_EXTRACT_PORT","URL_EXTRACT_PROTOCOL","URL_EXTRACT_QUERY","UUID","VALUES_AT_QUANTILES","VALUE_AT_QUANTILE","VARIANCE","VAR_POP","VAR_SAMP","VERSION","WEEK","WEEK_OF_YEAR","WIDTH_BUCKET","WILSON_INTERVAL_LOWER","WILSON_INTERVAL_UPPER","WITH_TIMEZONE","WORD_STEM","XXHASH64","YEAR","YEAR_OF_WEEK","YOW","ZIP","ZIP_WITH","CLASSIFIER","FIRST","LAST","MATCH_NUMBER","NEXT","PERMUTE","PREV"],_h=["ABSENT","ADD","ADMIN","AFTER","ALL","ALTER","ANALYZE","AND","ANY","AS","ASC","AT","AUTHORIZATION","BERNOULLI","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CATALOGS","COLUMN","COLUMNS","COMMENT","COMMIT","COMMITTED","CONDITIONAL","CONSTRAINT","COPARTITION","CREATE","CROSS","CUBE","CURRENT","CURRENT_PATH","CURRENT_ROLE","DATA","DEALLOCATE","DEFAULT","DEFINE","DEFINER","DELETE","DENY","DESC","DESCRIBE","DESCRIPTOR","DISTINCT","DISTRIBUTED","DOUBLE","DROP","ELSE","EMPTY","ENCODING","END","ERROR","ESCAPE","EXCEPT","EXCLUDING","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FINAL","FIRST","FOLLOWING","FOR","FROM","FULL","FUNCTIONS","GRANT","GRANTED","GRANTS","GRAPHVIZ","GROUP","GROUPING","GROUPS","HAVING","IGNORE","IN","INCLUDING","INITIAL","INNER","INPUT","INSERT","INTERSECT","INTERVAL","INTO","INVOKER","IO","IS","ISOLATION","JOIN","JSON","JSON_ARRAY","JSON_OBJECT","KEEP","KEY","KEYS","LAST","LATERAL","LEADING","LEFT","LEVEL","LIKE","LIMIT","LOCAL","LOGICAL","MATCH","MATCHED","MATCHES","MATCH_RECOGNIZE","MATERIALIZED","MEASURES","NATURAL","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NOT","NULL","NULLS","OBJECT","OF","OFFSET","OMIT","ON","ONE","ONLY","OPTION","OR","ORDER","ORDINALITY","OUTER","OUTPUT","OVER","OVERFLOW","PARTITION","PARTITIONS","PASSING","PAST","PATH","PATTERN","PER","PERMUTE","PRECEDING","PRECISION","PREPARE","PRIVILEGES","PROPERTIES","PRUNE","QUOTES","RANGE","READ","RECURSIVE","REFRESH","RENAME","REPEATABLE","RESET","RESPECT","RESTRICT","RETURNING","REVOKE","RIGHT","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","RUNNING","SCALAR","SCHEMA","SCHEMAS","SECURITY","SEEK","SELECT","SERIALIZABLE","SESSION","SET","SETS","SHOW","SKIP","SOME","START","STATS","STRING","SUBSET","SYSTEM","TABLE","TABLES","TABLESAMPLE","TEXT","THEN","TIES","TIME","TIMESTAMP","TO","TRAILING","TRANSACTION","TRUE","TYPE","UESCAPE","UNBOUNDED","UNCOMMITTED","UNCONDITIONAL","UNION","UNIQUE","UNKNOWN","UNMATCHED","UNNEST","UPDATE","USE","USER","USING","UTF16","UTF32","UTF8","VALIDATE","VALUE","VALUES","VERBOSE","VIEW","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","ZONE"],Dh=["BIGINT","INT","INTEGER","SMALLINT","TINYINT","BOOLEAN","DATE","DECIMAL","REAL","DOUBLE","HYPERLOGLOG","QDIGEST","TDIGEST","P4HYPERLOGLOG","INTERVAL","TIMESTAMP","TIME","VARBINARY","VARCHAR","CHAR","ROW","ARRAY","MAP","JSON","JSON2016","IPADDRESS","GEOMETRY","UUID","SETDIGEST","JONIREGEXP","RE2JREGEXP","LIKEPATTERN","COLOR","CODEPOINTS","FUNCTION","JSONPATH"],lh=B(["SELECT [ALL | DISTINCT]"]),ch=B(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","MATCH_RECOGNIZE","MEASURES","ONE ROW PER MATCH","ALL ROWS PER MATCH","AFTER MATCH","PATTERN","SUBSET","DEFINE"]),Yu=B(["CREATE TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [MATERIALIZED] VIEW","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME COLUMN [IF EXISTS]","RENAME TO","SET AUTHORIZATION [USER | ROLE]","SET PROPERTIES","EXECUTE","TRUNCATE TABLE","ALTER SCHEMA","ALTER MATERIALIZED VIEW","ALTER VIEW","CREATE SCHEMA","CREATE ROLE","DROP SCHEMA","DROP MATERIALIZED VIEW","DROP VIEW","DROP ROLE","EXPLAIN","ANALYZE","EXPLAIN ANALYZE","EXPLAIN ANALYZE VERBOSE","USE","DESCRIBE INPUT","DESCRIBE OUTPUT","REFRESH MATERIALIZED VIEW","RESET SESSION","SET SESSION","SET PATH","SET TIME ZONE","SHOW GRANTS","SHOW CREATE TABLE","SHOW CREATE SCHEMA","SHOW CREATE VIEW","SHOW CREATE MATERIALIZED VIEW","SHOW TABLES","SHOW SCHEMAS","SHOW CATALOGS","SHOW COLUMNS","SHOW STATS FOR","SHOW ROLES","SHOW CURRENT ROLES","SHOW ROLE GRANTS","SHOW FUNCTIONS","SHOW SESSION"]),fh=B(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),Ph=B(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),ph=B(["{ROWS | RANGE | GROUPS} BETWEEN","IS [NOT] DISTINCT FROM"]),Mh={name:"trino",tokenizerOptions:{reservedSelect:lh,reservedClauses:[...ch,...Yu],reservedSetOperations:fh,reservedJoins:Ph,reservedPhrases:ph,reservedKeywords:_h,reservedDataTypes:Dh,reservedFunctionNames:Lh,extraParens:["[]","{}"],stringTypes:[{quote:"''-qq",prefixes:["U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq'],paramTypes:{positional:!0},operators:["%","->","=>",":","||","|","^","$"]},formatOptions:{onelineClauses:Yu}},Uh=["APPROX_COUNT_DISTINCT","AVG","CHECKSUM_AGG","COUNT","COUNT_BIG","GROUPING","GROUPING_ID","MAX","MIN","STDEV","STDEVP","SUM","VAR","VARP","CUME_DIST","FIRST_VALUE","LAG","LAST_VALUE","LEAD","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","Collation - COLLATIONPROPERTY","Collation - TERTIARY_WEIGHTS","@@DBTS","@@LANGID","@@LANGUAGE","@@LOCK_TIMEOUT","@@MAX_CONNECTIONS","@@MAX_PRECISION","@@NESTLEVEL","@@OPTIONS","@@REMSERVER","@@SERVERNAME","@@SERVICENAME","@@SPID","@@TEXTSIZE","@@VERSION","CAST","CONVERT","PARSE","TRY_CAST","TRY_CONVERT","TRY_PARSE","ASYMKEY_ID","ASYMKEYPROPERTY","CERTPROPERTY","CERT_ID","CRYPT_GEN_RANDOM","DECRYPTBYASYMKEY","DECRYPTBYCERT","DECRYPTBYKEY","DECRYPTBYKEYAUTOASYMKEY","DECRYPTBYKEYAUTOCERT","DECRYPTBYPASSPHRASE","ENCRYPTBYASYMKEY","ENCRYPTBYCERT","ENCRYPTBYKEY","ENCRYPTBYPASSPHRASE","HASHBYTES","IS_OBJECTSIGNED","KEY_GUID","KEY_ID","KEY_NAME","SIGNBYASYMKEY","SIGNBYCERT","SYMKEYPROPERTY","VERIFYSIGNEDBYCERT","VERIFYSIGNEDBYASYMKEY","@@CURSOR_ROWS","@@FETCH_STATUS","CURSOR_STATUS","DATALENGTH","IDENT_CURRENT","IDENT_INCR","IDENT_SEED","IDENTITY","SQL_VARIANT_PROPERTY","@@DATEFIRST","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_TIMEZONE_ID","DATEADD","DATEDIFF","DATEDIFF_BIG","DATEFROMPARTS","DATENAME","DATEPART","DATETIME2FROMPARTS","DATETIMEFROMPARTS","DATETIMEOFFSETFROMPARTS","DAY","EOMONTH","GETDATE","GETUTCDATE","ISDATE","MONTH","SMALLDATETIMEFROMPARTS","SWITCHOFFSET","SYSDATETIME","SYSDATETIMEOFFSET","SYSUTCDATETIME","TIMEFROMPARTS","TODATETIMEOFFSET","YEAR","JSON","ISJSON","JSON_VALUE","JSON_QUERY","JSON_MODIFY","ABS","ACOS","ASIN","ATAN","ATN2","CEILING","COS","COT","DEGREES","EXP","FLOOR","LOG","LOG10","PI","POWER","RADIANS","RAND","ROUND","SIGN","SIN","SQRT","SQUARE","TAN","CHOOSE","GREATEST","IIF","LEAST","@@PROCID","APP_NAME","APPLOCK_MODE","APPLOCK_TEST","ASSEMBLYPROPERTY","COL_LENGTH","COL_NAME","COLUMNPROPERTY","DATABASEPROPERTYEX","DB_ID","DB_NAME","FILE_ID","FILE_IDEX","FILE_NAME","FILEGROUP_ID","FILEGROUP_NAME","FILEGROUPPROPERTY","FILEPROPERTY","FILEPROPERTYEX","FULLTEXTCATALOGPROPERTY","FULLTEXTSERVICEPROPERTY","INDEX_COL","INDEXKEY_PROPERTY","INDEXPROPERTY","NEXT VALUE FOR","OBJECT_DEFINITION","OBJECT_ID","OBJECT_NAME","OBJECT_SCHEMA_NAME","OBJECTPROPERTY","OBJECTPROPERTYEX","ORIGINAL_DB_NAME","PARSENAME","SCHEMA_ID","SCHEMA_NAME","SCOPE_IDENTITY","SERVERPROPERTY","STATS_DATE","TYPE_ID","TYPE_NAME","TYPEPROPERTY","DENSE_RANK","NTILE","RANK","ROW_NUMBER","PUBLISHINGSERVERNAME","CERTENCODED","CERTPRIVATEKEY","CURRENT_USER","DATABASE_PRINCIPAL_ID","HAS_DBACCESS","HAS_PERMS_BY_NAME","IS_MEMBER","IS_ROLEMEMBER","IS_SRVROLEMEMBER","LOGINPROPERTY","ORIGINAL_LOGIN","PERMISSIONS","PWDENCRYPT","PWDCOMPARE","SESSION_USER","SESSIONPROPERTY","SUSER_ID","SUSER_NAME","SUSER_SID","SUSER_SNAME","SYSTEM_USER","USER","USER_ID","USER_NAME","ASCII","CHAR","CHARINDEX","CONCAT","CONCAT_WS","DIFFERENCE","FORMAT","LEFT","LEN","LOWER","LTRIM","NCHAR","PATINDEX","QUOTENAME","REPLACE","REPLICATE","REVERSE","RIGHT","RTRIM","SOUNDEX","SPACE","STR","STRING_AGG","STRING_ESCAPE","STUFF","SUBSTRING","TRANSLATE","TRIM","UNICODE","UPPER","$PARTITION","@@ERROR","@@IDENTITY","@@PACK_RECEIVED","@@ROWCOUNT","@@TRANCOUNT","BINARY_CHECKSUM","CHECKSUM","COMPRESS","CONNECTIONPROPERTY","CONTEXT_INFO","CURRENT_REQUEST_ID","CURRENT_TRANSACTION_ID","DECOMPRESS","ERROR_LINE","ERROR_MESSAGE","ERROR_NUMBER","ERROR_PROCEDURE","ERROR_SEVERITY","ERROR_STATE","FORMATMESSAGE","GET_FILESTREAM_TRANSACTION_CONTEXT","GETANSINULL","HOST_ID","HOST_NAME","ISNULL","ISNUMERIC","MIN_ACTIVE_ROWVERSION","NEWID","NEWSEQUENTIALID","ROWCOUNT_BIG","SESSION_CONTEXT","XACT_STATE","@@CONNECTIONS","@@CPU_BUSY","@@IDLE","@@IO_BUSY","@@PACK_SENT","@@PACKET_ERRORS","@@TIMETICKS","@@TOTAL_ERRORS","@@TOTAL_READ","@@TOTAL_WRITE","TEXTPTR","TEXTVALID","COLUMNS_UPDATED","EVENTDATA","TRIGGER_NESTLEVEL","UPDATE","COALESCE","NULLIF"],hh=["ADD","ALL","ALTER","AND","ANY","AS","ASC","AUTHORIZATION","BACKUP","BEGIN","BETWEEN","BREAK","BROWSE","BULK","BY","CASCADE","CHECK","CHECKPOINT","CLOSE","CLUSTERED","COALESCE","COLLATE","COLUMN","COMMIT","COMPUTE","CONSTRAINT","CONTAINS","CONTAINSTABLE","CONTINUE","CONVERT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DBCC","DEALLOCATE","DECLARE","DEFAULT","DELETE","DENY","DESC","DISK","DISTINCT","DISTRIBUTED","DROP","DUMP","ERRLVL","ESCAPE","EXEC","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FILE","FILLFACTOR","FOR","FOREIGN","FREETEXT","FREETEXTTABLE","FROM","FULL","FUNCTION","GOTO","GRANT","GROUP","HAVING","HOLDLOCK","IDENTITY","IDENTITYCOL","IDENTITY_INSERT","IF","IN","INDEX","INNER","INSERT","INTERSECT","INTO","IS","JOIN","KEY","KILL","LEFT","LIKE","LINENO","LOAD","MERGE","NOCHECK","NONCLUSTERED","NOT","NULL","NULLIF","OF","OFF","OFFSETS","ON","OPEN","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","OPTION","OR","ORDER","OUTER","OVER","PERCENT","PIVOT","PLAN","PRIMARY","PRINT","PROC","PROCEDURE","PUBLIC","RAISERROR","READ","READTEXT","RECONFIGURE","REFERENCES","REPLICATION","RESTORE","RESTRICT","RETURN","REVERT","REVOKE","RIGHT","ROLLBACK","ROWCOUNT","ROWGUIDCOL","RULE","SAVE","SCHEMA","SECURITYAUDIT","SELECT","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","SESSION_USER","SET","SETUSER","SHUTDOWN","SOME","STATISTICS","SYSTEM_USER","TABLE","TABLESAMPLE","TEXTSIZE","THEN","TO","TOP","TRAN","TRANSACTION","TRIGGER","TRUNCATE","TRY_CONVERT","TSEQUAL","UNION","UNIQUE","UNPIVOT","UPDATE","UPDATETEXT","USE","USER","VALUES","VIEW","WAITFOR","WHERE","WHILE","WITH","WITHIN GROUP","WRITETEXT","ABSOLUTE","ACTION","ADA","ALLOCATE","ARE","ASSERTION","AT","AVG","BIT_LENGTH","BOTH","CASCADED","CAST","CATALOG","CHARACTER_LENGTH","CHAR_LENGTH","COLLATION","CONNECT","CONNECTION","CONSTRAINTS","CORRESPONDING","COUNT","DAY","DEFERRABLE","DEFERRED","DESCRIBE","DESCRIPTOR","DIAGNOSTICS","DISCONNECT","DOMAIN","END-EXEC","EXCEPTION","EXTRACT","FALSE","FIRST","FORTRAN","FOUND","GET","GLOBAL","GO","HOUR","IMMEDIATE","INCLUDE","INDICATOR","INITIALLY","INPUT","INSENSITIVE","INTERVAL","ISOLATION","LANGUAGE","LAST","LEADING","LEVEL","LOCAL","LOWER","MATCH","MAX","MIN","MINUTE","MODULE","MONTH","NAMES","NATURAL","NEXT","NO","NONE","OCTET_LENGTH","ONLY","OUTPUT","OVERLAPS","PAD","PARTIAL","PASCAL","POSITION","PREPARE","PRESERVE","PRIOR","PRIVILEGES","RELATIVE","ROWS","SCROLL","SECOND","SECTION","SESSION","SIZE","SPACE","SQL","SQLCA","SQLCODE","SQLERROR","SQLSTATE","SQLWARNING","SUBSTRING","SUM","TEMPORARY","TIMEZONE_HOUR","TIMEZONE_MINUTE","TRAILING","TRANSLATE","TRANSLATION","TRIM","TRUE","UNKNOWN","UPPER","USAGE","VALUE","WHENEVER","WORK","WRITE","YEAR","ZONE"],Fh=["BINARY","BIT","CHAR","CHAR","CHARACTER","DATE","DATETIME2","DATETIMEOFFSET","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","NATIONAL","NCHAR","NUMERIC","NVARCHAR","PRECISION","REAL","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],dh=B(["SELECT [ALL | DISTINCT]"]),Gh=B(["WITH","INTO","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","OFFSET","FETCH {FIRST | NEXT}","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]","UPDATE SET","CREATE [OR ALTER] {PROC | PROCEDURE}"]),gu=B(["CREATE TABLE","CREATE [OR ALTER] [MATERIALIZED] VIEW","UPDATE","WHERE CURRENT OF","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD","DROP COLUMN [IF EXISTS]","ALTER COLUMN","TRUNCATE TABLE","ADD SENSITIVITY CLASSIFICATION","ADD SIGNATURE","AGGREGATE","ANSI_DEFAULTS","ANSI_NULLS","ANSI_NULL_DFLT_OFF","ANSI_NULL_DFLT_ON","ANSI_PADDING","ANSI_WARNINGS","APPLICATION ROLE","ARITHABORT","ARITHIGNORE","ASSEMBLY","ASYMMETRIC KEY","AUTHORIZATION","AVAILABILITY GROUP","BACKUP","BACKUP CERTIFICATE","BACKUP MASTER KEY","BACKUP SERVICE MASTER KEY","BEGIN CONVERSATION TIMER","BEGIN DIALOG CONVERSATION","BROKER PRIORITY","BULK INSERT","CERTIFICATE","CLOSE MASTER KEY","CLOSE SYMMETRIC KEY","COLLATE","COLUMN ENCRYPTION KEY","COLUMN MASTER KEY","COLUMNSTORE INDEX","CONCAT_NULL_YIELDS_NULL","CONTEXT_INFO","CONTRACT","CREDENTIAL","CRYPTOGRAPHIC PROVIDER","CURSOR_CLOSE_ON_COMMIT","DATABASE","DATABASE AUDIT SPECIFICATION","DATABASE ENCRYPTION KEY","DATABASE HADR","DATABASE SCOPED CONFIGURATION","DATABASE SCOPED CREDENTIAL","DATABASE SET","DATEFIRST","DATEFORMAT","DEADLOCK_PRIORITY","DENY","DENY XML","DISABLE TRIGGER","ENABLE TRIGGER","END CONVERSATION","ENDPOINT","EVENT NOTIFICATION","EVENT SESSION","EXECUTE AS","EXTERNAL DATA SOURCE","EXTERNAL FILE FORMAT","EXTERNAL LANGUAGE","EXTERNAL LIBRARY","EXTERNAL RESOURCE POOL","EXTERNAL TABLE","FIPS_FLAGGER","FMTONLY","FORCEPLAN","FULLTEXT CATALOG","FULLTEXT INDEX","FULLTEXT STOPLIST","FUNCTION","GET CONVERSATION GROUP","GET_TRANSMISSION_STATUS","GRANT","GRANT XML","IDENTITY_INSERT","IMPLICIT_TRANSACTIONS","INDEX","LANGUAGE","LOCK_TIMEOUT","LOGIN","MASTER KEY","MESSAGE TYPE","MOVE CONVERSATION","NOCOUNT","NOEXEC","NUMERIC_ROUNDABORT","OFFSETS","OPEN MASTER KEY","OPEN SYMMETRIC KEY","PARSEONLY","PARTITION FUNCTION","PARTITION SCHEME","PROCEDURE","QUERY_GOVERNOR_COST_LIMIT","QUEUE","QUOTED_IDENTIFIER","RECEIVE","REMOTE SERVICE BINDING","REMOTE_PROC_TRANSACTIONS","RESOURCE GOVERNOR","RESOURCE POOL","RESTORE","RESTORE FILELISTONLY","RESTORE HEADERONLY","RESTORE LABELONLY","RESTORE MASTER KEY","RESTORE REWINDONLY","RESTORE SERVICE MASTER KEY","RESTORE VERIFYONLY","REVERT","REVOKE","REVOKE XML","ROLE","ROUTE","ROWCOUNT","RULE","SCHEMA","SEARCH PROPERTY LIST","SECURITY POLICY","SELECTIVE XML INDEX","SEND","SENSITIVITY CLASSIFICATION","SEQUENCE","SERVER AUDIT","SERVER AUDIT SPECIFICATION","SERVER CONFIGURATION","SERVER ROLE","SERVICE","SERVICE MASTER KEY","SETUSER","SHOWPLAN_ALL","SHOWPLAN_TEXT","SHOWPLAN_XML","SIGNATURE","SPATIAL INDEX","STATISTICS","STATISTICS IO","STATISTICS PROFILE","STATISTICS TIME","STATISTICS XML","SYMMETRIC KEY","SYNONYM","TABLE","TABLE IDENTITY","TEXTSIZE","TRANSACTION ISOLATION LEVEL","TRIGGER","TYPE","UPDATE STATISTICS","USER","WORKLOAD GROUP","XACT_ABORT","XML INDEX","XML SCHEMA COLLECTION"]),Bh=B(["UNION [ALL]","EXCEPT","INTERSECT"]),mh=B(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","{CROSS | OUTER} APPLY"]),Hh=B(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),Yh={name:"transactsql",tokenizerOptions:{reservedSelect:dh,reservedClauses:[...Gh,...gu],reservedSetOperations:Bh,reservedJoins:mh,reservedPhrases:Hh,reservedKeywords:hh,reservedDataTypes:Fh,reservedFunctionNames:Uh,nestedBlockComments:!0,stringTypes:[{quote:"''-qq",prefixes:["N"]}],identTypes:['""-qq',"[]"],identChars:{first:"#@",rest:"#@$"},paramTypes:{named:["@"],quoted:["@"]},operators:["%","&","|","^","~","!<","!>","+=","-=","*=","/=","%=","|=","&=","^=","::",":"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:gu}},gh=["ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","_BINARY","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","EXTRA_JOIN","FALSE","FETCH","FOR","FORCE","FORCE_COMPILED_MODE","FORCE_INTERPRETER_MODE","FOREIGN","FROM","FULL","FULLTEXT","GRANT","GROUP","HAVING","HEARTBEAT_NO_LOGGING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","_INTERNAL_DYNAMIC_TYPECAST","INTERSECT","INTERVAL","INTO","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MATCH","MAXVALUE","MINUS","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NO_QUERY_REWRITE","NOT","NO_WRITE_TO_BINLOG","NO_QUERY_REWRITE","NULL","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESTRICT","RETURN","REVOKE","RIGHT","RIGHT_ANTI_JOIN","RIGHT_SEMI_JOIN","RIGHT_STRAIGHT_JOIN","RLIKE","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SEMI_JOIN","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQLEXCEPTION","SQL_NO_CACHE","SQL_NO_LOGGING","SQL_SMALL_RESULT","SQLSTATE","SQLWARNING","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNBOUNDED","UNDO","UNION","UNIQUE","UNLOCK","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","_UTF8","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WRITE","XOR","YEAR_MONTH","ZEROFILL"],xh=["BIGINT","BINARY","BIT","BLOB","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","UNSIGNED","VARBINARY","VARCHAR","VARCHARACTER","YEAR"],vh=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_COUNT_DISTINCT_ACCUMULATE","APPROX_COUNT_DISTINCT_COMBINE","APPROX_COUNT_DISTINCT_ESTIMATE","APPROX_GEOGRAPHY_INTERSECTS","APPROX_PERCENTILE","ASCII","ASIN","ATAN","ATAN2","AVG","BIN","BINARY","BIT_AND","BIT_COUNT","BIT_OR","BIT_XOR","CAST","CEIL","CEILING","CHAR","CHARACTER_LENGTH","CHAR_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COLLECT","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATEDIFF","DATE_FORMAT","DATE_SUB","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT","DEGREES","DENSE_RANK","DIV","DOT_PRODUCT","ELT","EUCLIDEAN_DISTANCE","EXP","EXTRACT","FIELD","FIRST","FIRST_VALUE","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOGRAPHY_AREA","GEOGRAPHY_CONTAINS","GEOGRAPHY_DISTANCE","GEOGRAPHY_INTERSECTS","GEOGRAPHY_LATITUDE","GEOGRAPHY_LENGTH","GEOGRAPHY_LONGITUDE","GEOGRAPHY_POINT","GEOGRAPHY_WITHIN_DISTANCE","GEOMETRY_AREA","GEOMETRY_CONTAINS","GEOMETRY_DISTANCE","GEOMETRY_FILTER","GEOMETRY_INTERSECTS","GEOMETRY_LENGTH","GEOMETRY_POINT","GEOMETRY_WITHIN_DISTANCE","GEOMETRY_X","GEOMETRY_Y","GREATEST","GROUPING","GROUP_CONCAT","HEX","HIGHLIGHT","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INITCAP","INSERT","INSTR","INTERVAL","IS","IS NULL","JSON_AGG","JSON_ARRAY_CONTAINS_DOUBLE","JSON_ARRAY_CONTAINS_JSON","JSON_ARRAY_CONTAINS_STRING","JSON_ARRAY_PUSH_DOUBLE","JSON_ARRAY_PUSH_JSON","JSON_ARRAY_PUSH_STRING","JSON_DELETE_KEY","JSON_EXTRACT_DOUBLE","JSON_EXTRACT_JSON","JSON_EXTRACT_STRING","JSON_EXTRACT_BIGINT","JSON_GET_TYPE","JSON_LENGTH","JSON_SET_DOUBLE","JSON_SET_JSON","JSON_SET_STRING","JSON_SPLICE_DOUBLE","JSON_SPLICE_JSON","JSON_SPLICE_STRING","LAG","LAST_DAY","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LN","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LPAD","LTRIM","MATCH","MAX","MD5","MEDIAN","MICROSECOND","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","NOT","NOW","NTH_VALUE","NTILE","NULLIF","OCTET_LENGTH","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIVOT","POSITION","POW","POWER","QUARTER","QUOTE","RADIANS","RAND","RANK","REGEXP","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCALAR","SCHEMA","SEC_TO_TIME","SHA1","SHA2","SIGMOID","SIGN","SIN","SLEEP","SPLIT","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUM","SYS_GUID","TAN","TIME","TIMEDIFF","TIME_BUCKET","TIME_FORMAT","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_JSON","TO_NUMBER","TO_SECONDS","TO_TIMESTAMP","TRIM","TRUNC","TRUNCATE","UCASE","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","VALUES","VARIANCE","VAR_POP","VAR_SAMP","VECTOR_SUB","VERSION","WEEK","WEEKDAY","WEEKOFYEAR","YEAR"],yh=B(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),Vh=B(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [IGNORE] [INTO]","VALUES","REPLACE [INTO]","ON DUPLICATE KEY UPDATE","SET","CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] [EXTERNAL] FUNCTION"]),xu=B(["CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]","CREATE VIEW","UPDATE","DELETE [FROM]","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] TABLE","ADD [COLUMN]","ADD [UNIQUE] {INDEX | KEY}","DROP [COLUMN]","MODIFY [COLUMN]","CHANGE","RENAME [TO | AS]","TRUNCATE [TABLE]","ADD AGGREGATOR","ADD LEAF","AGGREGATOR SET AS MASTER","ALTER DATABASE","ALTER PIPELINE","ALTER RESOURCE POOL","ALTER USER","ALTER VIEW","ANALYZE TABLE","ATTACH DATABASE","ATTACH LEAF","ATTACH LEAF ALL","BACKUP DATABASE","BINLOG","BOOTSTRAP AGGREGATOR","CACHE INDEX","CALL","CHANGE","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK BLOB CHECKSUM","CHECK TABLE","CHECKSUM TABLE","CLEAR ORPHAN DATABASES","CLONE","COMMIT","CREATE DATABASE","CREATE GROUP","CREATE INDEX","CREATE LINK","CREATE MILESTONE","CREATE PIPELINE","CREATE RESOURCE POOL","CREATE ROLE","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DETACH DATABASE","DETACH PIPELINE","DROP DATABASE","DROP FUNCTION","DROP INDEX","DROP LINK","DROP PIPELINE","DROP PROCEDURE","DROP RESOURCE POOL","DROP ROLE","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","FORCE","GRANT","HANDLER","HELP","KILL CONNECTION","KILLALL QUERIES","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","REBALANCE PARTITIONS","RELEASE SAVEPOINT","REMOVE AGGREGATOR","REMOVE LEAF","REPAIR TABLE","REPLACE","REPLICATE DATABASE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","RESTORE DATABASE","RESTORE REDUNDANCY","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE FUNCTION","SHOW CREATE PIPELINE","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SNAPSHOT DATABASE","SOURCE_POS_WAIT","START GROUP_REPLICATION","START PIPELINE","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP PIPELINE","STOP REPLICA","STOP REPLICATING","STOP SLAVE","TEST PIPELINE","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),Wh=B(["UNION [ALL | DISTINCT]","EXCEPT","INTERSECT","MINUS"]),Xh=B(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),bh=B(["ON DELETE","ON UPDATE","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),wh={name:"singlestoredb",tokenizerOptions:{reservedSelect:yh,reservedClauses:[...Vh,...xu],reservedSetOperations:Wh,reservedJoins:Xh,reservedPhrases:bh,reservedKeywords:gh,reservedDataTypes:xh,reservedFunctionNames:vh,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_$]+"},{quote:"``",prefixes:["@"],requirePrefix:!0}],lineCommentTypes:["--","#"],operators:[":=","&","|","^","~","<<",">>","<=>","&&","||","::","::$","::%",":>","!:>","*.*"],postProcess:yR},formatOptions:{alwaysDenseOperators:["::","::$","::%"],onelineClauses:xu}},Kh=["ABS","ACOS","ACOSH","ADD_MONTHS","ALL_USER_NAMES","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","APPROX_PERCENTILE_ACCUMULATE","APPROX_PERCENTILE_COMBINE","APPROX_PERCENTILE_ESTIMATE","APPROX_TOP_K","APPROX_TOP_K_ACCUMULATE","APPROX_TOP_K_COMBINE","APPROX_TOP_K_ESTIMATE","APPROXIMATE_JACCARD_INDEX","APPROXIMATE_SIMILARITY","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_COMPACT","ARRAY_CONSTRUCT","ARRAY_CONSTRUCT_COMPACT","ARRAY_CONTAINS","ARRAY_INSERT","ARRAY_INTERSECTION","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_SIZE","ARRAY_SLICE","ARRAY_TO_STRING","ARRAY_UNION_AGG","ARRAY_UNIQUE_AGG","ARRAYS_OVERLAP","AS_ARRAY","AS_BINARY","AS_BOOLEAN","AS_CHAR","AS_VARCHAR","AS_DATE","AS_DECIMAL","AS_NUMBER","AS_DOUBLE","AS_REAL","AS_INTEGER","AS_OBJECT","AS_TIME","AS_TIMESTAMP_LTZ","AS_TIMESTAMP_NTZ","AS_TIMESTAMP_TZ","ASCII","ASIN","ASINH","ATAN","ATAN2","ATANH","AUTO_REFRESH_REGISTRATION_HISTORY","AUTOMATIC_CLUSTERING_HISTORY","AVG","BASE64_DECODE_BINARY","BASE64_DECODE_STRING","BASE64_ENCODE","BIT_LENGTH","BITAND","BITAND_AGG","BITMAP_BIT_POSITION","BITMAP_BUCKET_NUMBER","BITMAP_CONSTRUCT_AGG","BITMAP_COUNT","BITMAP_OR_AGG","BITNOT","BITOR","BITOR_AGG","BITSHIFTLEFT","BITSHIFTRIGHT","BITXOR","BITXOR_AGG","BOOLAND","BOOLAND_AGG","BOOLNOT","BOOLOR","BOOLOR_AGG","BOOLXOR","BOOLXOR_AGG","BUILD_SCOPED_FILE_URL","BUILD_STAGE_FILE_URL","CASE","CAST","CBRT","CEIL","CHARINDEX","CHECK_JSON","CHECK_XML","CHR","CHAR","COALESCE","COLLATE","COLLATION","COMPLETE_TASK_GRAPHS","COMPRESS","CONCAT","CONCAT_WS","CONDITIONAL_CHANGE_EVENT","CONDITIONAL_TRUE_EVENT","CONTAINS","CONVERT_TIMEZONE","COPY_HISTORY","CORR","COS","COSH","COT","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CUME_DIST","CURRENT_ACCOUNT","CURRENT_AVAILABLE_ROLES","CURRENT_CLIENT","CURRENT_DATABASE","CURRENT_DATE","CURRENT_IP_ADDRESS","CURRENT_REGION","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_SECONDARY_ROLES","CURRENT_SESSION","CURRENT_STATEMENT","CURRENT_TASK_GRAPHS","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TRANSACTION","CURRENT_USER","CURRENT_VERSION","CURRENT_WAREHOUSE","DATA_TRANSFER_HISTORY","DATABASE_REFRESH_HISTORY","DATABASE_REFRESH_PROGRESS","DATABASE_REFRESH_PROGRESS_BY_JOB","DATABASE_STORAGE_USAGE_HISTORY","DATE_FROM_PARTS","DATE_PART","DATE_TRUNC","DATEADD","DATEDIFF","DAYNAME","DECODE","DECOMPRESS_BINARY","DECOMPRESS_STRING","DECRYPT","DECRYPT_RAW","DEGREES","DENSE_RANK","DIV0","EDITDISTANCE","ENCRYPT","ENCRYPT_RAW","ENDSWITH","EQUAL_NULL","EXP","EXPLAIN_JSON","EXTERNAL_FUNCTIONS_HISTORY","EXTERNAL_TABLE_FILES","EXTERNAL_TABLE_FILE_REGISTRATION_HISTORY","EXTRACT","EXTRACT_SEMANTIC_CATEGORIES","FACTORIAL","FIRST_VALUE","FLATTEN","FLOOR","GENERATE_COLUMN_DESCRIPTION","GENERATOR","GET","GET_ABSOLUTE_PATH","GET_DDL","GET_IGNORE_CASE","GET_OBJECT_REFERENCES","GET_PATH","GET_PRESIGNED_URL","GET_RELATIVE_PATH","GET_STAGE_LOCATION","GETBIT","GREATEST","GROUPING","GROUPING_ID","HASH","HASH_AGG","HAVERSINE","HEX_DECODE_BINARY","HEX_DECODE_STRING","HEX_ENCODE","HLL","HLL_ACCUMULATE","HLL_COMBINE","HLL_ESTIMATE","HLL_EXPORT","HLL_IMPORT","HOUR","MINUTE","SECOND","IFF","IFNULL","ILIKE","ILIKE ANY","INFER_SCHEMA","INITCAP","INSERT","INVOKER_ROLE","INVOKER_SHARE","IS_ARRAY","IS_BINARY","IS_BOOLEAN","IS_CHAR","IS_VARCHAR","IS_DATE","IS_DATE_VALUE","IS_DECIMAL","IS_DOUBLE","IS_REAL","IS_GRANTED_TO_INVOKER_ROLE","IS_INTEGER","IS_NULL_VALUE","IS_OBJECT","IS_ROLE_IN_SESSION","IS_TIME","IS_TIMESTAMP_LTZ","IS_TIMESTAMP_NTZ","IS_TIMESTAMP_TZ","JAROWINKLER_SIMILARITY","JSON_EXTRACT_PATH_TEXT","KURTOSIS","LAG","LAST_DAY","LAST_QUERY_ID","LAST_TRANSACTION","LAST_VALUE","LEAD","LEAST","LEFT","LENGTH","LEN","LIKE","LIKE ALL","LIKE ANY","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOGIN_HISTORY","LOGIN_HISTORY_BY_USER","LOWER","LPAD","LTRIM","MATERIALIZED_VIEW_REFRESH_HISTORY","MD5","MD5_HEX","MD5_BINARY","MD5_NUMBER \u2014 Obsoleted","MD5_NUMBER_LOWER64","MD5_NUMBER_UPPER64","MEDIAN","MIN","MAX","MINHASH","MINHASH_COMBINE","MOD","MODE","MONTHNAME","MONTHS_BETWEEN","NEXT_DAY","NORMAL","NTH_VALUE","NTILE","NULLIF","NULLIFZERO","NVL","NVL2","OBJECT_AGG","OBJECT_CONSTRUCT","OBJECT_CONSTRUCT_KEEP_NULL","OBJECT_DELETE","OBJECT_INSERT","OBJECT_KEYS","OBJECT_PICK","OCTET_LENGTH","PARSE_IP","PARSE_JSON","PARSE_URL","PARSE_XML","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIPE_USAGE_HISTORY","POLICY_CONTEXT","POLICY_REFERENCES","POSITION","POW","POWER","PREVIOUS_DAY","QUERY_ACCELERATION_HISTORY","QUERY_HISTORY","QUERY_HISTORY_BY_SESSION","QUERY_HISTORY_BY_USER","QUERY_HISTORY_BY_WAREHOUSE","RADIANS","RANDOM","RANDSTR","RANK","RATIO_TO_REPORT","REGEXP","REGEXP_COUNT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","REGEXP_SUBSTR_ALL","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","REGR_VALX","REGR_VALY","REPEAT","REPLACE","REPLICATION_GROUP_REFRESH_HISTORY","REPLICATION_GROUP_REFRESH_PROGRESS","REPLICATION_GROUP_REFRESH_PROGRESS_BY_JOB","REPLICATION_GROUP_USAGE_HISTORY","REPLICATION_USAGE_HISTORY","REST_EVENT_HISTORY","RESULT_SCAN","REVERSE","RIGHT","RLIKE","ROUND","ROW_NUMBER","RPAD","RTRIM","RTRIMMED_LENGTH","SEARCH_OPTIMIZATION_HISTORY","SEQ1","SEQ2","SEQ4","SEQ8","SERVERLESS_TASK_HISTORY","SHA1","SHA1_HEX","SHA1_BINARY","SHA2","SHA2_HEX","SHA2_BINARY","SIGN","SIN","SINH","SKEW","SOUNDEX","SPACE","SPLIT","SPLIT_PART","SPLIT_TO_TABLE","SQRT","SQUARE","ST_AREA","ST_ASEWKB","ST_ASEWKT","ST_ASGEOJSON","ST_ASWKB","ST_ASBINARY","ST_ASWKT","ST_ASTEXT","ST_AZIMUTH","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DWITHIN","ST_ENDPOINT","ST_ENVELOPE","ST_GEOGFROMGEOHASH","ST_GEOGPOINTFROMGEOHASH","ST_GEOGRAPHYFROMWKB","ST_GEOGRAPHYFROMWKT","ST_GEOHASH","ST_GEOMETRYFROMWKB","ST_GEOMETRYFROMWKT","ST_HAUSDORFFDISTANCE","ST_INTERSECTION","ST_INTERSECTS","ST_LENGTH","ST_MAKEGEOMPOINT","ST_GEOM_POINT","ST_MAKELINE","ST_MAKEPOINT","ST_POINT","ST_MAKEPOLYGON","ST_POLYGON","ST_NPOINTS","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SETSRID","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","STAGE_DIRECTORY_FILE_REGISTRATION_HISTORY","STAGE_STORAGE_USAGE_HISTORY","STARTSWITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRIP_NULL_VALUE","STRTOK","STRTOK_SPLIT_TO_TABLE","STRTOK_TO_ARRAY","SUBSTR","SUBSTRING","SUM","SYSDATE","SYSTEM$ABORT_SESSION","SYSTEM$ABORT_TRANSACTION","SYSTEM$AUTHORIZE_PRIVATELINK","SYSTEM$AUTHORIZE_STAGE_PRIVATELINK_ACCESS","SYSTEM$BEHAVIOR_CHANGE_BUNDLE_STATUS","SYSTEM$CANCEL_ALL_QUERIES","SYSTEM$CANCEL_QUERY","SYSTEM$CLUSTERING_DEPTH","SYSTEM$CLUSTERING_INFORMATION","SYSTEM$CLUSTERING_RATIO ","SYSTEM$CURRENT_USER_TASK_NAME","SYSTEM$DATABASE_REFRESH_HISTORY ","SYSTEM$DATABASE_REFRESH_PROGRESS","SYSTEM$DATABASE_REFRESH_PROGRESS_BY_JOB ","SYSTEM$DISABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$DISABLE_DATABASE_REPLICATION","SYSTEM$ENABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$ESTIMATE_QUERY_ACCELERATION","SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS","SYSTEM$EXPLAIN_JSON_TO_TEXT","SYSTEM$EXPLAIN_PLAN_JSON","SYSTEM$EXTERNAL_TABLE_PIPE_STATUS","SYSTEM$GENERATE_SAML_CSR","SYSTEM$GENERATE_SCIM_ACCESS_TOKEN","SYSTEM$GET_AWS_SNS_IAM_POLICY","SYSTEM$GET_PREDECESSOR_RETURN_VALUE","SYSTEM$GET_PRIVATELINK","SYSTEM$GET_PRIVATELINK_AUTHORIZED_ENDPOINTS","SYSTEM$GET_PRIVATELINK_CONFIG","SYSTEM$GET_SNOWFLAKE_PLATFORM_INFO","SYSTEM$GET_TAG","SYSTEM$GET_TAG_ALLOWED_VALUES","SYSTEM$GET_TAG_ON_CURRENT_COLUMN","SYSTEM$GET_TAG_ON_CURRENT_TABLE","SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER","SYSTEM$LAST_CHANGE_COMMIT_TIME","SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME","SYSTEM$MIGRATE_SAML_IDP_REGISTRATION","SYSTEM$PIPE_FORCE_RESUME","SYSTEM$PIPE_STATUS","SYSTEM$REVOKE_PRIVATELINK","SYSTEM$REVOKE_STAGE_PRIVATELINK_ACCESS","SYSTEM$SET_RETURN_VALUE","SYSTEM$SHOW_OAUTH_CLIENT_SECRETS","SYSTEM$STREAM_GET_TABLE_TIMESTAMP","SYSTEM$STREAM_HAS_DATA","SYSTEM$TASK_DEPENDENTS_ENABLE","SYSTEM$TYPEOF","SYSTEM$USER_TASK_CANCEL_ONGOING_EXECUTIONS","SYSTEM$VERIFY_EXTERNAL_OAUTH_TOKEN","SYSTEM$WAIT","SYSTEM$WHITELIST","SYSTEM$WHITELIST_PRIVATELINK","TAG_REFERENCES","TAG_REFERENCES_ALL_COLUMNS","TAG_REFERENCES_WITH_LINEAGE","TAN","TANH","TASK_DEPENDENTS","TASK_HISTORY","TIME_FROM_PARTS","TIME_SLICE","TIMEADD","TIMEDIFF","TIMESTAMP_FROM_PARTS","TIMESTAMPADD","TIMESTAMPDIFF","TO_ARRAY","TO_BINARY","TO_BOOLEAN","TO_CHAR","TO_VARCHAR","TO_DATE","DATE","TO_DECIMAL","TO_NUMBER","TO_NUMERIC","TO_DOUBLE","TO_GEOGRAPHY","TO_GEOMETRY","TO_JSON","TO_OBJECT","TO_TIME","TIME","TO_TIMESTAMP","TO_TIMESTAMP_LTZ","TO_TIMESTAMP_NTZ","TO_TIMESTAMP_TZ","TO_VARIANT","TO_XML","TRANSLATE","TRIM","TRUNCATE","TRUNC","TRUNC","TRY_BASE64_DECODE_BINARY","TRY_BASE64_DECODE_STRING","TRY_CAST","TRY_HEX_DECODE_BINARY","TRY_HEX_DECODE_STRING","TRY_PARSE_JSON","TRY_TO_BINARY","TRY_TO_BOOLEAN","TRY_TO_DATE","TRY_TO_DECIMAL","TRY_TO_NUMBER","TRY_TO_NUMERIC","TRY_TO_DOUBLE","TRY_TO_GEOGRAPHY","TRY_TO_GEOMETRY","TRY_TO_TIME","TRY_TO_TIMESTAMP","TRY_TO_TIMESTAMP_LTZ","TRY_TO_TIMESTAMP_NTZ","TRY_TO_TIMESTAMP_TZ","TYPEOF","UNICODE","UNIFORM","UPPER","UUID_STRING","VALIDATE","VALIDATE_PIPE_LOAD","VAR_POP","VAR_SAMP","VARIANCE","VARIANCE_SAMP","VARIANCE_POP","WAREHOUSE_LOAD_HISTORY","WAREHOUSE_METERING_HISTORY","WIDTH_BUCKET","XMLGET","YEAR","YEAROFWEEK","YEAROFWEEKISO","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFWEEKISO","DAYOFYEAR","WEEK","WEEK","WEEKOFYEAR","WEEKISO","MONTH","QUARTER","ZEROIFNULL","ZIPF"],Jh=["ACCOUNT","ALL","ALTER","AND","ANY","AS","BETWEEN","BY","CASE","CAST","CHECK","COLUMN","CONNECT","CONNECTION","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATABASE","DELETE","DISTINCT","DROP","ELSE","EXISTS","FALSE","FOLLOWING","FOR","FROM","FULL","GRANT","GROUP","GSCLUSTER","HAVING","ILIKE","IN","INCREMENT","INNER","INSERT","INTERSECT","INTO","IS","ISSUE","JOIN","LATERAL","LEFT","LIKE","LOCALTIME","LOCALTIMESTAMP","MINUS","NATURAL","NOT","NULL","OF","ON","OR","ORDER","ORGANIZATION","QUALIFY","REGEXP","REVOKE","RIGHT","RLIKE","ROW","ROWS","SAMPLE","SCHEMA","SELECT","SET","SOME","START","TABLE","TABLESAMPLE","THEN","TO","TRIGGER","TRUE","TRY_CAST","UNION","UNIQUE","UPDATE","USING","VALUES","VIEW","WHEN","WHENEVER","WHERE","WITH","COMMENT"],$h=["NUMBER","DECIMAL","NUMERIC","INT","INTEGER","BIGINT","SMALLINT","TINYINT","BYTEINT","FLOAT","FLOAT4","FLOAT8","DOUBLE","DOUBLE PRECISION","REAL","VARCHAR","CHAR","CHARACTER","STRING","TEXT","BINARY","VARBINARY","BOOLEAN","DATE","DATETIME","TIME","TIMESTAMP","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TIMESTAMP_TZ","VARIANT","OBJECT","ARRAY","GEOGRAPHY","GEOMETRY"],Qh=B(["SELECT [ALL | DISTINCT]"]),qh=B(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","QUALIFY","LIMIT","OFFSET","FETCH [FIRST | NEXT]","INSERT [OVERWRITE] [ALL INTO | INTO | ALL | FIRST]","{THEN | ELSE} INTO","VALUES","SET","CLUSTER BY","[WITH] {MASKING POLICY | TAG | ROW ACCESS POLICY}","COPY GRANTS","USING TEMPLATE","MERGE INTO","WHEN MATCHED [AND]","THEN {UPDATE SET | DELETE}","WHEN NOT MATCHED THEN INSERT"]),vu=B(["CREATE [OR REPLACE] [VOLATILE] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [LOCAL | GLOBAL] {TEMP|TEMPORARY} TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [SECURE] [RECURSIVE] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","RENAME TO","SWAP WITH","[SUSPEND | RESUME] RECLUSTER","DROP CLUSTERING KEY","ADD [COLUMN]","RENAME COLUMN","{ALTER | MODIFY} [COLUMN]","DROP [COLUMN]","{ADD | ALTER | MODIFY | DROP} [CONSTRAINT]","RENAME CONSTRAINT","{ADD | DROP} SEARCH OPTIMIZATION","{SET | UNSET} TAG","{ADD | DROP} ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","[SET DATA] TYPE","UNSET COMMENT","{SET | UNSET} MASKING POLICY","TRUNCATE [TABLE] [IF EXISTS]","ALTER ACCOUNT","ALTER API INTEGRATION","ALTER CONNECTION","ALTER DATABASE","ALTER EXTERNAL TABLE","ALTER FAILOVER GROUP","ALTER FILE FORMAT","ALTER FUNCTION","ALTER INTEGRATION","ALTER MASKING POLICY","ALTER MATERIALIZED VIEW","ALTER NETWORK POLICY","ALTER NOTIFICATION INTEGRATION","ALTER PIPE","ALTER PROCEDURE","ALTER REPLICATION GROUP","ALTER RESOURCE MONITOR","ALTER ROLE","ALTER ROW ACCESS POLICY","ALTER SCHEMA","ALTER SECURITY INTEGRATION","ALTER SEQUENCE","ALTER SESSION","ALTER SESSION POLICY","ALTER SHARE","ALTER STAGE","ALTER STORAGE INTEGRATION","ALTER STREAM","ALTER TAG","ALTER TASK","ALTER USER","ALTER VIEW","ALTER WAREHOUSE","BEGIN","CALL","COMMIT","COPY INTO","CREATE ACCOUNT","CREATE API INTEGRATION","CREATE CONNECTION","CREATE DATABASE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL TABLE","CREATE FAILOVER GROUP","CREATE FILE FORMAT","CREATE FUNCTION","CREATE INTEGRATION","CREATE MANAGED ACCOUNT","CREATE MASKING POLICY","CREATE MATERIALIZED VIEW","CREATE NETWORK POLICY","CREATE NOTIFICATION INTEGRATION","CREATE PIPE","CREATE PROCEDURE","CREATE REPLICATION GROUP","CREATE RESOURCE MONITOR","CREATE ROLE","CREATE ROW ACCESS POLICY","CREATE SCHEMA","CREATE SECURITY INTEGRATION","CREATE SEQUENCE","CREATE SESSION POLICY","CREATE SHARE","CREATE STAGE","CREATE STORAGE INTEGRATION","CREATE STREAM","CREATE TAG","CREATE TASK","CREATE USER","CREATE WAREHOUSE","DELETE","DESCRIBE DATABASE","DESCRIBE EXTERNAL TABLE","DESCRIBE FILE FORMAT","DESCRIBE FUNCTION","DESCRIBE INTEGRATION","DESCRIBE MASKING POLICY","DESCRIBE MATERIALIZED VIEW","DESCRIBE NETWORK POLICY","DESCRIBE PIPE","DESCRIBE PROCEDURE","DESCRIBE RESULT","DESCRIBE ROW ACCESS POLICY","DESCRIBE SCHEMA","DESCRIBE SEQUENCE","DESCRIBE SESSION POLICY","DESCRIBE SHARE","DESCRIBE STAGE","DESCRIBE STREAM","DESCRIBE TABLE","DESCRIBE TASK","DESCRIBE TRANSACTION","DESCRIBE USER","DESCRIBE VIEW","DESCRIBE WAREHOUSE","DROP CONNECTION","DROP DATABASE","DROP EXTERNAL TABLE","DROP FAILOVER GROUP","DROP FILE FORMAT","DROP FUNCTION","DROP INTEGRATION","DROP MANAGED ACCOUNT","DROP MASKING POLICY","DROP MATERIALIZED VIEW","DROP NETWORK POLICY","DROP PIPE","DROP PROCEDURE","DROP REPLICATION GROUP","DROP RESOURCE MONITOR","DROP ROLE","DROP ROW ACCESS POLICY","DROP SCHEMA","DROP SEQUENCE","DROP SESSION POLICY","DROP SHARE","DROP STAGE","DROP STREAM","DROP TAG","DROP TASK","DROP USER","DROP VIEW","DROP WAREHOUSE","EXECUTE IMMEDIATE","EXECUTE TASK","EXPLAIN","GET","GRANT OWNERSHIP","GRANT ROLE","INSERT","LIST","MERGE","PUT","REMOVE","REVOKE ROLE","ROLLBACK","SHOW COLUMNS","SHOW CONNECTIONS","SHOW DATABASES","SHOW DATABASES IN FAILOVER GROUP","SHOW DATABASES IN REPLICATION GROUP","SHOW DELEGATED AUTHORIZATIONS","SHOW EXTERNAL FUNCTIONS","SHOW EXTERNAL TABLES","SHOW FAILOVER GROUPS","SHOW FILE FORMATS","SHOW FUNCTIONS","SHOW GLOBAL ACCOUNTS","SHOW GRANTS","SHOW INTEGRATIONS","SHOW LOCKS","SHOW MANAGED ACCOUNTS","SHOW MASKING POLICIES","SHOW MATERIALIZED VIEWS","SHOW NETWORK POLICIES","SHOW OBJECTS","SHOW ORGANIZATION ACCOUNTS","SHOW PARAMETERS","SHOW PIPES","SHOW PRIMARY KEYS","SHOW PROCEDURES","SHOW REGIONS","SHOW REPLICATION ACCOUNTS","SHOW REPLICATION DATABASES","SHOW REPLICATION GROUPS","SHOW RESOURCE MONITORS","SHOW ROLES","SHOW ROW ACCESS POLICIES","SHOW SCHEMAS","SHOW SEQUENCES","SHOW SESSION POLICIES","SHOW SHARES","SHOW SHARES IN FAILOVER GROUP","SHOW SHARES IN REPLICATION GROUP","SHOW STAGES","SHOW STREAMS","SHOW TABLES","SHOW TAGS","SHOW TASKS","SHOW TRANSACTIONS","SHOW USER FUNCTIONS","SHOW USERS","SHOW VARIABLES","SHOW VIEWS","SHOW WAREHOUSES","TRUNCATE MATERIALIZED VIEW","UNDROP DATABASE","UNDROP SCHEMA","UNDROP TABLE","UNDROP TAG","UNSET","USE DATABASE","USE ROLE","USE SCHEMA","USE SECONDARY ROLES","USE WAREHOUSE"]),kh=B(["UNION [ALL]","MINUS","EXCEPT","INTERSECT"]),Zh=B(["[INNER] JOIN","[NATURAL] {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | NATURAL} JOIN"]),zh=B(["{ROWS | RANGE} BETWEEN","ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]"]),jh={name:"snowflake",tokenizerOptions:{reservedSelect:Qh,reservedClauses:[...qh,...vu],reservedSetOperations:kh,reservedJoins:Zh,reservedPhrases:zh,reservedKeywords:Jh,reservedDataTypes:$h,reservedFunctionNames:Kh,stringTypes:["$$","''-qq-bs"],identTypes:['""-qq'],variableTypes:[{regex:"[$][1-9]\\d*"},{regex:"[$][_a-zA-Z][_a-zA-Z0-9$]*"}],extraParens:["[]"],identChars:{rest:"$"},lineCommentTypes:["--","//"],operators:["%","::","||",":","=>"]},formatOptions:{alwaysDenseOperators:[":","::"],onelineClauses:vu}},xr=E=>E[E.length-1],es=E=>E.sort((r,n)=>n.length-r.length||r.localeCompare(n)),tn=E=>E.replace(/\s+/gu," "),GR=E=>/\n/.test(E),ce=E=>E.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&"),yu=/\s+/uy,PT=E=>new RegExp(`(?:${E})`,"uy"),EF=E=>E.split("").map(r=>/ /gu.test(r)?"\\s+":`[${r.toUpperCase()}${r.toLowerCase()}]`).join(""),eF=E=>E+"(?:-"+E+")*",TF=({prefixes:E,requirePrefix:r})=>`(?:${E.map(EF).join("|")}${r?"":"|"})`,rF=E=>new RegExp(`(?:${E.map(ce).join("|")}).*?(?=\r
|\r|
|$)`,"uy"),Vu=(E,r=[])=>{let n=E==="open"?0:1,A=["()",...r].map(S=>S[n]);return PT(A.map(ce).join("|"))},tF=E=>PT(`${es(E).map(ce).join("|")}`),nF=({rest:E,dashes:r})=>E||r?`(?![${E||""}${r?"-":""}])`:"",nT=(E,r={})=>{if(E.length===0)return/^\b$/u;let n=nF(r),A=es(E).map(ce).join("|").replace(/ /gu,"\\s+");return new RegExp(`(?:${A})${n}\\b`,"iuy")},BR=(E,r)=>{if(!E.length)return;let n=E.map(ce).join("|");return PT(`(?:${n})(?:${r})`)},AF=()=>{let E={"<":">","[":"]","(":")","{":"}"},r="{left}(?:(?!{right}').)*?{right}",n=Object.entries(E).map(([I,C])=>r.replace(/{left}/g,ce(I)).replace(/{right}/g,ce(C))),A=ce(Object.keys(E).join(""));return`[Qq]'(?:${String.raw`(?<tag>[^\s${A}])(?:(?!\k<tag>').)*?\k<tag>`}|${n.join("|")})'`},Wu={"``":"(?:`[^`]*`)+","[]":String.raw`(?:\[[^\]]*\])(?:\][^\]]*\])*`,'""-qq':String.raw`(?:"[^"]*")+`,'""-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")`,'""-qq-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")+`,'""-raw':String.raw`(?:"[^"]*")`,"''-qq":String.raw`(?:'[^']*')+`,"''-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')`,"''-qq-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')+`,"''-raw":String.raw`(?:'[^']*')`,$$:String.raw`(?<tag>\$\w*\$)[\s\S]*?\k<tag>`,"'''..'''":String.raw`'''[^\\]*?(?:\\.[^\\]*?)*?'''`,'""".."""':String.raw`"""[^\\]*?(?:\\.[^\\]*?)*?"""`,"{}":String.raw`(?:\{[^\}]*\})`,"q''":AF()},Ts=E=>typeof E=="string"?Wu[E]:"regex"in E?E.regex:TF(E)+Wu[E.quote],RF=E=>PT(E.map(r=>"regex"in r?r.regex:Ts(r)).join("|")),rs=E=>E.map(Ts).join("|"),Xu=E=>PT(rs(E)),SF=(E={})=>PT(ts(E)),ts=({first:E,rest:r,dashes:n,allowFirstCharNumber:A}={})=>{let S="\\p{Alphabetic}\\p{Mark}_",O="\\p{Decimal_Number}",I=ce(E??""),C=ce(r??""),s=A?`[${S}${O}${I}][${S}${O}${C}]*`:`[${S}${I}][${S}${O}${C}]*`;return n?eF(s):s};function ns(E,r){let n=E.slice(0,r).split(/\n/);return{line:n.length,col:n[n.length-1].length+1}}var iF=class{constructor(E,r){this.rules=E,this.dialectName=r,this.input="",this.index=0}tokenize(E){this.input=E,this.index=0;let r=[],n;for(;this.index<this.input.length;){let A=this.getWhitespace();if(this.index<this.input.length){if(n=this.getNextToken(),!n)throw this.createParseError();r.push(QE(vE({},n),{precedingWhitespace:A}))}}return r}createParseError(){let E=this.input.slice(this.index,this.index+10),{line:r,col:n}=ns(this.input,this.index);return new Error(`Parse error: Unexpected "${E}" at line ${r} column ${n}.
${this.dialectInfo()}`)}dialectInfo(){return this.dialectName==="sql"?`This likely happens because you're using the default "sql" dialect.
If possible, please select a more specific dialect (like sqlite, postgresql, etc).`:`SQL dialect used: "${this.dialectName}".`}getWhitespace(){yu.lastIndex=this.index;let E=yu.exec(this.input);if(E)return this.index+=E[0].length,E[0]}getNextToken(){for(let E of this.rules){let r=this.match(E);if(r)return r}}match(E){E.regex.lastIndex=this.index;let r=E.regex.exec(this.input);if(r){let n=r[0],A={type:E.type,raw:n,text:E.text?E.text(n):n,start:this.index};return E.key&&(A.key=E.key(n)),this.index+=n.length,A}}},bu=/\/\*/uy,OF=/([^/*]|\*[^/]|\/[^*])+/uy,IF=/\*\//uy,NF=class{constructor(){this.lastIndex=0}exec(E){let r="",n,A=0;if(n=this.matchSection(bu,E))r+=n,A++;else return null;for(;A>0;)if(n=this.matchSection(bu,E))r+=n,A++;else if(n=this.matchSection(IF,E))r+=n,A--;else if(n=this.matchSection(OF,E))r+=n;else return null;return[r]}matchSection(E,r){E.lastIndex=this.lastIndex;let n=E.exec(r);return n&&(this.lastIndex+=n[0].length),n?n[0]:null}},uF=class{constructor(E,r){this.cfg=E,this.dialectName=r,this.rulesBeforeParams=this.buildRulesBeforeParams(E),this.rulesAfterParams=this.buildRulesAfterParams(E)}tokenize(E,r){let n=[...this.rulesBeforeParams,...this.buildParamRules(this.cfg,r),...this.rulesAfterParams],A=new iF(n,this.dialectName).tokenize(E);return this.cfg.postProcess?this.cfg.postProcess(A):A}buildRulesBeforeParams(E){var r,n;return this.validRules([{type:"BLOCK_COMMENT",regex:E.nestedBlockComments?new NF:/(\/\*[^]*?\*\/)/uy},{type:"LINE_COMMENT",regex:rF((r=E.lineCommentTypes)!=null?r:["--"])},{type:"QUOTED_IDENTIFIER",regex:Xu(E.identTypes)},{type:"NUMBER",regex:/(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\s*)?[0-9]+(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+(?:\.[0-9]+)?)?)(?![\w\p{Alphabetic}])/uy},{type:"RESERVED_PHRASE",regex:nT((n=E.reservedPhrases)!=null?n:[],E.identChars),text:mE},{type:"CASE",regex:/CASE\b/iuy,text:mE},{type:"END",regex:/END\b/iuy,text:mE},{type:"BETWEEN",regex:/BETWEEN\b/iuy,text:mE},{type:"LIMIT",regex:E.reservedClauses.includes("LIMIT")?/LIMIT\b/iuy:void 0,text:mE},{type:"RESERVED_CLAUSE",regex:nT(E.reservedClauses,E.identChars),text:mE},{type:"RESERVED_SELECT",regex:nT(E.reservedSelect,E.identChars),text:mE},{type:"RESERVED_SET_OPERATION",regex:nT(E.reservedSetOperations,E.identChars),text:mE},{type:"WHEN",regex:/WHEN\b/iuy,text:mE},{type:"ELSE",regex:/ELSE\b/iuy,text:mE},{type:"THEN",regex:/THEN\b/iuy,text:mE},{type:"RESERVED_JOIN",regex:nT(E.reservedJoins,E.identChars),text:mE},{type:"AND",regex:/AND\b/iuy,text:mE},{type:"OR",regex:/OR\b/iuy,text:mE},{type:"XOR",regex:E.supportsXor?/XOR\b/iuy:void 0,text:mE},{type:"RESERVED_FUNCTION_NAME",regex:nT(E.reservedFunctionNames,E.identChars),text:mE},{type:"RESERVED_DATA_TYPE",regex:nT(E.reservedDataTypes,E.identChars),text:mE},{type:"RESERVED_KEYWORD",regex:nT(E.reservedKeywords,E.identChars),text:mE}])}buildRulesAfterParams(E){var r;return this.validRules([{type:"VARIABLE",regex:E.variableTypes?RF(E.variableTypes):void 0},{type:"STRING",regex:Xu(E.stringTypes)},{type:"IDENTIFIER",regex:SF(E.identChars)},{type:"DELIMITER",regex:/[;]/uy},{type:"COMMA",regex:/[,]/y},{type:"OPEN_PAREN",regex:Vu("open",E.extraParens)},{type:"CLOSE_PAREN",regex:Vu("close",E.extraParens)},{type:"OPERATOR",regex:tF(["+","-","/",">","<","=","<>","<=",">=","!=",...(r=E.operators)!=null?r:[]])},{type:"ASTERISK",regex:/[*]/uy},{type:"DOT",regex:/[.]/uy}])}buildParamRules(E,r){var n,A,S,O,I;let C={named:r?.named||((n=E.paramTypes)==null?void 0:n.named)||[],quoted:r?.quoted||((A=E.paramTypes)==null?void 0:A.quoted)||[],numbered:r?.numbered||((S=E.paramTypes)==null?void 0:S.numbered)||[],positional:typeof r?.positional=="boolean"?r.positional:(O=E.paramTypes)==null?void 0:O.positional,custom:r?.custom||((I=E.paramTypes)==null?void 0:I.custom)||[]};return this.validRules([{type:"NAMED_PARAMETER",regex:BR(C.named,ts(E.paramChars||E.identChars)),key:s=>s.slice(1)},{type:"QUOTED_PARAMETER",regex:BR(C.quoted,rs(E.identTypes)),key:s=>(({tokenKey:a,quoteChar:c})=>a.replace(new RegExp(ce("\\"+c),"gu"),c))({tokenKey:s.slice(2,-1),quoteChar:s.slice(-1)})},{type:"NUMBERED_PARAMETER",regex:BR(C.numbered,"[0-9]+"),key:s=>s.slice(1)},{type:"POSITIONAL_PARAMETER",regex:C.positional?/[?]/y:void 0},...C.custom.map(s=>{var a;return{type:"CUSTOM_PARAMETER",regex:PT(s.regex),key:(a=s.key)!=null?a:c=>c}})])}validRules(E){return E.filter(r=>!!r.regex)}},mE=E=>tn(E.toUpperCase()),wu=new Map,sF=E=>{let r=wu.get(E);return r||(r=CF(E),wu.set(E,r)),r},CF=E=>({tokenizer:new uF(E.tokenizerOptions,E.name),formatOptions:oF(E.formatOptions)}),oF=E=>({alwaysDenseOperators:E.alwaysDenseOperators||[],onelineClauses:Object.fromEntries(E.onelineClauses.map(r=>[r,!0]))});function aF(E){return E.indentStyle==="tabularLeft"||E.indentStyle==="tabularRight"?" ".repeat(10):E.useTabs?"	":" ".repeat(E.tabWidth)}function gr(E){return E.indentStyle==="tabularLeft"||E.indentStyle==="tabularRight"}var LF=class{constructor(E){this.params=E,this.index=0}get({key:E,text:r}){return this.params?E?this.params[E]:this.params[this.index++]:r}getPositionalParameterIndex(){return this.index}setPositionalParameterIndex(E){this.index=E}};function _F(E){return E.map(DF).map(lF).map(cF).map(fF).map(PF)}var DF=(E,r,n)=>{if(Es(E.type)){let A=pF(n,r);if(A&&A.text===".")return QE(vE({},E),{type:"IDENTIFIER",text:E.raw})}return E},lF=(E,r,n)=>{if(E.type==="RESERVED_FUNCTION_NAME"){let A=vr(n,r);if(!A||!Rs(A))return QE(vE({},E),{type:"RESERVED_KEYWORD"})}return E},cF=(E,r,n)=>{if(E.type==="RESERVED_DATA_TYPE"){let A=vr(n,r);if(A&&Rs(A))return QE(vE({},E),{type:"RESERVED_PARAMETERIZED_DATA_TYPE"})}return E},fF=(E,r,n)=>{if(E.type==="IDENTIFIER"){let A=vr(n,r);if(A&&Ss(A))return QE(vE({},E),{type:"ARRAY_IDENTIFIER"})}return E},PF=(E,r,n)=>{if(E.type==="RESERVED_DATA_TYPE"){let A=vr(n,r);if(A&&Ss(A))return QE(vE({},E),{type:"ARRAY_KEYWORD"})}return E},pF=(E,r)=>vr(E,r,-1),vr=(E,r,n=1)=>{let A=1;for(;E[r+A*n]&&MF(E[r+A*n]);)A++;return E[r+A*n]},Rs=E=>E.type==="OPEN_PAREN"&&E.text==="(",Ss=E=>E.type==="OPEN_PAREN"&&E.text==="[",MF=E=>E.type==="BLOCK_COMMENT"||E.type==="LINE_COMMENT",is=class{constructor(E){this.tokenize=E,this.index=0,this.tokens=[],this.input=""}reset(E,r){this.input=E,this.index=0,this.tokens=this.tokenize(E)}next(){return this.tokens[this.index++]}save(){}formatError(E){let{line:r,col:n}=ns(this.input,E.start);return`Parse error at token: ${E.text} at line ${r} column ${n}`}has(E){return E in zu}};function mR(E){return E[0]}var w=new is(E=>[]),cT=([[E]])=>E,HE=E=>({type:"keyword",tokenType:E.type,text:E.text,raw:E.raw}),Ku=E=>({type:"data_type",text:E.text,raw:E.raw}),YE=(E,{leading:r,trailing:n})=>(r?.length&&(E=QE(vE({},E),{leadingComments:r})),n?.length&&(E=QE(vE({},E),{trailingComments:n})),E),UF=(E,{leading:r,trailing:n})=>{if(r?.length){let[A,...S]=E;E=[YE(A,{leading:r}),...S]}if(n?.length){let A=E.slice(0,-1),S=E[E.length-1];E=[...A,YE(S,{trailing:n})]}return E},hF={Lexer:w,ParserRules:[{name:"main$ebnf$1",symbols:[]},{name:"main$ebnf$1",symbols:["main$ebnf$1","statement"],postprocess:E=>E[0].concat([E[1]])},{name:"main",symbols:["main$ebnf$1"],postprocess:([E])=>{let r=E[E.length-1];return r&&!r.hasSemicolon?r.children.length>0?E:E.slice(0,-1):E}},{name:"statement$subexpression$1",symbols:[w.has("DELIMITER")?{type:"DELIMITER"}:DELIMITER]},{name:"statement$subexpression$1",symbols:[w.has("EOF")?{type:"EOF"}:EOF]},{name:"statement",symbols:["expressions_or_clauses","statement$subexpression$1"],postprocess:([E,[r]])=>({type:"statement",children:E,hasSemicolon:r.type==="DELIMITER"})},{name:"expressions_or_clauses$ebnf$1",symbols:[]},{name:"expressions_or_clauses$ebnf$1",symbols:["expressions_or_clauses$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"expressions_or_clauses$ebnf$2",symbols:[]},{name:"expressions_or_clauses$ebnf$2",symbols:["expressions_or_clauses$ebnf$2","clause"],postprocess:E=>E[0].concat([E[1]])},{name:"expressions_or_clauses",symbols:["expressions_or_clauses$ebnf$1","expressions_or_clauses$ebnf$2"],postprocess:([E,r])=>[...E,...r]},{name:"clause$subexpression$1",symbols:["limit_clause"]},{name:"clause$subexpression$1",symbols:["select_clause"]},{name:"clause$subexpression$1",symbols:["other_clause"]},{name:"clause$subexpression$1",symbols:["set_operation"]},{name:"clause",symbols:["clause$subexpression$1"],postprocess:cT},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["free_form_sql"]},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"limit_clause$ebnf$1$subexpression$1",symbols:[w.has("COMMA")?{type:"COMMA"}:COMMA,"limit_clause$ebnf$1$subexpression$1$ebnf$1"]},{name:"limit_clause$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1"],postprocess:mR},{name:"limit_clause$ebnf$1",symbols:[],postprocess:()=>null},{name:"limit_clause",symbols:[w.has("LIMIT")?{type:"LIMIT"}:LIMIT,"_","expression_chain_","limit_clause$ebnf$1"],postprocess:([E,r,n,A])=>{if(A){let[S,O]=A;return{type:"limit_clause",limitKw:YE(HE(E),{trailing:r}),offset:n,count:O}}else return{type:"limit_clause",limitKw:YE(HE(E),{trailing:r}),count:n}}},{name:"select_clause$subexpression$1$ebnf$1",symbols:[]},{name:"select_clause$subexpression$1$ebnf$1",symbols:["select_clause$subexpression$1$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"select_clause$subexpression$1",symbols:["all_columns_asterisk","select_clause$subexpression$1$ebnf$1"]},{name:"select_clause$subexpression$1$ebnf$2",symbols:[]},{name:"select_clause$subexpression$1$ebnf$2",symbols:["select_clause$subexpression$1$ebnf$2","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"select_clause$subexpression$1",symbols:["asteriskless_free_form_sql","select_clause$subexpression$1$ebnf$2"]},{name:"select_clause",symbols:[w.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT,"select_clause$subexpression$1"],postprocess:([E,[r,n]])=>({type:"clause",nameKw:HE(E),children:[r,...n]})},{name:"select_clause",symbols:[w.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT],postprocess:([E])=>({type:"clause",nameKw:HE(E),children:[]})},{name:"all_columns_asterisk",symbols:[w.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK],postprocess:()=>({type:"all_columns_asterisk"})},{name:"other_clause$ebnf$1",symbols:[]},{name:"other_clause$ebnf$1",symbols:["other_clause$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"other_clause",symbols:[w.has("RESERVED_CLAUSE")?{type:"RESERVED_CLAUSE"}:RESERVED_CLAUSE,"other_clause$ebnf$1"],postprocess:([E,r])=>({type:"clause",nameKw:HE(E),children:r})},{name:"set_operation$ebnf$1",symbols:[]},{name:"set_operation$ebnf$1",symbols:["set_operation$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"set_operation",symbols:[w.has("RESERVED_SET_OPERATION")?{type:"RESERVED_SET_OPERATION"}:RESERVED_SET_OPERATION,"set_operation$ebnf$1"],postprocess:([E,r])=>({type:"set_operation",nameKw:HE(E),children:r})},{name:"expression_chain_$ebnf$1",symbols:["expression_with_comments_"]},{name:"expression_chain_$ebnf$1",symbols:["expression_chain_$ebnf$1","expression_with_comments_"],postprocess:E=>E[0].concat([E[1]])},{name:"expression_chain_",symbols:["expression_chain_$ebnf$1"],postprocess:mR},{name:"expression_chain$ebnf$1",symbols:[]},{name:"expression_chain$ebnf$1",symbols:["expression_chain$ebnf$1","_expression_with_comments"],postprocess:E=>E[0].concat([E[1]])},{name:"expression_chain",symbols:["expression","expression_chain$ebnf$1"],postprocess:([E,r])=>[E,...r]},{name:"andless_expression_chain$ebnf$1",symbols:[]},{name:"andless_expression_chain$ebnf$1",symbols:["andless_expression_chain$ebnf$1","_andless_expression_with_comments"],postprocess:E=>E[0].concat([E[1]])},{name:"andless_expression_chain",symbols:["andless_expression","andless_expression_chain$ebnf$1"],postprocess:([E,r])=>[E,...r]},{name:"expression_with_comments_",symbols:["expression","_"],postprocess:([E,r])=>YE(E,{trailing:r})},{name:"_expression_with_comments",symbols:["_","expression"],postprocess:([E,r])=>YE(r,{leading:E})},{name:"_andless_expression_with_comments",symbols:["_","andless_expression"],postprocess:([E,r])=>YE(r,{leading:E})},{name:"free_form_sql$subexpression$1",symbols:["asteriskless_free_form_sql"]},{name:"free_form_sql$subexpression$1",symbols:["asterisk"]},{name:"free_form_sql",symbols:["free_form_sql$subexpression$1"],postprocess:cT},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["logic_operator"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comma"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comment"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["other_keyword"]},{name:"asteriskless_free_form_sql",symbols:["asteriskless_free_form_sql$subexpression$1"],postprocess:cT},{name:"expression$subexpression$1",symbols:["andless_expression"]},{name:"expression$subexpression$1",symbols:["logic_operator"]},{name:"expression",symbols:["expression$subexpression$1"],postprocess:cT},{name:"andless_expression$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"andless_expression$subexpression$1",symbols:["asterisk"]},{name:"andless_expression",symbols:["andless_expression$subexpression$1"],postprocess:cT},{name:"asteriskless_andless_expression$subexpression$1",symbols:["atomic_expression"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["between_predicate"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["case_expression"]},{name:"asteriskless_andless_expression",symbols:["asteriskless_andless_expression$subexpression$1"],postprocess:cT},{name:"atomic_expression$subexpression$1",symbols:["array_subscript"]},{name:"atomic_expression$subexpression$1",symbols:["function_call"]},{name:"atomic_expression$subexpression$1",symbols:["property_access"]},{name:"atomic_expression$subexpression$1",symbols:["parenthesis"]},{name:"atomic_expression$subexpression$1",symbols:["curly_braces"]},{name:"atomic_expression$subexpression$1",symbols:["square_brackets"]},{name:"atomic_expression$subexpression$1",symbols:["operator"]},{name:"atomic_expression$subexpression$1",symbols:["identifier"]},{name:"atomic_expression$subexpression$1",symbols:["parameter"]},{name:"atomic_expression$subexpression$1",symbols:["literal"]},{name:"atomic_expression$subexpression$1",symbols:["data_type"]},{name:"atomic_expression$subexpression$1",symbols:["keyword"]},{name:"atomic_expression",symbols:["atomic_expression$subexpression$1"],postprocess:cT},{name:"array_subscript",symbols:[w.has("ARRAY_IDENTIFIER")?{type:"ARRAY_IDENTIFIER"}:ARRAY_IDENTIFIER,"_","square_brackets"],postprocess:([E,r,n])=>({type:"array_subscript",array:YE({type:"identifier",quoted:!1,text:E.text},{trailing:r}),parenthesis:n})},{name:"array_subscript",symbols:[w.has("ARRAY_KEYWORD")?{type:"ARRAY_KEYWORD"}:ARRAY_KEYWORD,"_","square_brackets"],postprocess:([E,r,n])=>({type:"array_subscript",array:YE(HE(E),{trailing:r}),parenthesis:n})},{name:"function_call",symbols:[w.has("RESERVED_FUNCTION_NAME")?{type:"RESERVED_FUNCTION_NAME"}:RESERVED_FUNCTION_NAME,"_","parenthesis"],postprocess:([E,r,n])=>({type:"function_call",nameKw:YE(HE(E),{trailing:r}),parenthesis:n})},{name:"parenthesis",symbols:[{literal:"("},"expressions_or_clauses",{literal:")"}],postprocess:([E,r,n])=>({type:"parenthesis",children:r,openParen:"(",closeParen:")"})},{name:"curly_braces$ebnf$1",symbols:[]},{name:"curly_braces$ebnf$1",symbols:["curly_braces$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"curly_braces",symbols:[{literal:"{"},"curly_braces$ebnf$1",{literal:"}"}],postprocess:([E,r,n])=>({type:"parenthesis",children:r,openParen:"{",closeParen:"}"})},{name:"square_brackets$ebnf$1",symbols:[]},{name:"square_brackets$ebnf$1",symbols:["square_brackets$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"square_brackets",symbols:[{literal:"["},"square_brackets$ebnf$1",{literal:"]"}],postprocess:([E,r,n])=>({type:"parenthesis",children:r,openParen:"[",closeParen:"]"})},{name:"property_access$subexpression$1",symbols:["identifier"]},{name:"property_access$subexpression$1",symbols:["array_subscript"]},{name:"property_access$subexpression$1",symbols:["all_columns_asterisk"]},{name:"property_access$subexpression$1",symbols:["parameter"]},{name:"property_access",symbols:["atomic_expression","_",w.has("DOT")?{type:"DOT"}:DOT,"_","property_access$subexpression$1"],postprocess:([E,r,n,A,[S]])=>({type:"property_access",object:YE(E,{trailing:r}),property:YE(S,{leading:A})})},{name:"between_predicate",symbols:[w.has("BETWEEN")?{type:"BETWEEN"}:BETWEEN,"_","andless_expression_chain","_",w.has("AND")?{type:"AND"}:AND,"_","andless_expression"],postprocess:([E,r,n,A,S,O,I])=>({type:"between_predicate",betweenKw:HE(E),expr1:UF(n,{leading:r,trailing:A}),andKw:HE(S),expr2:[YE(I,{leading:O})]})},{name:"case_expression$ebnf$1",symbols:["expression_chain_"],postprocess:mR},{name:"case_expression$ebnf$1",symbols:[],postprocess:()=>null},{name:"case_expression$ebnf$2",symbols:[]},{name:"case_expression$ebnf$2",symbols:["case_expression$ebnf$2","case_clause"],postprocess:E=>E[0].concat([E[1]])},{name:"case_expression",symbols:[w.has("CASE")?{type:"CASE"}:CASE,"_","case_expression$ebnf$1","case_expression$ebnf$2",w.has("END")?{type:"END"}:END],postprocess:([E,r,n,A,S])=>({type:"case_expression",caseKw:YE(HE(E),{trailing:r}),endKw:HE(S),expr:n||[],clauses:A})},{name:"case_clause",symbols:[w.has("WHEN")?{type:"WHEN"}:WHEN,"_","expression_chain_",w.has("THEN")?{type:"THEN"}:THEN,"_","expression_chain_"],postprocess:([E,r,n,A,S,O])=>({type:"case_when",whenKw:YE(HE(E),{trailing:r}),thenKw:YE(HE(A),{trailing:S}),condition:n,result:O})},{name:"case_clause",symbols:[w.has("ELSE")?{type:"ELSE"}:ELSE,"_","expression_chain_"],postprocess:([E,r,n])=>({type:"case_else",elseKw:YE(HE(E),{trailing:r}),result:n})},{name:"comma$subexpression$1",symbols:[w.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"comma",symbols:["comma$subexpression$1"],postprocess:([[E]])=>({type:"comma"})},{name:"asterisk$subexpression$1",symbols:[w.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK]},{name:"asterisk",symbols:["asterisk$subexpression$1"],postprocess:([[E]])=>({type:"operator",text:E.text})},{name:"operator$subexpression$1",symbols:[w.has("OPERATOR")?{type:"OPERATOR"}:OPERATOR]},{name:"operator",symbols:["operator$subexpression$1"],postprocess:([[E]])=>({type:"operator",text:E.text})},{name:"identifier$subexpression$1",symbols:[w.has("IDENTIFIER")?{type:"IDENTIFIER"}:IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[w.has("QUOTED_IDENTIFIER")?{type:"QUOTED_IDENTIFIER"}:QUOTED_IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[w.has("VARIABLE")?{type:"VARIABLE"}:VARIABLE]},{name:"identifier",symbols:["identifier$subexpression$1"],postprocess:([[E]])=>({type:"identifier",quoted:E.type!=="IDENTIFIER",text:E.text})},{name:"parameter$subexpression$1",symbols:[w.has("NAMED_PARAMETER")?{type:"NAMED_PARAMETER"}:NAMED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[w.has("QUOTED_PARAMETER")?{type:"QUOTED_PARAMETER"}:QUOTED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[w.has("NUMBERED_PARAMETER")?{type:"NUMBERED_PARAMETER"}:NUMBERED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[w.has("POSITIONAL_PARAMETER")?{type:"POSITIONAL_PARAMETER"}:POSITIONAL_PARAMETER]},{name:"parameter$subexpression$1",symbols:[w.has("CUSTOM_PARAMETER")?{type:"CUSTOM_PARAMETER"}:CUSTOM_PARAMETER]},{name:"parameter",symbols:["parameter$subexpression$1"],postprocess:([[E]])=>({type:"parameter",key:E.key,text:E.text})},{name:"literal$subexpression$1",symbols:[w.has("NUMBER")?{type:"NUMBER"}:NUMBER]},{name:"literal$subexpression$1",symbols:[w.has("STRING")?{type:"STRING"}:STRING]},{name:"literal",symbols:["literal$subexpression$1"],postprocess:([[E]])=>({type:"literal",text:E.text})},{name:"keyword$subexpression$1",symbols:[w.has("RESERVED_KEYWORD")?{type:"RESERVED_KEYWORD"}:RESERVED_KEYWORD]},{name:"keyword$subexpression$1",symbols:[w.has("RESERVED_PHRASE")?{type:"RESERVED_PHRASE"}:RESERVED_PHRASE]},{name:"keyword$subexpression$1",symbols:[w.has("RESERVED_JOIN")?{type:"RESERVED_JOIN"}:RESERVED_JOIN]},{name:"keyword",symbols:["keyword$subexpression$1"],postprocess:([[E]])=>HE(E)},{name:"data_type$subexpression$1",symbols:[w.has("RESERVED_DATA_TYPE")?{type:"RESERVED_DATA_TYPE"}:RESERVED_DATA_TYPE]},{name:"data_type",symbols:["data_type$subexpression$1"],postprocess:([[E]])=>Ku(E)},{name:"data_type",symbols:[w.has("RESERVED_PARAMETERIZED_DATA_TYPE")?{type:"RESERVED_PARAMETERIZED_DATA_TYPE"}:RESERVED_PARAMETERIZED_DATA_TYPE,"_","parenthesis"],postprocess:([E,r,n])=>({type:"parameterized_data_type",dataType:YE(Ku(E),{trailing:r}),parenthesis:n})},{name:"logic_operator$subexpression$1",symbols:[w.has("AND")?{type:"AND"}:AND]},{name:"logic_operator$subexpression$1",symbols:[w.has("OR")?{type:"OR"}:OR]},{name:"logic_operator$subexpression$1",symbols:[w.has("XOR")?{type:"XOR"}:XOR]},{name:"logic_operator",symbols:["logic_operator$subexpression$1"],postprocess:([[E]])=>HE(E)},{name:"other_keyword$subexpression$1",symbols:[w.has("WHEN")?{type:"WHEN"}:WHEN]},{name:"other_keyword$subexpression$1",symbols:[w.has("THEN")?{type:"THEN"}:THEN]},{name:"other_keyword$subexpression$1",symbols:[w.has("ELSE")?{type:"ELSE"}:ELSE]},{name:"other_keyword$subexpression$1",symbols:[w.has("END")?{type:"END"}:END]},{name:"other_keyword",symbols:["other_keyword$subexpression$1"],postprocess:([[E]])=>HE(E)},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","comment"],postprocess:E=>E[0].concat([E[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:([E])=>E},{name:"comment",symbols:[w.has("LINE_COMMENT")?{type:"LINE_COMMENT"}:LINE_COMMENT],postprocess:([E])=>({type:"line_comment",text:E.text,precedingWhitespace:E.precedingWhitespace})},{name:"comment",symbols:[w.has("BLOCK_COMMENT")?{type:"BLOCK_COMMENT"}:BLOCK_COMMENT],postprocess:([E])=>({type:"block_comment",text:E.text,precedingWhitespace:E.precedingWhitespace})}],ParserStart:"main"},FF=hF,{Parser:dF,Grammar:GF}=As.default;function BF(E){let r={},n=new is(S=>[..._F(E.tokenize(S,r)),ju(S.length)]),A=new dF(GF.fromCompiled(FF),{lexer:n});return{parse:(S,O)=>{r=O;let{results:I}=A.feed(S);if(I.length===1)return I[0];throw I.length===0?new Error("Parse error: Invalid SQL"):new Error(`Parse error: Ambiguous grammar
${JSON.stringify(I,void 0,2)}`)}}}var Os=class{constructor(E){this.indentation=E,this.items=[]}add(...E){for(let r of E)switch(r){case 0:this.items.push(0);break;case 1:this.trimHorizontalWhitespace();break;case 2:this.trimWhitespace();break;case 3:this.trimHorizontalWhitespace(),this.addNewline(3);break;case 4:this.trimHorizontalWhitespace(),this.addNewline(4);break;case 5:this.addIndentation();break;case 6:this.items.push(6);break;default:this.items.push(r)}}trimHorizontalWhitespace(){for(;mF(xr(this.items));)this.items.pop()}trimWhitespace(){for(;HF(xr(this.items));)this.items.pop()}addNewline(E){if(this.items.length>0)switch(xr(this.items)){case 3:this.items.pop(),this.items.push(E);break;case 4:break;default:this.items.push(E);break}}addIndentation(){for(let E=0;E<this.indentation.getLevel();E++)this.items.push(6)}toString(){return this.items.map(E=>this.itemToString(E)).join("")}getLayoutItems(){return this.items}itemToString(E){switch(E){case 0:return" ";case 3:case 4:return`
`;case 6:return this.indentation.getSingleIndent();default:return E}}},mF=E=>E===0||E===6,HF=E=>E===0||E===6||E===3;function Ju(E,r){if(r==="standard")return E;let n=[];return E.length>=10&&E.includes(" ")&&([E,...n]=E.split(" ")),r==="tabularLeft"?E=E.padEnd(9," "):E=E.padStart(9," "),E+["",...n].join(" ")}function $u(E){return TU(E)||E==="RESERVED_CLAUSE"||E==="RESERVED_SELECT"||E==="RESERVED_SET_OPERATION"||E==="RESERVED_JOIN"||E==="LIMIT"}var HR="top-level",YF="block-level",Is=class{constructor(E){this.indent=E,this.indentTypes=[]}getSingleIndent(){return this.indent}getLevel(){return this.indentTypes.length}increaseTopLevel(){this.indentTypes.push(HR)}increaseBlockLevel(){this.indentTypes.push(YF)}decreaseTopLevel(){this.indentTypes.length>0&&xr(this.indentTypes)===HR&&this.indentTypes.pop()}decreaseBlockLevel(){for(;this.indentTypes.length>0&&this.indentTypes.pop()===HR;);}},gF=class extends Os{constructor(E){super(new Is("")),this.expressionWidth=E,this.length=0,this.trailingSpace=!1}add(...E){if(E.forEach(r=>this.addToLength(r)),this.length>this.expressionWidth)throw new YR;super.add(...E)}addToLength(E){if(typeof E=="string")this.length+=E.length,this.trailingSpace=!1;else{if(E===4||E===3)throw new YR;E===5||E===6||E===0?this.trailingSpace||(this.length++,this.trailingSpace=!0):(E===2||E===1)&&this.trailingSpace&&(this.trailingSpace=!1,this.length--)}}},YR=class extends Error{},xF=class gR{constructor({cfg:r,dialectCfg:n,params:A,layout:S,inline:O=!1}){this.inline=!1,this.nodes=[],this.index=-1,this.cfg=r,this.dialectCfg=n,this.inline=O,this.params=A,this.layout=S}format(r){for(this.nodes=r,this.index=0;this.index<this.nodes.length;this.index++)this.formatNode(this.nodes[this.index]);return this.layout}formatNode(r){this.formatComments(r.leadingComments),this.formatNodeWithoutComments(r),this.formatComments(r.trailingComments)}formatNodeWithoutComments(r){switch(r.type){case"function_call":return this.formatFunctionCall(r);case"parameterized_data_type":return this.formatParameterizedDataType(r);case"array_subscript":return this.formatArraySubscript(r);case"property_access":return this.formatPropertyAccess(r);case"parenthesis":return this.formatParenthesis(r);case"between_predicate":return this.formatBetweenPredicate(r);case"case_expression":return this.formatCaseExpression(r);case"case_when":return this.formatCaseWhen(r);case"case_else":return this.formatCaseElse(r);case"clause":return this.formatClause(r);case"set_operation":return this.formatSetOperation(r);case"limit_clause":return this.formatLimitClause(r);case"all_columns_asterisk":return this.formatAllColumnsAsterisk(r);case"literal":return this.formatLiteral(r);case"identifier":return this.formatIdentifier(r);case"parameter":return this.formatParameter(r);case"operator":return this.formatOperator(r);case"comma":return this.formatComma(r);case"line_comment":return this.formatLineComment(r);case"block_comment":return this.formatBlockComment(r);case"data_type":return this.formatDataType(r);case"keyword":return this.formatKeywordNode(r)}}formatFunctionCall(r){this.withComments(r.nameKw,()=>{this.layout.add(this.showFunctionKw(r.nameKw))}),this.formatNode(r.parenthesis)}formatParameterizedDataType(r){this.withComments(r.dataType,()=>{this.layout.add(this.showDataType(r.dataType))}),this.formatNode(r.parenthesis)}formatArraySubscript(r){let n;switch(r.array.type){case"data_type":n=this.showDataType(r.array);break;case"keyword":n=this.showKw(r.array);break;default:n=this.showIdentifier(r.array);break}this.withComments(r.array,()=>{this.layout.add(n)}),this.formatNode(r.parenthesis)}formatPropertyAccess(r){this.formatNode(r.object),this.layout.add(1,"."),this.formatNode(r.property)}formatParenthesis(r){let n=this.formatInlineExpression(r.children);n?(this.layout.add(r.openParen),this.layout.add(...n.getLayoutItems()),this.layout.add(1,r.closeParen,0)):(this.layout.add(r.openParen,3),gr(this.cfg)?(this.layout.add(5),this.layout=this.formatSubExpression(r.children)):(this.layout.indentation.increaseBlockLevel(),this.layout.add(5),this.layout=this.formatSubExpression(r.children),this.layout.indentation.decreaseBlockLevel()),this.layout.add(3,5,r.closeParen,0))}formatBetweenPredicate(r){this.layout.add(this.showKw(r.betweenKw),0),this.layout=this.formatSubExpression(r.expr1),this.layout.add(1,0,this.showNonTabularKw(r.andKw),0),this.layout=this.formatSubExpression(r.expr2),this.layout.add(0)}formatCaseExpression(r){this.formatNode(r.caseKw),this.layout.indentation.increaseBlockLevel(),this.layout=this.formatSubExpression(r.expr),this.layout=this.formatSubExpression(r.clauses),this.layout.indentation.decreaseBlockLevel(),this.layout.add(3,5),this.formatNode(r.endKw)}formatCaseWhen(r){this.layout.add(3,5),this.formatNode(r.whenKw),this.layout=this.formatSubExpression(r.condition),this.formatNode(r.thenKw),this.layout=this.formatSubExpression(r.result)}formatCaseElse(r){this.layout.add(3,5),this.formatNode(r.elseKw),this.layout=this.formatSubExpression(r.result)}formatClause(r){this.isOnelineClause(r)?this.formatClauseInOnelineStyle(r):gr(this.cfg)?this.formatClauseInTabularStyle(r):this.formatClauseInIndentedStyle(r)}isOnelineClause(r){return this.dialectCfg.onelineClauses[r.nameKw.text]}formatClauseInIndentedStyle(r){this.layout.add(3,5,this.showKw(r.nameKw),3),this.layout.indentation.increaseTopLevel(),this.layout.add(5),this.layout=this.formatSubExpression(r.children),this.layout.indentation.decreaseTopLevel()}formatClauseInOnelineStyle(r){this.layout.add(3,5,this.showKw(r.nameKw),0),this.layout=this.formatSubExpression(r.children)}formatClauseInTabularStyle(r){this.layout.add(3,5,this.showKw(r.nameKw),0),this.layout.indentation.increaseTopLevel(),this.layout=this.formatSubExpression(r.children),this.layout.indentation.decreaseTopLevel()}formatSetOperation(r){this.layout.add(3,5,this.showKw(r.nameKw),3),this.layout.add(5),this.layout=this.formatSubExpression(r.children)}formatLimitClause(r){this.withComments(r.limitKw,()=>{this.layout.add(3,5,this.showKw(r.limitKw))}),this.layout.indentation.increaseTopLevel(),gr(this.cfg)?this.layout.add(0):this.layout.add(3,5),r.offset?(this.layout=this.formatSubExpression(r.offset),this.layout.add(1,",",0),this.layout=this.formatSubExpression(r.count)):this.layout=this.formatSubExpression(r.count),this.layout.indentation.decreaseTopLevel()}formatAllColumnsAsterisk(r){this.layout.add("*",0)}formatLiteral(r){this.layout.add(r.text,0)}formatIdentifier(r){this.layout.add(this.showIdentifier(r),0)}formatParameter(r){this.layout.add(this.params.get(r),0)}formatOperator({text:r}){this.cfg.denseOperators||this.dialectCfg.alwaysDenseOperators.includes(r)?this.layout.add(1,r):r===":"?this.layout.add(1,r,0):this.layout.add(r,0)}formatComma(r){this.inline?this.layout.add(1,",",0):this.layout.add(1,",",3,5)}withComments(r,n){this.formatComments(r.leadingComments),n(),this.formatComments(r.trailingComments)}formatComments(r){r&&r.forEach(n=>{n.type==="line_comment"?this.formatLineComment(n):this.formatBlockComment(n)})}formatLineComment(r){GR(r.precedingWhitespace||"")?this.layout.add(3,5,r.text,4,5):this.layout.getLayoutItems().length>0?this.layout.add(2,0,r.text,4,5):this.layout.add(r.text,4,5)}formatBlockComment(r){this.isMultilineBlockComment(r)?(this.splitBlockComment(r.text).forEach(n=>{this.layout.add(3,5,n)}),this.layout.add(3,5)):this.layout.add(r.text,0)}isMultilineBlockComment(r){return GR(r.text)||GR(r.precedingWhitespace||"")}isDocComment(r){let n=r.split(/\n/);return/^\/\*\*?$/.test(n[0])&&n.slice(1,n.length-1).every(A=>/^\s*\*/.test(A))&&/^\s*\*\/$/.test(xr(n))}splitBlockComment(r){return this.isDocComment(r)?r.split(/\n/).map(n=>/^\s*\*/.test(n)?" "+n.replace(/^\s*/,""):n):r.split(/\n/).map(n=>n.replace(/^\s*/,""))}formatSubExpression(r){return new gR({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:this.layout,inline:this.inline}).format(r)}formatInlineExpression(r){let n=this.params.getPositionalParameterIndex();try{return new gR({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:new gF(this.cfg.expressionWidth),inline:!0}).format(r)}catch(A){if(A instanceof YR){this.params.setPositionalParameterIndex(n);return}else throw A}}formatKeywordNode(r){switch(r.tokenType){case"RESERVED_JOIN":return this.formatJoin(r);case"AND":case"OR":case"XOR":return this.formatLogicalOperator(r);default:return this.formatKeyword(r)}}formatJoin(r){gr(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(3,5,this.showKw(r),0),this.layout.indentation.increaseTopLevel()):this.layout.add(3,5,this.showKw(r),0)}formatKeyword(r){this.layout.add(this.showKw(r),0)}formatLogicalOperator(r){this.cfg.logicalOperatorNewline==="before"?gr(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(3,5,this.showKw(r),0),this.layout.indentation.increaseTopLevel()):this.layout.add(3,5,this.showKw(r),0):this.layout.add(this.showKw(r),3,5)}formatDataType(r){this.layout.add(this.showDataType(r),0)}showKw(r){return $u(r.tokenType)?Ju(this.showNonTabularKw(r),this.cfg.indentStyle):this.showNonTabularKw(r)}showNonTabularKw(r){switch(this.cfg.keywordCase){case"preserve":return tn(r.raw);case"upper":return r.text;case"lower":return r.text.toLowerCase()}}showFunctionKw(r){return $u(r.tokenType)?Ju(this.showNonTabularFunctionKw(r),this.cfg.indentStyle):this.showNonTabularFunctionKw(r)}showNonTabularFunctionKw(r){switch(this.cfg.functionCase){case"preserve":return tn(r.raw);case"upper":return r.text;case"lower":return r.text.toLowerCase()}}showIdentifier(r){if(r.quoted)return r.text;switch(this.cfg.identifierCase){case"preserve":return r.text;case"upper":return r.text.toUpperCase();case"lower":return r.text.toLowerCase()}}showDataType(r){switch(this.cfg.dataTypeCase){case"preserve":return tn(r.raw);case"upper":return r.text;case"lower":return r.text.toLowerCase()}}},vF=class{constructor(E,r){this.dialect=E,this.cfg=r,this.params=new LF(this.cfg.params)}format(E){let r=this.parse(E);return this.formatAst(r).trimEnd()}parse(E){return BF(this.dialect.tokenizer).parse(E,this.cfg.paramTypes||{})}formatAst(E){return E.map(r=>this.formatStatement(r)).join(`
`.repeat(this.cfg.linesBetweenQueries+1))}formatStatement(E){let r=new xF({cfg:this.cfg,dialectCfg:this.dialect.formatOptions,params:this.params,layout:new Os(new Is(aF(this.cfg)))}).format(E.children);return E.hasSemicolon&&(this.cfg.newlineBeforeSemicolon?r.add(3,";"):r.add(2,";")),r.toString()}},xR=class extends Error{};function yF(E){let r=["multilineLists","newlineBeforeOpenParen","newlineBeforeCloseParen","aliasAs","commaPosition","tabulateAlias"];for(let n of r)if(n in E)throw new xR(`${n} config is no more supported.`);if(E.expressionWidth<=0)throw new xR(`expressionWidth config must be positive number. Received ${E.expressionWidth} instead.`);return E.params&&!VF(E.params)&&console.warn('WARNING: All "params" option values should be strings.'),E}function VF(E){return(E instanceof Array?E:Object.values(E)).every(n=>typeof n=="string")}var Ns={bigquery:"bigquery",db2:"db2",db2i:"db2i",hive:"hive",mariadb:"mariadb",mysql:"mysql",n1ql:"n1ql",plsql:"plsql",postgresql:"postgresql",redshift:"redshift",spark:"spark",sqlite:"sqlite",sql:"sql",trino:"trino",transactsql:"transactsql",tsql:"transactsql",singlestoredb:"singlestoredb",snowflake:"snowflake"},WF=Object.keys(Ns),XF={tabWidth:2,useTabs:!1,keywordCase:"preserve",identifierCase:"preserve",dataTypeCase:"preserve",functionCase:"preserve",indentStyle:"standard",logicalOperatorNewline:"before",expressionWidth:50,linesBetweenQueries:1,denseOperators:!1,newlineBeforeSemicolon:!1},us=(E,r={})=>{if(typeof r.language=="string"&&!WF.includes(r.language))throw new xR(`Unsupported SQL dialect: ${r.language}`);let n=Ns[r.language||"sql"];return bF(E,QE(vE({},r),{dialect:Zu[n]}))},bF=(E,r)=>{var n=r,{dialect:A}=n,S=JM(n,["dialect"]);if(typeof E!="string")throw new Error("Invalid query argument. Expected string, instead got "+typeof E);let O=yF(vE(vE({},XF),S));return new vF(sF(A),O).format(E)};var ss=cE(Yr()),wF={info:{title:"Format SQL",desc:"Format SQL queries",type:["form","clipboard"],keywords:["queries","prettify"],example:"SELECT test, test, test FROM xxx WHERE xxx = 1 ORDER BY xxx LIMIT 1, 1"},run(E){try{return us(E,{keywordCase:"upper",tabWidth:2})}catch{throw Error("Invalid SQL")}}},KF={info:{title:"Minify SQL",desc:"Cleans and minifies SQL queries",type:["form","clipboard"],example:`SELECT test, test, test 
FROM xxx 
WHERE xxx = 1 
ORDER BY xxx 
LIMIT 1, 1`},run(E){try{return ss.default.sqlmin(E)}catch{throw Error("Invalid SQL")}}};var WR={};ve(WR,{base64Decode:()=>Od,base64Encode:()=>id,hexToRgb:()=>Id,jwt:()=>ud,rgbToHex:()=>Nd,urlDecode:()=>Cd,urlEncode:()=>sd});var JF=typeof atob=="function",$F=typeof btoa=="function",Er=typeof Buffer=="function",Cs=typeof TextDecoder=="function"?new TextDecoder:void 0,os=typeof TextEncoder=="function"?new TextEncoder:void 0,QF="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",yr=Array.prototype.slice.call(QF),An=(E=>{let r={};return E.forEach((n,A)=>r[n]=A),r})(yr),qF=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,yE=String.fromCharCode.bind(String),as=typeof Uint8Array.from=="function"?Uint8Array.from.bind(Uint8Array):(E,r=n=>n)=>new Uint8Array(Array.prototype.slice.call(E,0).map(r)),kF=E=>E.replace(/=/g,"").replace(/[+\/]/g,r=>r=="+"?"-":"_"),_s=E=>E.replace(/[^A-Za-z0-9\+\/]/g,""),ZF=E=>{let r,n,A,S,O="",I=E.length%3;for(let C=0;C<E.length;){if((n=E.charCodeAt(C++))>255||(A=E.charCodeAt(C++))>255||(S=E.charCodeAt(C++))>255)throw new TypeError("invalid character found");r=n<<16|A<<8|S,O+=yr[r>>18&63]+yr[r>>12&63]+yr[r>>6&63]+yr[r&63]}return I?O.slice(0,I-3)+"===".substring(I):O},Ds=$F?E=>btoa(E):Er?E=>Buffer.from(E,"binary").toString("base64"):ZF,zF=Er?E=>Buffer.from(E).toString("base64"):E=>{let n=[];for(let A=0,S=E.length;A<S;A+=4096)n.push(yE.apply(null,E.subarray(A,A+4096)));return Ds(n.join(""))};var jF=E=>{if(E.length<2){var r=E.charCodeAt(0);return r<128?E:r<2048?yE(192|r>>>6)+yE(128|r&63):yE(224|r>>>12&15)+yE(128|r>>>6&63)+yE(128|r&63)}else{var r=65536+(E.charCodeAt(0)-55296)*1024+(E.charCodeAt(1)-56320);return yE(240|r>>>18&7)+yE(128|r>>>12&63)+yE(128|r>>>6&63)+yE(128|r&63)}},Ed=/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,ed=E=>E.replace(Ed,jF),Ls=Er?E=>Buffer.from(E,"utf8").toString("base64"):os?E=>zF(os.encode(E)):E=>Ds(ed(E)),ls=(E,r=!1)=>r?kF(Ls(E)):Ls(E);var Td=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,rd=E=>{switch(E.length){case 4:var r=(7&E.charCodeAt(0))<<18|(63&E.charCodeAt(1))<<12|(63&E.charCodeAt(2))<<6|63&E.charCodeAt(3),n=r-65536;return yE((n>>>10)+55296)+yE((n&1023)+56320);case 3:return yE((15&E.charCodeAt(0))<<12|(63&E.charCodeAt(1))<<6|63&E.charCodeAt(2));default:return yE((31&E.charCodeAt(0))<<6|63&E.charCodeAt(1))}},td=E=>E.replace(Td,rd),nd=E=>{if(E=E.replace(/\s+/g,""),!qF.test(E))throw new TypeError("malformed base64.");E+="==".slice(2-(E.length&3));let r,n="",A,S;for(let O=0;O<E.length;)r=An[E.charAt(O++)]<<18|An[E.charAt(O++)]<<12|(A=An[E.charAt(O++)])<<6|(S=An[E.charAt(O++)]),n+=A===64?yE(r>>16&255):S===64?yE(r>>16&255,r>>8&255):yE(r>>16&255,r>>8&255,r&255);return n},cs=JF?E=>atob(_s(E)):Er?E=>Buffer.from(E,"base64").toString("binary"):nd,Ad=Er?E=>as(Buffer.from(E,"base64")):E=>as(cs(E),r=>r.charCodeAt(0));var Rd=Er?E=>Buffer.from(E,"base64").toString("utf8"):Cs?E=>Cs.decode(Ad(E)):E=>td(cs(E)),Sd=E=>_s(E.replace(/[-_]/g,r=>r=="-"?"+":"/")),Vr=E=>Rd(Sd(E));var id={info:{title:"Base64 Encode",desc:"Encode your text into Base64",type:["list","form","clipboard"],example:"https://www.raycast.com"},run(E){return ls(E)}},Od={info:{title:"Base64 Decode",desc:"Decode your text from Base64",type:["list","form","clipboard"],example:"aHR0cHM6Ly93d3cucmF5Y2FzdC5jb20="},run(E){return Vr(E)}};var Id={info:{title:"Hex to Rgb",desc:"Convert color in hexadecimal to RGB",type:["list","form","clipboard"],example:"#51cf75"},run(E){function r(O){return O.charAt(0)=="#"?O.substring(1,7):O}let n=parseInt(r(E).substring(0,2),16),A=parseInt(r(E).substring(2,4),16),S=parseInt(r(E).substring(4,6),16);return n.toString().concat(",").concat(A.toString()).concat(",").concat(S.toString())}},Nd={info:{title:"Rgb to Hex",desc:"Convert color in RGB to hexadecimal",type:["list","form","clipboard"],example:"81,207,117"},run(E){let r=E.includes(",")?E.split(","):E.split(" ");if(r.length!==3)throw Error("Invalid RGB format");let n="#";try{r.forEach(A=>{n+=parseInt(A).toString(16)})}catch{throw Error("Invalid RGB value")}return n.toUpperCase()}};var ud={info:{title:"JWT Decode",desc:"Converts JWTs to JSON",type:["form","clipboard"],example:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiUmF5Y2FzdCIsImlhdCI6MTUxNjIzOTAyMn0.Rq2-jOY190cFnTIsitqqY_FHLUV11fpXHGgw-ENbn9o"},run(E){let n=E.split(".");if(n.length!=3)throw Error("Invalid Token");let A=Vr(n[0]),S=Vr(n[1]),O=n[2];try{let I={header:JSON.parse(A),payload:JSON.parse(S),signature:O};return JSON.stringify(I,null,2)}catch{throw Error("Error while parsing JSON")}}};var sd={info:{title:"URL Encode",desc:"Encode URL entities in your text",type:["list","form","clipboard"],example:"https://www.raycast.com"},run(E){return encodeURIComponent(E)}},Cd={info:{title:"URL Decode",desc:"Decode URL entities in your text",type:["list","form","clipboard"],example:"https%3A%2F%2Fwww.raycast.com"},run(E){return decodeURIComponent(E)}};var XR={};ve(XR,{numberRandom:()=>od});var od={info:{title:"Random Number",desc:"Random Number in range",type:["list","form"],example:"1,100"},run(E){let r=E.split(",").map(Number),n=Math.floor(Math.random()*(r[1]-r[0]+1)+r[0]);if(isFinite(n))return String(n);throw Error("Invalid Number")}};var wR={};ve(wR,{countCharacters:()=>_d,countLines:()=>Ld,countWords:()=>ad,reverseLines:()=>fd,reverseString:()=>Pd,trim:()=>Dd,trimEnd:()=>cd,trimStart:()=>ld});var fs=cE(jA()),ad={info:{title:"Count Words",desc:"Get the word count of your text",type:["list","form","clipboard"],example:"ray cast"},run(E){if(E.trim().match(/\S+/g))return String(E.trim().match(/\S+/g)?.length);throw Error("Invalid Word")}},Ld={info:{title:"Count Lines",desc:"Get the line count of your text",type:["form","clipboard"],example:`ray
cast`},run(E){return String(E.split(`
`).length)}},_d={info:{title:"Count Characters",desc:"Get the length of your text",type:["list","form","clipboard"],example:"raycast"},run(E){return String((0,fs.size)(E))}};var Dd={info:{title:"Trim",desc:"Trims leading and trailing whitespace",type:["list","form","clipboard"],keywords:["whitespace","empty","space"],example:"    ray cat     "},run(E){return E.trim()}},ld={info:{title:"Trim Start",desc:"Trims leading whitespace",type:["list","form","clipboard"],keywords:["whitespace","empty","space"],example:"    ray cat"},run(E){return E.trimStart()}},cd={info:{title:"Trim End",desc:"Trims trailing whitespace",type:["list","form","clipboard"],keywords:["whitespace","empty","space"],example:"ray cat       "},run(E){return E.trimEnd()}};var bR=cE(Ps()),fd={info:{title:"Reverse Lines",desc:"Flips every line of your text",type:["form","clipboard"],keywords:["flip","mirror","invert"],example:"aaa bbb ccc ddd eee"},run(E){return(0,bR.reverse)(E)}},Pd={info:{title:"Reverse String",desc:"Flips of your text",type:["list","form","clipboard"],keywords:["flip","mirror","invert"],example:"aaa bbb ccc ddd eee"},run(E){return(0,bR.reverse)(E)}};var aE=require("react/jsx-runtime"),QR=null,JR=!1,pd=(0,K.getPreferenceValues)();function Us(){let[E,r]=(0,Ae.useState)();return(0,Ae.useEffect)(()=>{let n=[];Object.entries(KR).forEach(([A,S])=>{let O={title:A,items:[]};n.push(O),Object.entries(S).forEach(([,I])=>{O.items.push(I)})}),r(n)},[]),(0,aE.jsx)(K.List,{isLoading:E===void 0,children:E?.map(n=>(0,aE.jsx)(K.List.Section,{title:n.title,children:n.items.map(A=>(0,aE.jsx)(Md,{item:A},A.info.title))},n.title))})}var Md=Ae.default.memo(function(r){let{pop:n,push:A}=(0,K.useNavigation)(),S=r.item,O=S.info,I=(0,Ae.useMemo)(()=>O.keywords?.reduce((a,c)=>(c.split("")?.reduce((_,h)=>(a.push(_+h),_+h),""),a),[]),[O.keywords]);function C(a){a==="clipboard"?S.info.type.includes("list")?A((0,aE.jsx)(ps,{info:O})):A((0,aE.jsx)(Ms,{info:O})):a==="list"?A((0,aE.jsx)(ps,{info:O})):a==="form"&&A((0,aE.jsx)(Ms,{info:O}))}async function s(a){if(!JR)if(QR=S.run,a==="clipboard"){JR=!0;let c=await Ud(),_={result:"",isSuccess:!1};c&&(_=await ds(c),_.isSuccess&&(await K.Clipboard.copy(_.result),await $R(n))),JR=!1,_.isSuccess?await(0,K.showHUD)("\u2705 Result Copied to Clipboard"):(_.result&&await(0,K.showToast)(K.Toast.Style.Failure,_.result),C(a))}else C(a)}return(0,aE.jsx)(K.List.Item,{title:O.title,accessoryTitle:O.desc,keywords:I,icon:O.icon,actions:(0,aE.jsx)(K.ActionPanel,{children:O.type.map(a=>a==="list"?(0,aE.jsx)(K.Action,{title:"Run Script",icon:K.Icon.Pencil,onAction:async()=>{s("list")}},a):a==="form"?(0,aE.jsx)(K.Action,{title:"Run Script to Form",icon:K.Icon.Document,onAction:async()=>{s("form")}},a):(0,aE.jsx)(K.Action,{title:"Run Script to Clipboard",icon:K.Icon.ArrowRight,shortcut:{modifiers:["shift","cmd"],key:"enter"},onAction:async()=>{s("clipboard")}},a))})})}),hs=()=>{let[E,r]=(0,Ae.useState)({query:"",result:"",isLoading:!1,isWaiting:!1,isError:!1}),[n,A]=(0,Ae.useState)(!0);(0,Ae.useEffect)(()=>()=>{QR=null,A(!1)},[]);async function S(){if(E.query.length>0){n&&r(I=>({...I,isLoading:!0}));let O=await ds(E.query);n&&r(I=>({...I,result:O.result,isLoading:!1,isError:!O.isSuccess}))}else n&&r(O=>({...O,result:"",isError:!1}))}return(0,Ae.useEffect)(()=>{if(E.isLoading){r(O=>({...O,isWaiting:!0}));return}S()},[E.query]),(0,Ae.useEffect)(()=>{!E.isLoading&&E.isWaiting&&(r(O=>({...O,isWaiting:!1})),S())},[E.isLoading,E.isWaiting]),{content:E,setContent:r}};function Fs(E){let{pop:r}=(0,K.useNavigation)(),n=E.content,A=E.info;return!n.isError&&n.result.length>0&&(0,aE.jsx)(K.ActionPanel,{title:A.title,children:(0,aE.jsxs)(K.ActionPanel.Section,{children:[(0,aE.jsx)(K.Action,{title:"Copy Result to Clipboard",icon:K.Icon.Clipboard,onAction:async()=>{await K.Clipboard.copy(n.result),await(0,K.showHUD)("\u2705 Result Copied to Clipboard"),await $R(r)}}),(0,aE.jsx)(K.Action,{title:"Copy Query to Clipboard",icon:K.Icon.Clipboard,onAction:async()=>{await K.Clipboard.copy(n.query),await(0,K.showHUD)("\u2705 Query Copied to Clipboard"),await $R(r)}})]})})}function ps(E){let r=E.info,{content:n,setContent:A}=hs();return(0,aE.jsxs)(K.List,{navigationTitle:"ToolBox - "+r.title,isLoading:n.isLoading,searchBarPlaceholder:"Enter your query here",onSearchTextChange:S=>{A({...n,query:S})},children:[(0,aE.jsx)(K.List.Item,{title:n.result,actions:Fs({content:n,info:r}),subtitle:n.query.length<=0?"Result":"",accessoryTitle:n.query.length<=0?"Waiting for query":n.isError?"Error":"Success"}),(0,aE.jsx)(K.List.Item,{title:"",subtitle:"Example",accessoryTitle:r.example})]})}function Ms(E){let r=E.info,{content:n,setContent:A}=hs();return(0,aE.jsxs)(K.Form,{navigationTitle:"ToolBox - "+r.title,actions:Fs({content:n,info:r}),isLoading:n.isLoading,children:[(0,aE.jsx)(K.Form.TextArea,{id:"query",title:"Query",placeholder:r.example,value:n.query,onChange:S=>A({...n,query:S})}),(0,aE.jsx)(K.Form.TextArea,{id:"result",title:"Result",value:n.result})]})}async function Ud(){let{stdout:E}=await rN("pbpaste");return E.length===0?!1:E}async function ds(E){let r={result:"",isSuccess:!1};try{let n=QR?.(E);if(typeof n!="string")throw n;return r.result=n,r.isSuccess=!0,r}catch(n){return n instanceof Error?r.result=n.message:r.result="Failure",r}}var $R=async E=>{switch(pd.copy){case"back":E();break;case"exit":await(0,K.popToRoot)({clearSearchBar:!0});break;default:break}};
/*! Bundled license information:

lodash/lodash.js:
  (**
   * @license
   * Lodash <https://lodash.com/>
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   *)

esrever/esrever.js:
  (*! https://mths.be/esrever v0.2.0 by @mathias *)

js-yaml/dist/js-yaml.mjs:
  (*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT *)
*/
